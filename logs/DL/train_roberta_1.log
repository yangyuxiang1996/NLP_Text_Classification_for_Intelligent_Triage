nohup: ignoring input
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:523: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint8 = np.dtype([("qint8", np.int8, 1)])
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:524: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint8 = np.dtype([("quint8", np.uint8, 1)])
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:525: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint16 = np.dtype([("qint16", np.int16, 1)])
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:526: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_quint16 = np.dtype([("quint16", np.uint16, 1)])
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:527: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  _np_qint32 = np.dtype([("qint32", np.int32, 1)])
/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/dtypes.py:532: FutureWarning: Passing (type, 1) or '1type' as a synonym of type is deprecated; in a future version of numpy, it will be understood as (type, (1,)) / '(1,)type'.
  np_resource = np.dtype([("resource", np.ubyte, 1)])
2021-08-24 18:13:36 train.py INFO 加载数据......
2021-08-24 18:13:37 dataset.py INFO 0                            高血压吃黄芪颗粒舅舅气短心虚黄芪颗粒治疗您好高血压吃黄芪颗粒
1                            尿频尿急尿不尽没吃过药就最近这段时间才有的我该吃什么药物治疗
2                        手足口病治疗天前下午发烧39度吃美琳针退第二天早上脖子粒状红斑口手脚
3         月宝宝乙肝疫苗发烧几天老板说精神不好影响上班状态不想晚上睡不着有时候感觉心慌慌不太舒服担心影...
4         尽几天右边胸部下方经常发痛今天早上醒来右边相同位置也开始发痛了平时晚上会经常打嗝饮食上最近喜...
                                ...                        
138249                                     我母亲因为肩椎而引起的脑梗严重么
138250                    羊角风症状前再次出现四肢抽搐眼上翻情况目前为止再次出现次同学说癫痫
138251     我是一个哺乳期的妈妈最近老咳嗽喉咙干痒有痰没有感冒症状是得了咽炎吗可以买点消炎药吃吗比如头孢克洛
138252    你好大夫我最近感觉性能力比以前差了以前的时候时间长半个小时没问题最近一年老婆要了二胎之后感觉...
138253    你好我叔叔之前检查有肺气肿慢性支气管炎！当时医院开了沙美特罗替卡松粉吸入剂现已经使用完用了后...
Name: text, Length: 138254, dtype: object
2021-08-24 18:13:37 dataset.py INFO Label: 
2021-08-24 18:13:37 dataset.py INFO 0     14951
8     14444
7     14051
3     13824
6     13502
4     13197
10    13192
9     13145
5     12914
1     12120
2      2914
Name: label, dtype: int64
2021-08-24 18:13:37 dataset.py INFO 0       身上起疹子不痒挤它才有点疼最大一颗要一年半载才好其他好的会留下黑疤久久不化挤它有些流脓有些流...
1                                 放了支架再拍空部CT还是有斑块是否是支架的阴影
2               患儿NUM岁、NUM岁、NUM岁均晕倒过一次患儿的表弟表姨有癫痫请问是否是患有癫痫
3                                          阳萎病史有服用过万艾可的经历
4                       哺乳期感冒了先是嗓子疼然后流鼻涕打喷嚏好像是热着了可以吃百蕊颗粒吗
                              ...                        
1575                           我宝宝有鹅口疮在保健院清洗了一个星期也不好反反复复的
1576    医生您好！个人之前有过手淫史有早泄的问题正常情况NUM分钟内出现早泄这个事情困扰自己很久房事...
1577            每天胃不舒服以前早上起来就胃难受疼吃点饭就好了最后吃了点药现在慢了现在抽烟就不舒服
1578    NUM岁长水痘NUM年NUM月NUM日开始长住院一周打抗病毒针外擦阿昔洛韦现水痘基本已消但痘...
1579           本人自己购买内径大了感觉力不从心硬度不够时间不长自己感觉也不好想改善一下已经买过几次
Name: text, Length: 1580, dtype: object
2021-08-24 18:13:37 dataset.py INFO Label: 
2021-08-24 18:13:37 dataset.py INFO 0     591
1     173
2     162
8     137
7     114
6      84
3      72
4      67
10     66
9      63
5      51
Name: label, dtype: int64
2021-08-24 18:13:37 dataset.py INFO 0                                    扁桃体发炎.去医院输液好了一点但是还会咳
1                               因年少不懂事由手淫引发起前列腺晨勃减少房事不能进行
2                                         月经量有时多有时少每个月经推迟
3       医生你好我爸二型糖尿病医院一直开的二甲双胍配合沙格列汀使用但是现在医院没有给我们处方我爸现在...
4                                        结膜充血有很多眼屎眼睛好像有层膜
                              ...                        
1575    医生您好本人因脂肪肝引起转氨酶偏高需要您开个处方给予开药进行治疗药品名叫笨双酯滴丸一天NUM...
1576                                           黑头出油严重粉刺闭口
1577    医生您好最近出现阴囊潮湿偶尔有瘙痒并有尿不尽现象前列腺曾拍过B超未见增生现象请问是什么病症引...
1578        吃了食物就拉稀大便有时是水状有时粘稠状每天多次大概有NUM个月左右的时间面部多油头发细、少
1579    你好我有血精大概半年多了隔天射的精液全是血很恐怖如果NUM天射的就不会少一些去当地医院检查过...
Name: text, Length: 1580, dtype: object
2021-08-24 18:13:37 dataset.py INFO Label: 
2021-08-24 18:13:37 dataset.py INFO 0     591
1     172
2     163
8     136
7     114
6      83
3      73
10     67
4      66
9      64
5      51
Name: label, dtype: int64
2021-08-24 18:13:37 configuration_utils.py INFO loading configuration file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/config.json
2021-08-24 18:13:37 configuration_utils.py INFO Model config BertConfig {
  "architectures": [
    "BertForMaskedLM"
  ],
  "attention_probs_dropout_prob": 0.1,
  "bos_token_id": 0,
  "directionality": "bidi",
  "eos_token_id": 2,
  "hidden_act": "gelu",
  "hidden_dropout_prob": 0.3,
  "hidden_size": 768,
  "id2label": {
    "0": "LABEL_0",
    "1": "LABEL_1",
    "2": "LABEL_2",
    "3": "LABEL_3",
    "4": "LABEL_4",
    "5": "LABEL_5",
    "6": "LABEL_6",
    "7": "LABEL_7",
    "8": "LABEL_8",
    "9": "LABEL_9",
    "10": "LABEL_10"
  },
  "initializer_range": 0.02,
  "intermediate_size": 3072,
  "label2id": {
    "LABEL_0": 0,
    "LABEL_1": 1,
    "LABEL_10": 10,
    "LABEL_2": 2,
    "LABEL_3": 3,
    "LABEL_4": 4,
    "LABEL_5": 5,
    "LABEL_6": 6,
    "LABEL_7": 7,
    "LABEL_8": 8,
    "LABEL_9": 9
  },
  "layer_norm_eps": 1e-12,
  "max_position_embeddings": 512,
  "model_type": "bert",
  "num_attention_heads": 12,
  "num_hidden_layers": 12,
  "output_past": true,
  "pad_token_id": 1,
  "pooler_fc_size": 768,
  "pooler_num_attention_heads": 12,
  "pooler_num_fc_layers": 3,
  "pooler_size_per_head": 128,
  "pooler_type": "first_token_transform",
  "type_vocab_size": 2,
  "vocab_size": 21128
}

2021-08-24 18:13:37 tokenization_utils.py INFO Model name '/home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext' not found in model shortcut name list (bert-base-uncased, bert-large-uncased, bert-base-cased, bert-large-cased, bert-base-multilingual-uncased, bert-base-multilingual-cased, bert-base-chinese, bert-base-german-cased, bert-large-uncased-whole-word-masking, bert-large-cased-whole-word-masking, bert-large-uncased-whole-word-masking-finetuned-squad, bert-large-cased-whole-word-masking-finetuned-squad, bert-base-cased-finetuned-mrpc, bert-base-german-dbmdz-cased, bert-base-german-dbmdz-uncased, TurkuNLP/bert-base-finnish-cased-v1, TurkuNLP/bert-base-finnish-uncased-v1, wietsedv/bert-base-dutch-cased). Assuming '/home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext' is a path, a model identifier, or url to a directory containing tokenizer files.
2021-08-24 18:13:37 tokenization_utils.py INFO Didn't find file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/added_tokens.json. We won't load it.
2021-08-24 18:13:37 tokenization_utils.py INFO Didn't find file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/special_tokens_map.json. We won't load it.
2021-08-24 18:13:37 tokenization_utils.py INFO Didn't find file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/tokenizer_config.json. We won't load it.
2021-08-24 18:13:37 tokenization_utils.py INFO loading file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/vocab.txt
2021-08-24 18:13:37 tokenization_utils.py INFO loading file None
2021-08-24 18:13:37 tokenization_utils.py INFO loading file None
2021-08-24 18:13:37 tokenization_utils.py INFO loading file None
2021-08-24 18:13:37 modeling_utils.py INFO loading weights file /home/user10000761/notespace/Chinese-Text-Classification/DL/pretrained_model/chinese-roberta-wwm-ext/pytorch_model.bin
2021-08-24 18:13:42 modeling_utils.py INFO Weights of BertModelForMedical not initialized from pretrained model: ['bert.bert_model.bert.embeddings.word_embeddings.weight', 'bert.bert_model.bert.embeddings.position_embeddings.weight', 'bert.bert_model.bert.embeddings.token_type_embeddings.weight', 'bert.bert_model.bert.embeddings.LayerNorm.weight', 'bert.bert_model.bert.embeddings.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.0.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.0.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.0.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.0.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.0.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.0.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.0.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.0.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.0.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.0.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.0.output.dense.weight', 'bert.bert_model.bert.encoder.layer.0.output.dense.bias', 'bert.bert_model.bert.encoder.layer.0.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.0.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.1.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.1.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.1.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.1.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.1.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.1.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.1.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.1.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.1.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.1.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.1.output.dense.weight', 'bert.bert_model.bert.encoder.layer.1.output.dense.bias', 'bert.bert_model.bert.encoder.layer.1.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.1.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.2.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.2.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.2.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.2.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.2.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.2.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.2.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.2.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.2.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.2.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.2.output.dense.weight', 'bert.bert_model.bert.encoder.layer.2.output.dense.bias', 'bert.bert_model.bert.encoder.layer.2.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.2.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.3.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.3.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.3.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.3.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.3.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.3.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.3.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.3.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.3.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.3.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.3.output.dense.weight', 'bert.bert_model.bert.encoder.layer.3.output.dense.bias', 'bert.bert_model.bert.encoder.layer.3.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.3.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.4.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.4.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.4.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.4.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.4.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.4.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.4.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.4.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.4.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.4.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.4.output.dense.weight', 'bert.bert_model.bert.encoder.layer.4.output.dense.bias', 'bert.bert_model.bert.encoder.layer.4.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.4.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.5.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.5.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.5.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.5.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.5.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.5.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.5.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.5.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.5.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.5.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.5.output.dense.weight', 'bert.bert_model.bert.encoder.layer.5.output.dense.bias', 'bert.bert_model.bert.encoder.layer.5.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.5.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.6.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.6.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.6.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.6.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.6.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.6.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.6.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.6.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.6.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.6.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.6.output.dense.weight', 'bert.bert_model.bert.encoder.layer.6.output.dense.bias', 'bert.bert_model.bert.encoder.layer.6.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.6.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.7.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.7.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.7.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.7.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.7.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.7.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.7.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.7.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.7.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.7.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.7.output.dense.weight', 'bert.bert_model.bert.encoder.layer.7.output.dense.bias', 'bert.bert_model.bert.encoder.layer.7.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.7.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.8.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.8.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.8.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.8.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.8.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.8.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.8.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.8.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.8.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.8.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.8.output.dense.weight', 'bert.bert_model.bert.encoder.layer.8.output.dense.bias', 'bert.bert_model.bert.encoder.layer.8.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.8.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.9.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.9.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.9.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.9.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.9.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.9.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.9.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.9.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.9.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.9.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.9.output.dense.weight', 'bert.bert_model.bert.encoder.layer.9.output.dense.bias', 'bert.bert_model.bert.encoder.layer.9.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.9.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.10.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.10.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.10.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.10.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.10.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.10.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.10.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.10.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.10.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.10.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.10.output.dense.weight', 'bert.bert_model.bert.encoder.layer.10.output.dense.bias', 'bert.bert_model.bert.encoder.layer.10.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.10.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.11.attention.self.query.weight', 'bert.bert_model.bert.encoder.layer.11.attention.self.query.bias', 'bert.bert_model.bert.encoder.layer.11.attention.self.key.weight', 'bert.bert_model.bert.encoder.layer.11.attention.self.key.bias', 'bert.bert_model.bert.encoder.layer.11.attention.self.value.weight', 'bert.bert_model.bert.encoder.layer.11.attention.self.value.bias', 'bert.bert_model.bert.encoder.layer.11.attention.output.dense.weight', 'bert.bert_model.bert.encoder.layer.11.attention.output.dense.bias', 'bert.bert_model.bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.bert_model.bert.encoder.layer.11.intermediate.dense.weight', 'bert.bert_model.bert.encoder.layer.11.intermediate.dense.bias', 'bert.bert_model.bert.encoder.layer.11.output.dense.weight', 'bert.bert_model.bert.encoder.layer.11.output.dense.bias', 'bert.bert_model.bert.encoder.layer.11.output.LayerNorm.weight', 'bert.bert_model.bert.encoder.layer.11.output.LayerNorm.bias', 'bert.bert_model.bert.pooler.dense.weight', 'bert.bert_model.bert.pooler.dense.bias', 'bert.bert_model.classifier.weight', 'bert.bert_model.classifier.bias', 'bert.fc.weight', 'bert.fc.bias']
2021-08-24 18:13:42 modeling_utils.py INFO Weights from pretrained model not used in BertModelForMedical: ['bert.embeddings.word_embeddings.weight', 'bert.embeddings.position_embeddings.weight', 'bert.embeddings.token_type_embeddings.weight', 'bert.embeddings.LayerNorm.weight', 'bert.embeddings.LayerNorm.bias', 'bert.encoder.layer.0.attention.self.query.weight', 'bert.encoder.layer.0.attention.self.query.bias', 'bert.encoder.layer.0.attention.self.key.weight', 'bert.encoder.layer.0.attention.self.key.bias', 'bert.encoder.layer.0.attention.self.value.weight', 'bert.encoder.layer.0.attention.self.value.bias', 'bert.encoder.layer.0.attention.output.dense.weight', 'bert.encoder.layer.0.attention.output.dense.bias', 'bert.encoder.layer.0.attention.output.LayerNorm.weight', 'bert.encoder.layer.0.attention.output.LayerNorm.bias', 'bert.encoder.layer.0.intermediate.dense.weight', 'bert.encoder.layer.0.intermediate.dense.bias', 'bert.encoder.layer.0.output.dense.weight', 'bert.encoder.layer.0.output.dense.bias', 'bert.encoder.layer.0.output.LayerNorm.weight', 'bert.encoder.layer.0.output.LayerNorm.bias', 'bert.encoder.layer.1.attention.self.query.weight', 'bert.encoder.layer.1.attention.self.query.bias', 'bert.encoder.layer.1.attention.self.key.weight', 'bert.encoder.layer.1.attention.self.key.bias', 'bert.encoder.layer.1.attention.self.value.weight', 'bert.encoder.layer.1.attention.self.value.bias', 'bert.encoder.layer.1.attention.output.dense.weight', 'bert.encoder.layer.1.attention.output.dense.bias', 'bert.encoder.layer.1.attention.output.LayerNorm.weight', 'bert.encoder.layer.1.attention.output.LayerNorm.bias', 'bert.encoder.layer.1.intermediate.dense.weight', 'bert.encoder.layer.1.intermediate.dense.bias', 'bert.encoder.layer.1.output.dense.weight', 'bert.encoder.layer.1.output.dense.bias', 'bert.encoder.layer.1.output.LayerNorm.weight', 'bert.encoder.layer.1.output.LayerNorm.bias', 'bert.encoder.layer.2.attention.self.query.weight', 'bert.encoder.layer.2.attention.self.query.bias', 'bert.encoder.layer.2.attention.self.key.weight', 'bert.encoder.layer.2.attention.self.key.bias', 'bert.encoder.layer.2.attention.self.value.weight', 'bert.encoder.layer.2.attention.self.value.bias', 'bert.encoder.layer.2.attention.output.dense.weight', 'bert.encoder.layer.2.attention.output.dense.bias', 'bert.encoder.layer.2.attention.output.LayerNorm.weight', 'bert.encoder.layer.2.attention.output.LayerNorm.bias', 'bert.encoder.layer.2.intermediate.dense.weight', 'bert.encoder.layer.2.intermediate.dense.bias', 'bert.encoder.layer.2.output.dense.weight', 'bert.encoder.layer.2.output.dense.bias', 'bert.encoder.layer.2.output.LayerNorm.weight', 'bert.encoder.layer.2.output.LayerNorm.bias', 'bert.encoder.layer.3.attention.self.query.weight', 'bert.encoder.layer.3.attention.self.query.bias', 'bert.encoder.layer.3.attention.self.key.weight', 'bert.encoder.layer.3.attention.self.key.bias', 'bert.encoder.layer.3.attention.self.value.weight', 'bert.encoder.layer.3.attention.self.value.bias', 'bert.encoder.layer.3.attention.output.dense.weight', 'bert.encoder.layer.3.attention.output.dense.bias', 'bert.encoder.layer.3.attention.output.LayerNorm.weight', 'bert.encoder.layer.3.attention.output.LayerNorm.bias', 'bert.encoder.layer.3.intermediate.dense.weight', 'bert.encoder.layer.3.intermediate.dense.bias', 'bert.encoder.layer.3.output.dense.weight', 'bert.encoder.layer.3.output.dense.bias', 'bert.encoder.layer.3.output.LayerNorm.weight', 'bert.encoder.layer.3.output.LayerNorm.bias', 'bert.encoder.layer.4.attention.self.query.weight', 'bert.encoder.layer.4.attention.self.query.bias', 'bert.encoder.layer.4.attention.self.key.weight', 'bert.encoder.layer.4.attention.self.key.bias', 'bert.encoder.layer.4.attention.self.value.weight', 'bert.encoder.layer.4.attention.self.value.bias', 'bert.encoder.layer.4.attention.output.dense.weight', 'bert.encoder.layer.4.attention.output.dense.bias', 'bert.encoder.layer.4.attention.output.LayerNorm.weight', 'bert.encoder.layer.4.attention.output.LayerNorm.bias', 'bert.encoder.layer.4.intermediate.dense.weight', 'bert.encoder.layer.4.intermediate.dense.bias', 'bert.encoder.layer.4.output.dense.weight', 'bert.encoder.layer.4.output.dense.bias', 'bert.encoder.layer.4.output.LayerNorm.weight', 'bert.encoder.layer.4.output.LayerNorm.bias', 'bert.encoder.layer.5.attention.self.query.weight', 'bert.encoder.layer.5.attention.self.query.bias', 'bert.encoder.layer.5.attention.self.key.weight', 'bert.encoder.layer.5.attention.self.key.bias', 'bert.encoder.layer.5.attention.self.value.weight', 'bert.encoder.layer.5.attention.self.value.bias', 'bert.encoder.layer.5.attention.output.dense.weight', 'bert.encoder.layer.5.attention.output.dense.bias', 'bert.encoder.layer.5.attention.output.LayerNorm.weight', 'bert.encoder.layer.5.attention.output.LayerNorm.bias', 'bert.encoder.layer.5.intermediate.dense.weight', 'bert.encoder.layer.5.intermediate.dense.bias', 'bert.encoder.layer.5.output.dense.weight', 'bert.encoder.layer.5.output.dense.bias', 'bert.encoder.layer.5.output.LayerNorm.weight', 'bert.encoder.layer.5.output.LayerNorm.bias', 'bert.encoder.layer.6.attention.self.query.weight', 'bert.encoder.layer.6.attention.self.query.bias', 'bert.encoder.layer.6.attention.self.key.weight', 'bert.encoder.layer.6.attention.self.key.bias', 'bert.encoder.layer.6.attention.self.value.weight', 'bert.encoder.layer.6.attention.self.value.bias', 'bert.encoder.layer.6.attention.output.dense.weight', 'bert.encoder.layer.6.attention.output.dense.bias', 'bert.encoder.layer.6.attention.output.LayerNorm.weight', 'bert.encoder.layer.6.attention.output.LayerNorm.bias', 'bert.encoder.layer.6.intermediate.dense.weight', 'bert.encoder.layer.6.intermediate.dense.bias', 'bert.encoder.layer.6.output.dense.weight', 'bert.encoder.layer.6.output.dense.bias', 'bert.encoder.layer.6.output.LayerNorm.weight', 'bert.encoder.layer.6.output.LayerNorm.bias', 'bert.encoder.layer.7.attention.self.query.weight', 'bert.encoder.layer.7.attention.self.query.bias', 'bert.encoder.layer.7.attention.self.key.weight', 'bert.encoder.layer.7.attention.self.key.bias', 'bert.encoder.layer.7.attention.self.value.weight', 'bert.encoder.layer.7.attention.self.value.bias', 'bert.encoder.layer.7.attention.output.dense.weight', 'bert.encoder.layer.7.attention.output.dense.bias', 'bert.encoder.layer.7.attention.output.LayerNorm.weight', 'bert.encoder.layer.7.attention.output.LayerNorm.bias', 'bert.encoder.layer.7.intermediate.dense.weight', 'bert.encoder.layer.7.intermediate.dense.bias', 'bert.encoder.layer.7.output.dense.weight', 'bert.encoder.layer.7.output.dense.bias', 'bert.encoder.layer.7.output.LayerNorm.weight', 'bert.encoder.layer.7.output.LayerNorm.bias', 'bert.encoder.layer.8.attention.self.query.weight', 'bert.encoder.layer.8.attention.self.query.bias', 'bert.encoder.layer.8.attention.self.key.weight', 'bert.encoder.layer.8.attention.self.key.bias', 'bert.encoder.layer.8.attention.self.value.weight', 'bert.encoder.layer.8.attention.self.value.bias', 'bert.encoder.layer.8.attention.output.dense.weight', 'bert.encoder.layer.8.attention.output.dense.bias', 'bert.encoder.layer.8.attention.output.LayerNorm.weight', 'bert.encoder.layer.8.attention.output.LayerNorm.bias', 'bert.encoder.layer.8.intermediate.dense.weight', 'bert.encoder.layer.8.intermediate.dense.bias', 'bert.encoder.layer.8.output.dense.weight', 'bert.encoder.layer.8.output.dense.bias', 'bert.encoder.layer.8.output.LayerNorm.weight', 'bert.encoder.layer.8.output.LayerNorm.bias', 'bert.encoder.layer.9.attention.self.query.weight', 'bert.encoder.layer.9.attention.self.query.bias', 'bert.encoder.layer.9.attention.self.key.weight', 'bert.encoder.layer.9.attention.self.key.bias', 'bert.encoder.layer.9.attention.self.value.weight', 'bert.encoder.layer.9.attention.self.value.bias', 'bert.encoder.layer.9.attention.output.dense.weight', 'bert.encoder.layer.9.attention.output.dense.bias', 'bert.encoder.layer.9.attention.output.LayerNorm.weight', 'bert.encoder.layer.9.attention.output.LayerNorm.bias', 'bert.encoder.layer.9.intermediate.dense.weight', 'bert.encoder.layer.9.intermediate.dense.bias', 'bert.encoder.layer.9.output.dense.weight', 'bert.encoder.layer.9.output.dense.bias', 'bert.encoder.layer.9.output.LayerNorm.weight', 'bert.encoder.layer.9.output.LayerNorm.bias', 'bert.encoder.layer.10.attention.self.query.weight', 'bert.encoder.layer.10.attention.self.query.bias', 'bert.encoder.layer.10.attention.self.key.weight', 'bert.encoder.layer.10.attention.self.key.bias', 'bert.encoder.layer.10.attention.self.value.weight', 'bert.encoder.layer.10.attention.self.value.bias', 'bert.encoder.layer.10.attention.output.dense.weight', 'bert.encoder.layer.10.attention.output.dense.bias', 'bert.encoder.layer.10.attention.output.LayerNorm.weight', 'bert.encoder.layer.10.attention.output.LayerNorm.bias', 'bert.encoder.layer.10.intermediate.dense.weight', 'bert.encoder.layer.10.intermediate.dense.bias', 'bert.encoder.layer.10.output.dense.weight', 'bert.encoder.layer.10.output.dense.bias', 'bert.encoder.layer.10.output.LayerNorm.weight', 'bert.encoder.layer.10.output.LayerNorm.bias', 'bert.encoder.layer.11.attention.self.query.weight', 'bert.encoder.layer.11.attention.self.query.bias', 'bert.encoder.layer.11.attention.self.key.weight', 'bert.encoder.layer.11.attention.self.key.bias', 'bert.encoder.layer.11.attention.self.value.weight', 'bert.encoder.layer.11.attention.self.value.bias', 'bert.encoder.layer.11.attention.output.dense.weight', 'bert.encoder.layer.11.attention.output.dense.bias', 'bert.encoder.layer.11.attention.output.LayerNorm.weight', 'bert.encoder.layer.11.attention.output.LayerNorm.bias', 'bert.encoder.layer.11.intermediate.dense.weight', 'bert.encoder.layer.11.intermediate.dense.bias', 'bert.encoder.layer.11.output.dense.weight', 'bert.encoder.layer.11.output.dense.bias', 'bert.encoder.layer.11.output.LayerNorm.weight', 'bert.encoder.layer.11.output.LayerNorm.bias', 'bert.pooler.dense.weight', 'bert.pooler.dense.bias']
2021-08-24 18:13:53 train.py INFO ***** Running training *****
2021-08-24 18:13:53 train.py INFO   Num examples = 138254
2021-08-24 18:13:53 train.py INFO   Num Epochs = 5
2021-08-24 18:13:53 train.py INFO   batch size = 64
2021-08-24 18:13:53 train.py INFO   Num batches = 10805
2021-08-24 18:13:53 train.py INFO   device: cuda
2021-08-24 18:13:53 train.py INFO Epoch [1/5]
2021-08-24 18:13:53 train.py INFO tokens: [['[CLS]', '宝', '宝', '鼻', '塞', '流', '鼻', '涕', '按', '摩', '穴', '位', '缓', '解', '[SEP]'], ['[CLS]', '孩', '子', '扁', '桃', '体', '炎', '症', '疼', '怎', '样', '治', '效', '果', '女', '宝', '宝', '月', '嗓', '子', '眼', '有', '点', '痛', '察', '觉', '到', '说', '话', '声', '音', '沙', '哑', '发', '烧', '精', '神', '请', '问', '孩', '子', '扁', '桃', '体', '炎', '症', '疼', '怎', '样', '治', '效', '果', '[SEP]'], ['[CLS]', '中', '老', '年', '会', '得', '高', '血', '压', '56', '岁', '仔', '细', '检', '查', '出', '患', '高', '血', '压', '疾', '病', '忧', '心', '高', '血', '压', '致', '使', '并', '发', '症', '再', '次', '出', '现', '想', '问', '几', '下', '患', '高', '血', '压', '症', '怎', '么', '回', '事', '致', '使', '[SEP]'], ['[CLS]', '喝', '酒', '癫', '痫', '病', '发', '作', '喝', '啤', '酒', '引', '来', '癫', '痫', '病', '复', '发', '优', '质', '收', '藏', '知', '晓', '怎', '么', '回', '事', '癫', '痫', '病', '无', '法', '控', '制', '有', '时', '候', '有', '乱', '发', '火', '打', '人', '开', '罪', '癫', '痫', '病', '治', '疗', '[SEP]'], ['[CLS]', '胃', '病', '治', '患', '者', '男', '31', '岁', '高', '中', '时', '期', '胃', '再', '次', '出', '现', '毛', '病', '饿', '吃', '晚', '饭', '胡', '说', '八', '道', '未', '回', '舒', '服', '吃', '辣', '椒', '吃', '太', '凉', '东', '西', '雪', '糕', '喝', '凉', '水', '很', '多', '年', '胃', '咕', '噜', '咕', '噜', '响', '很', '痛', '[SEP]'], ['[CLS]', '儿', '童', '哮', '喘', '偏', '方', '我', '家', '孩', '子', '哮', '喘', '老', '毛', '病', '两', '年', '不', '好', '孩', '子', '激', '动', '喘', '息', '厉', '害', '真', '的', '操', '碎', '了', '心', '小', '儿', '哮', '喘', '偏', '方', '[SEP]'], ['[CLS]', '硬', '斑', '病', '额', '头', '硬', '斑', '病', '萎', '缩', '状', '态', '三', '年', '前', '额', '头', '右', '边', '太', '阳', '穴', '处', '有', '乒', '乓', '球', '扩', '散', '药', '物', '治', '疗', '[SEP]'], ['[CLS]', '高', '血', '压', '患', '者', '烫', '脚', '公', '公', '患', '高', '血', '压', '莫', '名', '复', '发', '家', '人', '忧', '心', '天', '气', '冷', '想', '泡', '泡', '脚', '想', '理', '解', '高', '血', '压', '烫', '脚', '[SEP]'], ['[CLS]', '幼', '儿', '吃', '白', '糖', '身', '体', '孙', '子', '岁', '早', '晨', '吃', '大', '米', '吃', '白', '糖', '请', '问', '身', '体', '有', '害', '[SEP]'], ['[CLS]', '阴', '道', '口', '痒', '白', '带', '发', '黄', '异', '味', '病', '愈', '感', '觉', '白', '带', '附', '带', '气', '味', '量', '情', '况', '请', '问', '阴', '道', '口', '痒', '白', '带', '发', '黄', '异', '味', '病', '愈', '[SEP]'], ['[CLS]', '甲', '状', '腺', '结', '节', '变', '小', '变', '好', '身', '体', '舒', '服', '脖', '子', '肿', '大', '喉', '咙', '异', '物', '很', '痛', '医', '院', '仔', '细', '检', '查', '说', '甲', '状', '腺', '结', '节', '开', '药', '回', '来', '治', '好', '复', '检', '医', '生', '说', '甲', '状', '腺', '结', '节', '变', '小', '想', '问', '几', '下', '甲', '状', '腺', '结', '节', '变', '小', '变', '好', '[SEP]'], ['[CLS]', '睡', '眠', '预', '防', '羊', '癫', '疯', '发', '作', '公', '公', '眼', '科', '医', '生', '培', '训', '特', '别', '忙', '身', '体', '特', '别', '抽', '羊', '癫', '疯', '毛', '病', '听', '人', '说', '歇', '息', '改', '善', '睡', '眠', '状', '态', '病', '情', '协', '助', '听', '晚', '上', '加', '班', '羊', '癫', '疯', '病', '时', '好', '时', '坏', '病', '发', '[SEP]'], ['[CLS]', '冠', '心', '病', '危', '害', '家', '里', '老', '人', '心', '前', '区', '疼', '痛', '难', '忍', '仔', '细', '检', '查', '冠', '心', '病', '冠', '心', '病', '危', '害', '[SEP]'], ['[CLS]', '白', '带', '增', '多', '需', '钱', '生', '殖', '器', '官', '灼', '痛', '小', '腹', '两', '侧', '隐', '隐', '约', '约', '疼', '痛', '白', '带', '增', '多', '黄', '色', '症', '状', '[SEP]'], ['[CLS]', '心', '脏', '病', '晚', '期', '活', '多', '久', '经', '常', '出', '现', '呼', '吸', '困', '难', '胸', '闷', '心', '跳', '加', '快', '医', '院', '诊', '断', '心', '脏', '病', '晚', '期', '住', '星', '期', '医', '院', '医', '生', '强', '烈', '要', '求', '出', '院', '办', '法', '全', '家', '悲', '伤', '中', '[SEP]'], ['[CLS]', '腿', '部', '皮', '肤', '[UNK]', '右', '腿', '膝', '盖', '上', '方', '几', '块', '[UNK]', '皮', '肤', '请', '问', '大', '夫', '皮', '肤', '病', '白', '癜', '风', '药', '[SEP]'], ['[CLS]', '抽', '动', '症', '需', '要', '妥', '泰', '托', '吡', '酯', '片', 'nu', '##mm', '##g', '的', '每', '天', '两', '次', '每', '次', '半', '片', '[SEP]'], ['[CLS]', '婴', '儿', '吃', '奶', '粉', '上', '火', '清', '火', '宝', '[SEP]'], ['[CLS]', '高', '血', '糖', '糖', '尿', '病', '区', '别', '高', '血', '糖', '糖', '尿', '病', '区', '别', '[SEP]'], ['[CLS]', '幽', '门', '螺', '杆', '菌', '治', '疗', '医', '院', '做', '13', '##c', '呼', '气', '试', '验', '检', '测', 'do', '##b', '阳', '性', '[SEP]'], ['[CLS]', '治', '疗', '癫', '痫', '饮', '食', '亲', '戚', '倒', '地', '不', '起', '口', '吐', '白', '沫', '四', '肢', '抽', '搐', '赶', '紧', '带', '到', '医', '院', '医', '生', '仔', '细', '检', '查', '说', '亲', '戚', '癫', '痫', '想', '咨', '询', '治', '疗', '癫', '痫', '饮', '食', '建', '议', '谢', '谢', '答', '覆', '[SEP]'], ['[CLS]', '癫', '痫', '不', '定', '期', '发', '病', '朋', '友', '晕', '倒', '医', '院', '仔', '细', '检', '查', '医', '生', '说', '疑', '为', '癫', '痫', 'ct', '核', '磁', '共', '振', '做', '异', '常', '炎', '症', '想', '问', '几', '下', '不', '定', '期', '病', '发', '[SEP]'], ['[CLS]', '内', '分', '泌', '失', '调', '怀', '孕', '影', '响', '37', '岁', '内', '分', '泌', '失', '调', '表', '现', '出', '是', '月', '经', '量', '少', '腰', '酸', '想', '实', '施', '调', '整', '中', '药', '西', '药', '吃', '吃', '长', '时', '间', '没', '调', '内', '分', '泌', '失', '调', '怀', '上', '影', '响', '[SEP]'], ['[CLS]', '儿', '童', '中', '耳', '炎', '流', '黄', '水', '治', '疗', '我', '家', '女', '宝', '岁', '一', '周', '孩', '子', '扣', '耳', '朵', '说', '痒', '早', '上', '还', '会', '黄', '色', '液', '体', '流', '出', '伴', '有', '头', '痛', '发', '烧', '请', '问', '儿', '童', '中', '耳', '炎', '流', '黄', '水', '治', '疗', '[SEP]'], ['[CLS]', 'nu', '##m', '年', 'nu', '##m', '月', '甲', '状', '腺', '双', '切', '需', '要', '长', '期', '吃', '甲', '状', '腺', '素', '片', '[SEP]'], ['[CLS]', '治', '疗', '治', '疗', '外', '阴', '白', '斑', '女', '30', '岁', '慢', '慢', '身', '体', '舒', '服', '精', '神', '请', '问', '治', '疗', '治', '疗', '外', '阴', '白', '斑', '[SEP]'], ['[CLS]', '不', '吃', '早', '餐', '胃', '部', '舒', '服', '吃', '早', '餐', '一', '吃', '早', '餐', '中', '午', '下', '午', '胃', '部', '舒', '服', '长', '期', '吃', '盐', '酸', '雷', '尼', '替', '丁', '反', '酸', '厉', '害', '吃', '药', '物', '不', '见', '好', '转', '医', '院', '检', '查', '说', '杆', '菌', '感', '染', '[SEP]'], ['[CLS]', '老', '师', '您', '好', '我', '是', '斑', '秃', '患', '者', 'nu', '##m', '年', '初', '发', '病', '开', '始', '只', '有', '三', '四', '块', '硬', '币', '大', '小', '斑', '点', '后', '脱', '发', '面', '积', '不', '断', '增', '大', '几', '经', '治', '疗', '无', '果', '治', '理', '情', '况', '：', '中', '药', '调', '理', '过', '三', '个', '月', '章', '光', 'nu', '##m', '产', '品', '使', '用', '近', '一', '年', '；', '另', '服', '用', '过', '复', '方', '甘', '草', '酸', '甘', '片', '、', '六', '味', '地', '黄', '丸', '、', '斑', '秃', '丸', '（', '服', '用', '时', '间', '均', '不', '长', '不', '超', '过', '三', '个', '月', '）', '[SEP]'], ['[CLS]', '宝', '宝', '加', '少', '量', '辅', '食', '行', '医', '生', '我', '家', '宝', '宝', '月', '月', '之', '间', '加', '辅', '食', '吃', '点', '辅', '食', '母', '乳', '足', '够', '吃', '吃', '辅', '食', '特', '别', '少', '干', '扰', '宝', '宝', '蜕', '变', '生', '长', '发', '育', '一', '个', '月', '吃', '[SEP]'], ['[CLS]', '小', '儿', '哮', '喘', '办', '法', '治', '疗', '胸', '口', '胸', '痛', '胸', '闷', '情', '况', '医', '院', '检', '查', '说', '呼', '吸', '道', '疾', '病', '吃', '药', '管', '用', '咳', '嗽', '加', '重', '请', '问', '小', '儿', '哮', '喘', '办', '法', '治', '疗', '[SEP]'], ['[CLS]', '感', '到', '胃', '胀', '舒', '服', '一', '段', '时', '间', '始', '终', '备', '感', '胃', '胀', '舒', '服', '饱', '腹', '感', '饭', '量', '增', '加', '备', '感', '饿', '胃', '胀', '您', '好', '大', '夫', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', '亚', '感', '染', '性', '心', '内', '膜', '炎', '治', '疗', '发', '烧', '好', '长', '时', '间', '腰', '酸', '背', '痛', '头', '晕', '发', '凉', '浑', '身', '力', '气', '医', '院', '仔', '细', '检', '查', '医', '生', '说', '亚', '感', '染', '性', '心', '内', '膜', '炎', '在', '乎', '医', '生', '您', '好', '亚', '感', '染', '性', '心', '内', '膜', '炎', '治', '疗', '[SEP]'], ['[CLS]', '甲', '状', '腺', '肿', '知', '晓', '甲', '状', '腺', '肿', '大', '是', '想', '必', '咨', '询', '医', '生', '甲', '状', '腺', '肿', '[SEP]'], ['[CLS]', '月', '经', '量', '少', '有', '关', '系', '月', '经', '期', '洗', '头', '月', '经', '量', '少', '有', '关', '系', '月', '经', '期', '洗', '头', '发', '[SEP]'], ['[CLS]', '请', '问', '治', '疗', '肺', '心', '病', '引', '发', '肝', '淤', '血', '医', '院', '谢', '谢', '高', '见', '[SEP]'], ['[CLS]', '大', '疱', '类', '天', '疱', '疮', '全', '身', '皮', '肤', '红', '斑', '起', '泡', '患', '者', '常', '年', '睡', '眠', '不', '好', '服', '用', '助', '睡', '眠', '类', '药', '物', '发', '病', '[SEP]'], ['[CLS]', '儿', '童', '中', '耳', '炎', '耳', '屎', '脓', '状', '应', '医', '治', '女', '宝', '宝', '岁', '刚', '上', '幼', '儿', '园', '一', '周', '孩', '子', '告', '诉', '耳', '朵', '疼', '早', '上', '耳', '屎', '黄', '好', '像', '没', '什', '么', '食', '欲', '乏', '力', '请', '问', '儿', '童', '中', '耳', '炎', '耳', '屎', '脓', '状', '应', '医', '治', '[SEP]'], ['[CLS]', '新', '生', '儿', '吃', '奶', '粉', '时', '间', '[SEP]'], ['[CLS]', '诊', '断', '脂', '溢', '性', '皮', '炎', '痒', '起', '皮', '发', '干', '熬', '夜', '加', '重', '脂', '溢', '性', '皮', '炎', '皮', '肤', '刺', '痒', '掉', '皮', '[SEP]'], ['[CLS]', '联', '苯', '双', '酯', '滴', '丸', '天', '晴', '甘', '平', '[SEP]'], ['[CLS]', '喉', '咙', '嘶', '哑', '吃', '黄', '连', '清', '片', '两', '天', '身', '体', '特', '别', '舒', '服', '情', '况', '很', '久', '咳', '嗽', '医', '院', '查', '找', '资', '料', '情', '况', '请', '问', '喉', '咙', '嘶', '哑', '吃', '黄', '连', '清', '片', '[SEP]'], ['[CLS]', '儿', '童', '过', '敏', '性', '哮', '喘', '吸', '入', '疗', '法', '疗', '程', '多', '长', '时', '间', '两', '天', '身', '体', '特', '别', '舒', '服', '情', '况', '很', '久', '咳', '嗽', '医', '院', '查', '找', '资', '料', '情', '况', '请', '问', '儿', '童', '过', '敏', '性', '哮', '喘', '吸', '入', '疗', '法', '疗', '程', '多', '长', '时', '间', '[SEP]'], ['[CLS]', '手', '足', '口', '症', '状', '[SEP]'], ['[CLS]', '上', '初', '中', '手', '淫', '手', '淫', '史', '有', '三', '四', '年', '戒', '了', '一', '年', '了', '现', '在', '容', '易', '遗', '精', '一', '星', '期', '一', '次', '肠', '胃', '也', '不', '怎', '么', '好', '[SEP]'], ['[CLS]', '小', '孩', '感', '冒', '发', '烧', '调', '理', '小', '孩', '感', '冒', '发', '烧', '刚', '刚', '好', '了', '没', '几', '天', '感', '冒', '[SEP]'], ['[CLS]', '面', '瘫', '面', '部', '神', '经', '炎', '治', '疗', '今', '早', '洗', '脸', '洗', '脸', '时', '发', '现', '自', '己', '脸', '右', '边', '一', '侧', '动', '没', '法', '口', '角', '斜', '我', '妈', '说', '面', '瘫', '面', '部', '神', '经', '炎', '知', '晓', '您', '好', '医', '生', '面', '瘫', '面', '部', '神', '经', '炎', '治', '疗', '[SEP]'], ['[CLS]', '青', '霉', '素', '治', '疗', '呕', '吐', '输', '天', '青', '霉', '素', '上', '吐', '下', '泻', '带', '点', '喘', '流', '青', '鼻', '涕', '饭', '吃', '想', '瞌', '睡', '耷', '拉', '脑', '袋', '不', '想', '抬', '治', '疗', '情', '况', '效', '果', '想', '得', '到', '佛', '青', '霉', '素', '几', '天', '[SEP]'], ['[CLS]', '经', '常', '手', '淫', '现', '在', '跟', '女', '朋', '友', '做', '爱', '感', '觉', '硬', '的', '程', '度', '不', '够', '勃', '而', '不', '坚', '而', '且', '啪', '啪', '啪', '还', '没', '有', '手', '淫', '舒', '服', '我', '现', '在', '除', '了', '戒', '撸', '还', '应', '该', '吃', '什', '么', '药', '配', '合', '治', '疗', '[SEP]'], ['[CLS]', '急', '性', '淋', '巴', '细', '胞', '白', '血', '病', '治', '疗', '朋', '友', '患', '身', '体', '不', '舒', '有', '时', '候', '晕', '迷', '难', '仔', '细', '检', '医', '院', '诊', '断', '急', '性', '白', '血', '忧', '急', '性', '淋', '巴', '细', '胞', '白', '血', '病', '治', '疗', '[SEP]'], ['[CLS]', '小', '腹', '胀', '痛', '腰', '痛', '无', '力', '[SEP]'], ['[CLS]', '腿', '部', '皮', '肤', '[UNK]', '右', '腿', '膝', '盖', '上', '方', '几', '块', '[UNK]', '皮', '肤', '请', '问', '大', '夫', '皮', '肤', '病', '白', '癜', '风', '药', '[SEP]'], ['[CLS]', '剖', '腹', '产', '产', '后', '两', '个', '多', '月', '您', '好', '医', '生', '剖', '腹', '产', '产', '后', '两', '个', '多', '月', '没', '什', '么', '不', '适', '感', '觉', '腰', '酸', '妇', '科', '炎', '症', '阴', '道', '炎', '做', '产', '后', '修', '补', '类', '似', '骨', '盆', '修', '补', '盆', '腔', '合', '拢', '[SEP]'], ['[CLS]', '分', '辨', '运', '动', '神', '经', '元', '病', '帕', '金', '森', '爱', '人', '36', '岁', '发', '觉', '他', '手', '不', '停', '抖', '痛', '觉', '抖', '知', '晓', '抖', '手', '觉', '着', '可', '怕', '想', '问', '问', '现', '象', '现', '象', '运', '动', '神', '经', '元', '病', '帕', '金', '森', '[SEP]'], ['[CLS]', '房', '颤', '射', '频', '消', '融', '术', '价', '格', '高', '怎', '么', '回', '事', '感', '觉', '心', '脏', '舒', '服', '吃', '药', '控', '制', '效', '果', '医', '院', '检', '查', '吃', '药', '请', '问', '房', '颤', '射', '频', '消', '融', '术', '价', '格', '高', '[SEP]'], ['[CLS]', '反', '流', '性', '食', '管', '炎', '癌', '变', '34', '岁', '怎', '么', '回', '事', '感', '觉', '恶', '心', '想', '吐', '胃', '部', '阴', '阴', '作', '痛', '灼', '热', '反', '酸', '症', '状', '医', '院', '看', '过', '一', '段', '时', '间', '犯', '请', '问', '反', '流', '性', '食', '管', '炎', '癌', '变', '[SEP]'], ['[CLS]', '肌', '壁', '间', '子', '宫', '肌', '瘤', '危', '害', '女', '生', '58', '岁', '平', '时', '没', '什', '么', '事', '每', '次', '男', '朋', '友', '同', '房', '私', '处', '舒', '服', '白', '带', '颜', '色', '不', '对', '劲', '气', '味', '难', '闻', '真', '的', '困', '扰', '久', '请', '问', '肌', '壁', '间', '子', '宫', '肌', '瘤', '危', '害', '[SEP]'], ['[CLS]', '你', '好', '！', '帮', '看', '下', '化', '验', '单', '结', '果', '是', '否', '需', '要', '调', '理', '偶', '尔', '会', '吃', 'nu', '##mm', '##g', '万', '艾', '可', '会', '对', '生', '育', '有', '影', '响', '吗', '[SEP]'], ['[CLS]', '咳', '嗽', '有', '痰', '吃', '南', '京', '同', '仁', '堂', '止', '咳', '化', '痰', '可', '以', '比', '较', '好', '想', '跟', '您', '开', '个', '处', '方', '[SEP]'], ['[CLS]', '勃', '起', '困', '难', '不', '坚', '早', '泄', '房', '事', '出', '汗', '[SEP]'], ['[CLS]', '小', '时', '候', '不', '懂', '事', '手', '淫', '过', '度', '现', '在', '两', '分', '钟', '就', '完', '事', '啦', '而', '且', '还', '不', '够', '硬', '应', '该', '吃', '点', '什', '么', '药', '肾', '宝', '片', '金', '水', '宝', '六', '味', '地', '黄', '还', '是', '怎', '么', '治', '疗', '[SEP]'], ['[CLS]', '女', '性', '不', '孕', '您', '好', '女', '性', '不', '孕', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', '大', '夫', '您', '好', '有', '半', '年', '时', '间', '了', '想', '做', '爱', '但', '阴', '茎', '无', '法', '正', '常', '勃', '起', '晚', '上', '做', '梦', '或', '者', '早', '上', '可', '以', '勃', '起', '有', '时', '看', '色', '情', '视', '频', '可', '以', '勃', '起', '以', '前', '有', '自', '慰', '习', '惯', '由', '于', '夫', '妻', '不', '常', '在', '一', '起', '所', '以', '没', '有', '规', '律', '的', '性', '生', '活', '挺', '焦', '虑', '的', '请', '为', '大', '夫', '我', '这', '是', '性', '功', '能', '障', '碍', '吗', '没', '去', '医', '院', '检', '查', '过', '呢', '看', '网', '上', '说', '金', '戈', '西', '地', '那', '非', '片', '是', '治', '疗', '这', '样', '病', '的', '就', '是', '得', '要', '处', '方', '麻', '烦', '大', '夫', '给', '看', '[SEP]'], ['[CLS]', '高', '血', '压', '人', '能', '活', '多', '久', '亲', '戚', '查', '出', '来', '患', '高', '血', '压', '麻', '烦', '医', '生', '解', '惑', '高', '血', '压', '人', '能', '活', '多', '久', '[SEP]'], ['[CLS]', '以', '前', '得', '过', '睾', '丸', '炎', '现', '在', '射', '精', '快', '[SEP]']]
 
2021-08-24 18:13:53 train.py INFO token_ids: tensor([[ 101, 2140, 2140,  ...,    0,    0,    0],
        [ 101, 2111, 2094,  ...,    0,    0,    0],
        [ 101,  704, 5439,  ...,    0,    0,    0],
        ...,
        [ 101, 1920, 1923,  ..., 5314, 4692,  102],
        [ 101, 7770, 6117,  ...,    0,    0,    0],
        [ 101,  809, 1184,  ...,    0,    0,    0]])
 
2021-08-24 18:13:53 train.py INFO token_ids shape: torch.Size([64, 128])
 
2021-08-24 18:13:53 train.py INFO attention_mask: tensor([[1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        ...,
        [1, 1, 1,  ..., 1, 1, 1],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0]])

2021-08-24 18:13:53 train.py INFO token_type_ids: tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]])

2021-08-24 18:13:53 train.py INFO labels: tensor([ 7,  5,  4, 10,  6,  8,  1,  4,  7,  3,  9, 10,  4,  3,  4,  1,  7,  7,
         9,  6, 10, 10,  3,  5,  9,  3,  6,  1,  7,  8,  6,  4,  9,  3,  8,  1,
         5,  7,  1,  6,  8,  8,  7,  0,  8, 10,  7,  0,  7,  0,  1,  3, 10,  4,
         6,  3,  0,  8,  0,  0,  3,  0,  4,  0])

2021-08-24 18:13:53 train.py INFO labels shape: torch.Size([64])

2021-08-24 18:15:16 train.py INFO evaluate....................
/usr/local/lib/python3.6/dist-packages/sklearn/metrics/_classification.py:1221: UndefinedMetricWarning: Precision and F-score are ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
2021-08-24 18:15:24 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.4729    0.9442    0.6302       591
         皮肤科     0.3028    0.1908    0.2340       173
          其它     0.0000    0.0000    0.0000       162
          妇科     0.0682    0.0417    0.0517        72
       心血管内科     0.2222    0.0896    0.1277        67
        耳鼻喉科     0.0000    0.0000    0.0000        51
        消化内科     0.9091    0.1190    0.2105        84
        小儿内科     0.5500    0.0965    0.1642       114
        呼吸内科     0.7273    0.0584    0.1081       137
        内分泌科     1.0000    0.0476    0.0909        63
        神经内科     0.0719    0.1667    0.1005        66

    accuracy                         0.4070      1580
   macro avg     0.3931    0.1595    0.1562      1580
weighted avg     0.4165    0.4070    0.3093      1580

2021-08-24 18:15:24 train.py INFO Confusion matrix: 
[[558  21   0   6   2   0   0   0   0   0   4]
 [125  33   0   5   2   0   0   0   0   0   8]
 [114  22   0   9   0   1   0   1   0   0  15]
 [ 59   2   0   3   1   0   0   0   0   0   7]
 [ 54   1   0   3   6   0   0   0   0   0   3]
 [ 27   5   0   4   0   0   0   3   0   0  12]
 [ 56   6   0   5   2   0  10   0   0   0   5]
 [ 40   2   0   3   2  11   1  11   3   0  41]
 [ 55   5   0   5   9  10   0   5   8   0  40]
 [ 42   8   0   0   3   0   0   0   0   3   7]
 [ 50   4   0   1   0   0   0   0   0   0  11]]
2021-08-24 18:15:24 train.py INFO saving model..........
2021-08-24 18:15:26 train.py INFO Iter:100, Train Loss:1.4709, Train Acc:26.56%, Val Loss:1.7854, Val Acc:40.70%, Time:0:01:43 *
2021-08-24 18:16:47 train.py INFO evaluate....................
2021-08-24 18:16:55 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8041    0.9239    0.8598       591
         皮肤科     0.7524    0.4566    0.5683       173
          其它     0.5000    0.0185    0.0357       162
          妇科     0.7250    0.4028    0.5179        72
       心血管内科     0.6719    0.6418    0.6565        67
        耳鼻喉科     0.2778    0.0980    0.1449        51
        消化内科     0.3196    0.8333    0.4620        84
        小儿内科     0.4815    0.2281    0.3095       114
        呼吸内科     0.4504    0.8613    0.5915       137
        内分泌科     0.5802    0.7460    0.6528        63
        神经内科     0.5385    0.4242    0.4746        66

    accuracy                         0.6291      1580
   macro avg     0.5547    0.5122    0.4794      1580
weighted avg     0.6413    0.6291    0.5877      1580

2021-08-24 18:16:55 train.py INFO Confusion matrix: 
[[546   4   2   5   2   0  16   0  12   2   2]
 [ 43  79   0   6   1   0  21   3   4  11   5]
 [ 34  13   3   0   5   2  52  12  22  10   9]
 [ 19   4   0  29   3   0   8   2   3   4   0]
 [  5   1   1   0  43   0   6   0   6   3   2]
 [  8   0   0   0   0   5   4   5  28   0   1]
 [  4   2   0   0   2   0  70   2   4   0   0]
 [  7   0   0   0   0   5  14  26  60   0   2]
 [  2   0   0   0   1   6   6   2 118   0   2]
 [  2   0   0   0   0   0   9   2   2  47   1]
 [  9   2   0   0   7   0  13   0   3   4  28]]
2021-08-24 18:16:55 train.py INFO saving model..........
2021-08-24 18:16:56 train.py INFO Iter:200, Train Loss:0.0710, Train Acc:89.06%, Val Loss:0.5532, Val Acc:62.91%, Time:0:03:13 *
2021-08-24 18:18:19 train.py INFO evaluate....................
2021-08-24 18:18:27 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.6458    0.9780    0.7779       591
         皮肤科     0.7568    0.3237    0.4534       173
          其它     0.2759    0.1481    0.1928       162
          妇科     0.8966    0.3611    0.5149        72
       心血管内科     0.8269    0.6418    0.7227        67
        耳鼻喉科     0.4474    0.3333    0.3820        51
        消化内科     0.7414    0.5119    0.6056        84
        小儿内科     0.6889    0.2719    0.3899       114
        呼吸内科     0.4916    0.8540    0.6240       137
        内分泌科     0.7838    0.4603    0.5800        63
        神经内科     0.7778    0.3182    0.4516        66

    accuracy                         0.6234      1580
   macro avg     0.6666    0.4729    0.5177      1580
weighted avg     0.6386    0.6234    0.5833      1580

2021-08-24 18:18:27 train.py INFO Confusion matrix: 
[[578   3   4   0   1   0   0   0   5   0   0]
 [ 93  56  12   3   1   0   1   0   5   2   0]
 [ 87   7  24   0   2   3   8   3  22   3   3]
 [ 39   2   3  26   0   0   0   1   0   1   0]
 [ 14   0   3   0  43   0   0   0   5   2   0]
 [ 11   0   0   0   0  17   0   1  22   0   0]
 [ 16   2  11   0   0   0  43   3   8   0   1]
 [ 12   1   3   0   0  10   5  31  51   0   1]
 [  8   0   0   0   0   8   1   3 117   0   0]
 [  8   0  21   0   1   0   0   2   1  29   1]
 [ 29   3   6   0   4   0   0   1   2   0  21]]
2021-08-24 18:18:27 train.py INFO Iter:300, Train Loss:0.1627, Train Acc:75.00%, Val Loss:0.4995, Val Acc:62.34%, Time:0:04:43 
2021-08-24 18:19:48 train.py INFO evaluate....................
2021-08-24 18:19:56 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8770    0.9289    0.9022       591
         皮肤科     0.8605    0.4277    0.5714       173
          其它     0.3029    0.4506    0.3623       162
          妇科     0.9118    0.4306    0.5849        72
       心血管内科     0.6049    0.7313    0.6622        67
        耳鼻喉科     0.8462    0.2157    0.3438        51
        消化内科     0.8667    0.4643    0.6047        84
        小儿内科     0.3982    0.7719    0.5254       114
        呼吸内科     0.7000    0.5620    0.6235       137
        内分泌科     0.5376    0.7937    0.6410        63
        神经内科     0.8333    0.3788    0.5208        66

    accuracy                         0.6747      1580
   macro avg     0.7035    0.5596    0.5766      1580
weighted avg     0.7396    0.6747    0.6744      1580

2021-08-24 18:19:56 train.py INFO Confusion matrix: 
[[549   2  24   1   6   0   0   4   1   4   0]
 [ 25  74  54   2   1   0   0   7   0   9   1]
 [ 18   5  73   0  11   0   5  25   7  15   3]
 [ 12   1  22  31   2   0   0   2   0   2   0]
 [  1   0   9   0  49   0   0   1   2   5   0]
 [  5   0   8   0   0  11   0  21   5   0   1]
 [  5   1  19   0   3   0  39  11   4   2   0]
 [  1   0   9   0   0   1   1  88  13   1   0]
 [  1   0   4   0   2   1   0  51  77   1   0]
 [  1   0   5   0   1   0   0   6   0  50   0]
 [  8   3  14   0   6   0   0   5   1   4  25]]
2021-08-24 18:19:56 train.py INFO saving model..........
2021-08-24 18:20:01 train.py INFO Iter:400, Train Loss:0.1190, Train Acc:79.69%, Val Loss:0.3909, Val Acc:67.47%, Time:0:06:18 *
2021-08-24 18:21:25 train.py INFO evaluate....................
2021-08-24 18:21:33 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9341    0.9357    0.9349       591
         皮肤科     0.7277    0.8035    0.7637       173
          其它     0.5000    0.0988    0.1649       162
          妇科     0.8269    0.5972    0.6935        72
       心血管内科     0.3869    0.7910    0.5196        67
        耳鼻喉科     0.7308    0.3725    0.4935        51
        消化内科     0.7843    0.4762    0.5926        84
        小儿内科     0.4698    0.6140    0.5323       114
        呼吸内科     0.5538    0.7883    0.6506       137
        内分泌科     0.4417    0.8413    0.5792        63
        神经内科     0.7429    0.3939    0.5149        66

    accuracy                         0.7089      1580
   macro avg     0.6454    0.6102    0.5854      1580
weighted avg     0.7303    0.7089    0.6907      1580

2021-08-24 18:21:33 train.py INFO Confusion matrix: 
[[553  11   3   5   7   0   0   3   6   3   0]
 [  5 139   1   3   6   0   1   6   4   7   1]
 [ 17  22  16   1  32   0   8  19  11  30   6]
 [  7   8   2  43   5   0   0   0   2   5   0]
 [  1   1   0   0  53   0   0   1   3   8   0]
 [  1   0   0   0   1  19   0   7  22   0   1]
 [  3   2   6   0   5   0  40  16   7   5   0]
 [  2   2   2   0   3   2   2  70  30   1   0]
 [  1   1   0   0   2   5   0  19 108   1   0]
 [  0   1   1   0   4   0   0   3   0  53   1]
 [  2   4   1   0  19   0   0   5   2   7  26]]
2021-08-24 18:21:33 train.py INFO saving model..........
2021-08-24 18:21:35 train.py INFO Iter:500, Train Loss:0.2798, Train Acc:75.00%, Val Loss:0.3065, Val Acc:70.89%, Time:0:07:52 *
2021-08-24 18:22:57 train.py INFO evaluate....................
2021-08-24 18:23:05 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9703    0.8832    0.9247       591
         皮肤科     0.6352    0.8555    0.7291       173
          其它     0.4762    0.1852    0.2667       162
          妇科     0.6429    0.7500    0.6923        72
       心血管内科     0.8036    0.6716    0.7317        67
        耳鼻喉科     0.6552    0.3725    0.4750        51
        消化内科     0.6186    0.8690    0.7228        84
        小儿内科     0.5977    0.4561    0.5174       114
        呼吸内科     0.5129    0.8686    0.6450       137
        内分泌科     0.6538    0.8095    0.7234        63
        神经内科     0.6613    0.6212    0.6406        66

    accuracy                         0.7304      1580
   macro avg     0.6571    0.6675    0.6426      1580
weighted avg     0.7400    0.7304    0.7183      1580

2021-08-24 18:23:05 train.py INFO Confusion matrix: 
[[522  30  12  10   1   1   7   0   5   3   0]
 [  3 148   2   7   1   0   2   3   5   1   1]
 [  8  31  30   6   4   1  25  14  18  13  12]
 [  1   8   2  54   0   0   3   1   2   1   0]
 [  1   3   1   2  45   0   1   0   6   6   2]
 [  0   0   2   0   0  19   0   5  23   0   2]
 [  1   1   0   1   0   0  73   1   7   0   0]
 [  1   3   3   1   0   2   5  52  45   1   1]
 [  0   0   0   1   1   6   1   8 119   1   0]
 [  0   2   3   1   0   0   1   2   0  51   3]
 [  1   7   8   1   4   0   0   1   2   1  41]]
2021-08-24 18:23:05 train.py INFO saving model..........
2021-08-24 18:23:08 train.py INFO Iter:600, Train Loss:0.0192, Train Acc:92.19%, Val Loss:0.2741, Val Acc:73.04%, Time:0:09:25 *
2021-08-24 18:24:30 train.py INFO evaluate....................
2021-08-24 18:24:38 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9407    0.9391    0.9399       591
         皮肤科     0.9000    0.6243    0.7372       173
          其它     0.3737    0.4568    0.4111       162
          妇科     0.8167    0.6806    0.7424        72
       心血管内科     0.8824    0.6716    0.7627        67
        耳鼻喉科     0.7317    0.5882    0.6522        51
        消化内科     0.7903    0.5833    0.6712        84
        小儿内科     0.8065    0.4386    0.5682       114
        呼吸内科     0.5419    0.8978    0.6758       137
        内分泌科     0.5591    0.8254    0.6667        63
        神经内科     0.5789    0.6667    0.6197        66

    accuracy                         0.7462      1580
   macro avg     0.7202    0.6702    0.6770      1580
weighted avg     0.7806    0.7462    0.7494      1580

2021-08-24 18:24:38 train.py INFO Confusion matrix: 
[[555   3  17   4   0   1   0   0   3   6   2]
 [  7 108  40   4   0   0   0   0   2   7   5]
 [ 13   7  74   2   3   2   9   3  19  14  16]
 [  3   0  12  49   0   1   0   1   1   4   1]
 [  2   0   5   0  45   0   0   0   6   7   2]
 [  0   0   3   0   0  30   0   1  16   0   1]
 [  4   1  18   0   0   0  49   1   9   1   1]
 [  1   0  10   1   0   2   3  50  45   1   1]
 [  2   0   1   0   0   4   1   5 123   0   1]
 [  0   0   7   0   0   0   0   1   1  52   2]
 [  3   1  11   0   3   1   0   0   2   1  44]]
2021-08-24 18:24:38 train.py INFO saving model..........
2021-08-24 18:24:40 train.py INFO Iter:700, Train Loss:0.0191, Train Acc:92.19%, Val Loss:0.2400, Val Acc:74.62%, Time:0:10:57 *
2021-08-24 18:26:01 train.py INFO evaluate....................
2021-08-24 18:26:09 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9333    0.9475    0.9404       591
         皮肤科     0.8649    0.7399    0.7975       173
          其它     0.4208    0.5247    0.4670       162
          妇科     0.7576    0.6944    0.7246        72
       心血管内科     0.6026    0.7015    0.6483        67
        耳鼻喉科     0.4674    0.8431    0.6014        51
        消化内科     0.8571    0.5714    0.6857        84
        小儿内科     0.7353    0.4386    0.5495       114
        呼吸内科     0.7101    0.7153    0.7127       137
        内分泌科     0.6901    0.7778    0.7313        63
        神经内科     0.6721    0.6212    0.6457        66

    accuracy                         0.7589      1580
   macro avg     0.7010    0.6887    0.6822      1580
weighted avg     0.7779    0.7589    0.7609      1580

2021-08-24 18:26:09 train.py INFO Confusion matrix: 
[[560   4  14   5   2   0   0   0   0   5   1]
 [ 10 128  24   4   3   0   0   0   0   2   2]
 [ 13   9  85   5  13   7   5   4   3   7  11]
 [  3   1  16  50   0   0   0   1   0   1   0]
 [  3   0   3   1  47   1   0   0   4   7   1]
 [  0   0   4   0   0  43   0   0   3   0   1]
 [  6   1  19   0   2   1  48   2   4   0   1]
 [  0   3  14   1   2  17   2  50  25   0   0]
 [  0   0   4   0   2  22   1   8  98   0   2]
 [  1   0   9   0   2   0   0   1   0  49   1]
 [  4   2  10   0   5   1   0   2   1   0  41]]
2021-08-24 18:26:09 train.py INFO saving model..........
2021-08-24 18:26:11 train.py INFO Iter:800, Train Loss:0.1048, Train Acc:79.69%, Val Loss:0.2145, Val Acc:75.89%, Time:0:12:27 *
2021-08-24 18:27:34 train.py INFO evaluate....................
2021-08-24 18:27:42 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9661    0.9154    0.9401       591
         皮肤科     0.7460    0.8150    0.7790       173
          其它     0.4833    0.1790    0.2613       162
          妇科     0.8246    0.6528    0.7287        72
       心血管内科     0.4000    0.7761    0.5279        67
        耳鼻喉科     0.5902    0.7059    0.6429        51
        消化内科     0.9189    0.4048    0.5620        84
        小儿内科     0.3253    0.8333    0.4680       114
        呼吸内科     0.5669    0.5255    0.5455       137
        内分泌科     0.8400    0.6667    0.7434        63
        神经内科     0.8235    0.2121    0.3373        66

    accuracy                         0.6981      1580
   macro avg     0.6804    0.6079    0.5942      1580
weighted avg     0.7556    0.6981    0.6947      1580

2021-08-24 18:27:42 train.py INFO Confusion matrix: 
[[541  14   8   5  10   3   0   5   4   1   0]
 [  5 141   5   3   6   0   0  10   2   1   0]
 [  9  23  29   2  26   4   2  50  13   3   1]
 [  2   1   4  47   3   1   0  13   1   0   0]
 [  1   1   1   0  52   0   0   4   5   3   0]
 [  0   0   0   0   0  36   0  12   3   0   0]
 [  1   2   5   0   7   1  34  26   8   0   0]
 [  0   3   2   0   0   4   1  95   9   0   0]
 [  0   0   1   0   0  11   0  53  72   0   0]
 [  0   1   2   0   4   0   0  10   2  42   2]
 [  1   3   3   0  22   1   0  14   8   0  14]]
2021-08-24 18:27:42 train.py INFO Iter:900, Train Loss:0.0422, Train Acc:89.06%, Val Loss:0.3141, Val Acc:69.81%, Time:0:13:58 
2021-08-24 18:29:04 train.py INFO evaluate....................
2021-08-24 18:29:12 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9477    0.9509    0.9493       591
         皮肤科     0.6982    0.8960    0.7848       173
          其它     0.5152    0.3148    0.3908       162
          妇科     0.7639    0.7639    0.7639        72
       心血管内科     0.8364    0.6866    0.7541        67
        耳鼻喉科     0.6538    0.6667    0.6602        51
        消化内科     0.8475    0.5952    0.6993        84
        小儿内科     0.4093    0.8509    0.5527       114
        呼吸内科     0.7667    0.3358    0.4670       137
        内分泌科     0.7419    0.7302    0.7360        63
        神经内科     0.5942    0.6212    0.6074        66

    accuracy                         0.7487      1580
   macro avg     0.7068    0.6738    0.6696      1580
weighted avg     0.7706    0.7487    0.7415      1580

2021-08-24 18:29:12 train.py INFO Confusion matrix: 
[[562  13   4   5   1   0   0   2   0   1   3]
 [  4 155   5   5   1   0   1   0   0   1   1]
 [ 13  34  51   4   3   4   5  22   4   8  14]
 [  2   7   4  55   0   0   0   4   0   0   0]
 [  3   1   3   1  46   0   0   1   4   6   2]
 [  0   1   0   0   0  34   0  15   0   0   1]
 [  4   2  10   0   0   1  50  14   2   0   1]
 [  0   3   3   2   0   3   2  97   3   0   1]
 [  1   0   0   0   2  10   1  75  46   0   2]
 [  1   1   8   0   0   0   0   4   0  46   3]
 [  3   5  11   0   2   0   0   3   1   0  41]]
2021-08-24 18:29:12 train.py INFO Iter:1000, Train Loss:0.0248, Train Acc:85.94%, Val Loss:0.2053, Val Acc:74.87%, Time:0:15:29 
2021-08-24 18:30:38 train.py INFO evaluate....................
2021-08-24 18:30:46 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8986    0.9594    0.9280       591
         皮肤科     0.8282    0.7803    0.8036       173
          其它     0.5278    0.2346    0.3248       162
          妇科     0.6629    0.8194    0.7329        72
       心血管内科     0.6500    0.7761    0.7075        67
        耳鼻喉科     0.6296    0.6667    0.6476        51
        消化内科     0.6939    0.8095    0.7473        84
        小儿内科     0.7101    0.4298    0.5355       114
        呼吸内科     0.6328    0.8175    0.7134       137
        内分泌科     0.7042    0.7937    0.7463        63
        神经内科     0.5658    0.6515    0.6056        66

    accuracy                         0.7639      1580
   macro avg     0.6822    0.7035    0.6811      1580
weighted avg     0.7537    0.7639    0.7480      1580

2021-08-24 18:30:46 train.py INFO Confusion matrix: 
[[567   6   3   8   2   0   1   0   0   1   3]
 [ 11 135   6  11   1   0   2   0   0   2   5]
 [ 31  13  38   8  11   3  19   8   8  10  13]
 [  6   0   4  59   0   0   1   1   0   1   0]
 [  3   1   1   0  52   0   1   0   2   5   2]
 [  1   0   2   1   0  34   0   2   9   0   2]
 [  5   1   4   0   0   0  68   2   4   0   0]
 [  0   4   4   1   1   6   4  49  41   2   2]
 [  1   0   0   1   3  11   2   4 112   0   3]
 [  2   0   4   0   2   0   0   2   0  50   3]
 [  4   3   6   0   8   0   0   1   1   0  43]]
2021-08-24 18:30:46 train.py INFO saving model..........
2021-08-24 18:30:48 train.py INFO Iter:1100, Train Loss:0.0149, Train Acc:90.62%, Val Loss:0.2067, Val Acc:76.39%, Time:0:17:05 *
2021-08-24 18:32:11 train.py INFO evaluate....................
2021-08-24 18:32:19 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8853    0.9662    0.9239       591
         皮肤科     0.7019    0.8439    0.7664       173
          其它     0.5000    0.1049    0.1735       162
          妇科     0.7051    0.7639    0.7333        72
       心血管内科     0.9286    0.5821    0.7156        67
        耳鼻喉科     0.7143    0.4902    0.5814        51
        消化内科     0.7188    0.8214    0.7667        84
        小儿内科     0.6429    0.6316    0.6372       114
        呼吸内科     0.7479    0.6496    0.6953       137
        内分泌科     0.8200    0.6508    0.7257        63
        神经内科     0.3416    0.8333    0.4846        66

    accuracy                         0.7462      1580
   macro avg     0.7006    0.6671    0.6549      1580
weighted avg     0.7502    0.7462    0.7260      1580

2021-08-24 18:32:19 train.py INFO Confusion matrix: 
[[571   7   1   7   0   0   1   0   0   1   3]
 [ 14 146   0   7   0   0   1   0   0   0   5]
 [ 31  32  17   6   1   1  18   9   2   4  41]
 [  7   3   2  55   0   0   2   1   0   0   2]
 [  3   1   0   1  39   0   0   0   3   4  16]
 [  4   2   3   0   0  25   0   4   4   0   9]
 [  5   1   4   0   0   0  69   0   3   0   2]
 [  3   7   1   2   0   2   3  72  18   0   6]
 [  2   3   0   0   1   7   2  24  89   0   9]
 [  1   2   4   0   0   0   0   2   0  41  13]
 [  4   4   2   0   1   0   0   0   0   0  55]]
2021-08-24 18:32:19 train.py INFO Iter:1200, Train Loss:0.0588, Train Acc:85.94%, Val Loss:0.2437, Val Acc:74.62%, Time:0:18:36 
2021-08-24 18:33:42 train.py INFO evaluate....................
2021-08-24 18:33:50 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9848    0.8748    0.9265       591
         皮肤科     0.6504    0.9249    0.7637       173
          其它     0.4162    0.4444    0.4299       162
          妇科     0.7536    0.7222    0.7376        72
       心血管内科     0.9149    0.6418    0.7544        67
        耳鼻喉科     0.8235    0.2745    0.4118        51
        消化内科     0.8140    0.8333    0.8235        84
        小儿内科     0.4899    0.8509    0.6218       114
        呼吸内科     0.7822    0.5766    0.6639       137
        内分泌科     0.8070    0.7302    0.7667        63
        神经内科     0.6885    0.6364    0.6614        66

    accuracy                         0.7544      1580
   macro avg     0.7386    0.6827    0.6874      1580
weighted avg     0.7893    0.7544    0.7576      1580

2021-08-24 18:33:50 train.py INFO Confusion matrix: 
[[517  26  36   7   1   0   1   1   0   1   1]
 [  3 160   5   4   0   0   0   0   1   0   0]
 [  3  36  72   3   1   0  12  15   5   4  11]
 [  1  11   7  52   0   0   0   1   0   0   0]
 [  0   3   4   1  43   0   0   3   4   6   3]
 [  0   0  11   0   0  14   0  21   4   0   1]
 [  0   1   9   0   0   0  70   2   2   0   0]
 [  0   3   5   2   0   1   2  97   4   0   0]
 [  0   0   2   0   0   2   1  53  79   0   0]
 [  1   0  10   0   0   0   0   3   0  46   3]
 [  0   6  12   0   2   0   0   2   2   0  42]]
2021-08-24 18:33:50 train.py INFO Iter:1300, Train Loss:0.0106, Train Acc:92.19%, Val Loss:0.2000, Val Acc:75.44%, Time:0:20:07 
2021-08-24 18:35:12 train.py INFO evaluate....................
2021-08-24 18:35:20 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9365    0.9729    0.9544       591
         皮肤科     0.9197    0.7283    0.8129       173
          其它     0.4550    0.5926    0.5147       162
          妇科     0.7308    0.7917    0.7600        72
       心血管内科     0.8182    0.6716    0.7377        67
        耳鼻喉科     0.7222    0.5098    0.5977        51
        消化内科     0.8730    0.6548    0.7483        84
        小儿内科     0.8364    0.4035    0.5444       114
        呼吸内科     0.6127    0.9124    0.7331       137
        内分泌科     0.6463    0.8413    0.7310        63
        神经内科     0.8444    0.5758    0.6847        66

    accuracy                         0.7861      1580
   macro avg     0.7632    0.6959    0.7108      1580
weighted avg     0.8099    0.7861    0.7844      1580

2021-08-24 18:35:20 train.py INFO Confusion matrix: 
[[575   1   8   3   0   0   0   0   0   3   1]
 [ 11 126  25   6   1   0   0   0   1   2   1]
 [ 15   7  96   6   5   1   5   3  10  11   3]
 [  5   0   9  57   0   0   0   1   0   0   0]
 [  2   0   5   1  45   0   0   0   4   9   1]
 [  0   0   9   0   0  26   0   1  14   0   1]
 [  2   0  21   1   0   0  55   1   4   0   0]
 [  1   2  11   4   0   2   2  46  44   2   0]
 [  1   0   0   0   0   7   1   2 125   1   0]
 [  1   0   8   0   0   0   0   1   0  53   0]
 [  1   1  19   0   4   0   0   0   2   1  38]]
2021-08-24 18:35:20 train.py INFO saving model..........
2021-08-24 18:35:22 train.py INFO Iter:1400, Train Loss:0.0329, Train Acc:89.06%, Val Loss:0.1581, Val Acc:78.61%, Time:0:21:38 *
2021-08-24 18:36:44 train.py INFO evaluate....................
2021-08-24 18:36:52 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9127    0.9729    0.9419       591
         皮肤科     0.9097    0.7572    0.8265       173
          其它     0.4615    0.5556    0.5042       162
          妇科     0.8033    0.6806    0.7368        72
       心血管内科     0.8036    0.6716    0.7317        67
        耳鼻喉科     0.5846    0.7451    0.6552        51
        消化内科     0.8493    0.7381    0.7898        84
        小儿内科     0.9583    0.2018    0.3333       114
        呼吸内科     0.6432    0.8686    0.7391       137
        内分泌科     0.6625    0.8413    0.7413        63
        神经内科     0.6866    0.6970    0.6917        66

    accuracy                         0.7791      1580
   macro avg     0.7523    0.7027    0.6992      1580
weighted avg     0.8030    0.7791    0.7688      1580

2021-08-24 18:36:52 train.py INFO Confusion matrix: 
[[575   2   8   3   0   1   0   0   0   2   0]
 [ 14 131  19   4   1   0   0   0   0   2   2]
 [ 22   8  90   3   5   5   6   1   3   9  10]
 [  7   1  14  49   0   0   0   0   0   1   0]
 [  2   0   6   1  45   0   0   0   3   8   2]
 [  0   0   4   0   0  38   0   0   8   0   1]
 [  3   0  15   0   0   0  62   0   3   1   0]
 [  2   1  19   1   0  11   4  23  48   3   2]
 [  1   0   4   0   1   9   1   0 119   0   2]
 [  1   0   7   0   0   0   0   0   0  53   2]
 [  3   1   9   0   4   1   0   0   1   1  46]]
2021-08-24 18:36:52 train.py INFO Iter:1500, Train Loss:0.0316, Train Acc:85.94%, Val Loss:0.1736, Val Acc:77.91%, Time:0:23:09 
2021-08-24 18:38:13 train.py INFO evaluate....................
2021-08-24 18:38:21 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9377    0.9679    0.9525       591
         皮肤科     0.7560    0.9133    0.8272       173
          其它     0.6053    0.2840    0.3866       162
          妇科     0.8000    0.7222    0.7591        72
       心血管内科     0.9070    0.5821    0.7091        67
        耳鼻喉科     0.5062    0.8039    0.6212        51
        消化内科     0.7935    0.8690    0.8295        84
        小儿内科     0.7000    0.4912    0.5773       114
        呼吸内科     0.6402    0.8832    0.7423       137
        内分泌科     0.6250    0.8730    0.7285        63
        神经内科     0.7872    0.5606    0.6549        66

    accuracy                         0.7911      1580
   macro avg     0.7325    0.7228    0.7080      1580
weighted avg     0.7928    0.7911    0.7777      1580

2021-08-24 18:38:21 train.py INFO Confusion matrix: 
[[572   8   2   3   0   3   1   1   0   1   0]
 [  7 158   1   3   1   0   1   0   2   0   0]
 [ 18  25  46   3   2  13  14   8  11  15   7]
 [  4   7   5  52   0   1   0   1   0   2   0]
 [  3   3   1   2  39   1   0   1   6   9   2]
 [  0   1   0   0   0  41   0   1   7   0   1]
 [  1   0   3   1   0   0  73   3   3   0   0]
 [  1   2   4   1   0   9   2  56  37   2   0]
 [  1   0   0   0   0   8   1   6 121   0   0]
 [  1   2   3   0   0   0   0   2   0  55   0]
 [  2   3  11   0   1   5   0   1   2   4  37]]
2021-08-24 18:38:21 train.py INFO saving model..........
2021-08-24 18:38:23 train.py INFO Iter:1600, Train Loss:0.0102, Train Acc:93.75%, Val Loss:0.1708, Val Acc:79.11%, Time:0:24:39 *
2021-08-24 18:39:45 train.py INFO evaluate....................
2021-08-24 18:39:53 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9033    0.9797    0.9399       591
         皮肤科     0.9103    0.8208    0.8632       173
          其它     0.4323    0.6111    0.5064       162
          妇科     0.9677    0.4167    0.5825        72
       心血管内科     0.9535    0.6119    0.7455        67
        耳鼻喉科     0.7059    0.4706    0.5647        51
        消化内科     0.8676    0.7024    0.7763        84
        小儿内科     0.7875    0.5526    0.6495       114
        呼吸内科     0.6610    0.8540    0.7452       137
        内分泌科     0.7246    0.7937    0.7576        63
        神经内科     0.7885    0.6212    0.6949        66

    accuracy                         0.7880      1580
   macro avg     0.7911    0.6759    0.7114      1580
weighted avg     0.8113    0.7880    0.7864      1580

2021-08-24 18:39:53 train.py INFO Confusion matrix: 
[[579   2   7   0   0   1   0   0   0   2   0]
 [  9 142  20   0   0   0   0   0   0   1   1]
 [ 21   8  99   1   1   1   6   5   8   8   4]
 [ 19   0  22  30   0   0   0   1   0   0   0]
 [  6   0   9   0  41   0   0   0   2   8   1]
 [  0   0  16   0   0  24   0   1  10   0   0]
 [  2   0  16   0   0   0  59   2   5   0   0]
 [  0   2  11   0   0   1   2  63  33   0   2]
 [  1   0   3   0   0   6   1   7 117   0   2]
 [  1   0  10   0   0   0   0   1   0  50   1]
 [  3   2  16   0   1   1   0   0   2   0  41]]
2021-08-24 18:39:53 train.py INFO Iter:1700, Train Loss:0.0856, Train Acc:82.81%, Val Loss:0.1571, Val Acc:78.80%, Time:0:26:10 
2021-08-24 18:41:16 train.py INFO evaluate....................
2021-08-24 18:41:24 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9244    0.9729    0.9481       591
         皮肤科     0.7429    0.9017    0.8146       173
          其它     0.4930    0.4321    0.4605       162
          妇科     0.7037    0.7917    0.7451        72
       心血管内科     0.9348    0.6418    0.7611        67
        耳鼻喉科     0.7209    0.6078    0.6596        51
        消化内科     0.7629    0.8810    0.8177        84
        小儿内科     0.7356    0.5614    0.6368       114
        呼吸内科     0.7095    0.7664    0.7368       137
        内分泌科     0.7931    0.7302    0.7603        63
        神经内科     0.7826    0.5455    0.6429        66

    accuracy                         0.7956      1580
   macro avg     0.7549    0.7120    0.7258      1580
weighted avg     0.7921    0.7956    0.7890      1580

2021-08-24 18:41:24 train.py INFO Confusion matrix: 
[[575   5   4   5   0   0   0   0   0   1   1]
 [  6 156   5   5   0   0   1   0   0   0   0]
 [ 22  24  70   7   1   3  16   5   5   5   4]
 [  3   7   4  57   0   0   0   1   0   0   0]
 [  4   2   7   2  43   0   0   0   2   6   1]
 [  0   4   7   0   0  31   0   1   7   0   1]
 [  3   0   4   0   0   0  74   1   2   0   0]
 [  0   2  11   2   0   2   5  64  27   0   1]
 [  2   2   4   0   0   7   1  14 105   0   2]
 [  2   2  10   2   0   0   0   1   0  46   0]
 [  5   6  16   1   2   0   0   0   0   0  36]]
2021-08-24 18:41:24 train.py INFO saving model..........
2021-08-24 18:41:26 train.py INFO Iter:1800, Train Loss:0.0183, Train Acc:92.19%, Val Loss:0.1420, Val Acc:79.56%, Time:0:27:43 *
2021-08-24 18:42:49 train.py INFO evaluate....................
2021-08-24 18:42:57 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9640    0.9526    0.9583       591
         皮肤科     0.8924    0.8150    0.8520       173
          其它     0.5769    0.4630    0.5137       162
          妇科     0.7532    0.8056    0.7785        72
       心血管内科     0.6974    0.7910    0.7413        67
        耳鼻喉科     0.7255    0.7255    0.7255        51
        消化内科     0.8356    0.7262    0.7771        84
        小儿内科     0.6632    0.5526    0.6029       114
        呼吸内科     0.6328    0.8175    0.7134       137
        内分泌科     0.5957    0.8889    0.7134        63
        神经内科     0.7538    0.7424    0.7481        66

    accuracy                         0.8025      1580
   macro avg     0.7355    0.7528    0.7385      1580
weighted avg     0.8072    0.8025    0.8011      1580

2021-08-24 18:42:57 train.py INFO Confusion matrix: 
[[563   5   9   5   1   0   0   2   2   3   1]
 [  7 141  10   5   1   0   0   1   1   5   2]
 [  7   9  75   7  11   4   9   9   8  17   6]
 [  2   0   7  58   0   0   0   1   0   4   0]
 [  2   0   1   0  53   1   0   0   4   5   1]
 [  0   0   2   0   0  37   0   1   9   1   1]
 [  1   0  13   0   1   0  61   2   5   1   0]
 [  0   2   4   1   2   2   2  63  35   2   1]
 [  0   0   0   1   1   7   1  13 112   0   2]
 [  1   0   2   0   0   0   0   2   0  56   2]
 [  1   1   7   0   6   0   0   1   1   0  49]]
2021-08-24 18:42:57 train.py INFO saving model..........
2021-08-24 18:42:59 train.py INFO Iter:1900, Train Loss:0.0456, Train Acc:85.94%, Val Loss:0.1471, Val Acc:80.25%, Time:0:29:16 *
2021-08-24 18:44:22 train.py INFO evaluate....................
2021-08-24 18:44:30 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9500    0.9645    0.9572       591
         皮肤科     0.8556    0.8902    0.8725       173
          其它     0.5478    0.5309    0.5392       162
          妇科     0.7176    0.8472    0.7771        72
       心血管内科     0.8824    0.6716    0.7627        67
        耳鼻喉科     0.7447    0.6863    0.7143        51
        消化内科     0.7975    0.7500    0.7730        84
        小儿内科     0.7308    0.5000    0.5937       114
        呼吸内科     0.6105    0.8467    0.7095       137
        内分泌科     0.7656    0.7778    0.7717        63
        神经内科     0.8163    0.6061    0.6957        66

    accuracy                         0.8076      1580
   macro avg     0.7653    0.7337    0.7424      1580
weighted avg     0.8120    0.8076    0.8049      1580

2021-08-24 18:44:30 train.py INFO Confusion matrix: 
[[570   7   2   8   0   0   1   0   1   1   1]
 [  6 154   7   5   0   0   0   0   1   0   0]
 [ 13  12  86   7   3   3  10   4  13   5   6]
 [  5   1   4  61   0   0   0   1   0   0   0]
 [  2   0   5   1  45   1   0   0   5   7   1]
 [  0   0   2   0   0  35   0   3  10   0   1]
 [  2   0  14   0   0   0  63   0   5   0   0]
 [  0   2   9   2   1   1   4  57  37   1   0]
 [  0   0   1   1   0   7   1  11 116   0   0]
 [  1   0  12   0   0   0   0   1   0  49   0]
 [  1   4  15   0   2   0   0   1   2   1  40]]
2021-08-24 18:44:30 train.py INFO saving model..........
2021-08-24 18:44:32 train.py INFO Iter:2000, Train Loss:0.0030, Train Acc:96.88%, Val Loss:0.1219, Val Acc:80.76%, Time:0:30:48 *
2021-08-24 18:45:54 train.py INFO evaluate....................
2021-08-24 18:46:02 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8860    0.9865    0.9335       591
         皮肤科     0.7488    0.8960    0.8158       173
          其它     0.4897    0.4383    0.4625       162
          妇科     0.8936    0.5833    0.7059        72
       心血管内科     0.8980    0.6567    0.7586        67
        耳鼻喉科     0.7143    0.6863    0.7000        51
        消化内科     0.8871    0.6548    0.7534        84
        小儿内科     0.6591    0.7632    0.7073       114
        呼吸内科     0.8125    0.6642    0.7309       137
        内分泌科     0.7656    0.7778    0.7717        63
        神经内科     0.7273    0.6061    0.6612        66

    accuracy                         0.7924      1580
   macro avg     0.7711    0.7012    0.7274      1580
weighted avg     0.7915    0.7924    0.7857      1580

2021-08-24 18:46:02 train.py INFO Confusion matrix: 
[[583   6   0   0   0   0   0   0   0   1   1]
 [ 12 155   3   3   0   0   0   0   0   0   0]
 [ 29  28  71   2   2   4   4   6   3   7   6]
 [ 17   5   7  42   0   0   0   1   0   0   0]
 [  3   2   5   0  44   0   0   0   4   7   2]
 [  0   0   7   0   0  35   0   4   4   0   1]
 [  4   1  20   0   0   0  55   1   3   0   0]
 [  2   4   9   0   0   2   2  87   7   0   1]
 [  1   1   2   0   0   7   1  32  91   0   2]
 [  1   1   9   0   0   0   0   1   0  49   2]
 [  6   4  12   0   3   1   0   0   0   0  40]]
2021-08-24 18:46:02 train.py INFO Iter:2100, Train Loss:0.0246, Train Acc:92.19%, Val Loss:0.1382, Val Acc:79.24%, Time:0:32:19 
2021-08-24 18:46:51 train.py INFO Epoch [2/5]
2021-08-24 18:46:51 train.py INFO tokens: [['[CLS]', '大', '便', '出', '血', '怎', '样', '治', '效', '果', '一', '年', '[SEP]'], ['[CLS]', '甲', '亢', '三', '年', '原', '因', '甲', '亢', '三', '年', '十', '月', '二', '十', '五', '号', '医', '院', '服', '食', '碘', '131', '十', '二', '月', '一', '号', '感', '觉', '脖', '子', '变', '肿', '疼', '感', '觉', '不', '摸', '感', '觉', '不', '到', '这', '是', '原', '因', '[SEP]'], ['[CLS]', '小', '儿', '扁', '桃', '体', '发', '炎', '常', '见', '症', '状', '我', '家', '孩', '子', '男', '宝', '宝', '岁', '说', '话', '时', '嗓', '子', '疼', '察', '觉', '到', '咳', '嗽', '剧', '烈', '发', '烧', '请', '问', '小', '儿', '扁', '桃', '体', '发', '炎', '常', '见', '症', '状', '[SEP]'], ['[CLS]', '方', '法', '治', '疗', '小', '儿', '扁', '桃', '体', '炎', '宝', '宝', '性', '别', '女', '两', '岁', '半', '2014', '年', '月', '11', '日', '晚', '宝', '宝', '发', '烧', '咳', '嗽', '流', '涕', '次', '日', '儿', '童', '医', '院', '就', '诊', '诊', '断', '气', '管', '炎', '回', '家', '用', '药', '[SEP]'], ['[CLS]', '白', '带', '增', '多', '治', '较', '怀', '孕', '发', '现', '自', '己', '近', '期', '白', '带', '颜', '色', '很', '深', '气', '味', '特', '重', '特', '别', '担', '心', '影', '响', '孩', '子', '请', '问', '白', '带', '增', '多', '治', '较', '[SEP]'], ['[CLS]', '患', '有', '高', '血', '压', '糖', '尿', '病', '吃', '人', '参', '前', '段', '时', '间', '朋', '友', '家', '里', '做', '客', '拿', '来', '人', '生', '想', '着', '父', '母', '吃', '想', '爸', '爸', '高', '血', '压', '糖', '尿', '病', '想', '您', '好', '医', '生', '患', '高', '血', '压', '糖', '尿', '病', '吃', '人', '参', '[SEP]'], ['[CLS]', '性', '生', '活', '时', '间', '短', '！', '早', '泄', '有', '网', '上', '买', '过', '药', '[SEP]'], ['[CLS]', '脾', '安', '肽', '口', '服', '冻', '干', '粉', '孩', '子', '喝', '[SEP]'], ['[CLS]', '心', '率', '51', '影', '响', '入', '职', '怎', '么', '回', '事', '感', '觉', '心', '脏', '舒', '服', '吃', '药', '控', '制', '效', '果', '医', '院', '检', '查', '吃', '药', '请', '问', '心', '率', '51', '影', '响', '入', '职', '[SEP]'], ['[CLS]', '酒', '后', '感', '冒', '药', '发', '生', '朋', '友', '老', '公', '没', '什', '么', '特', '别', '爱', '好', '讨', '厌', '喝', '啤', '酒', '在', '家', '喝', '两', '顿', '两', '天', '感', '冒', '特', '别', '开', '感', '冒', '药', '朋', '友', '老', '公', '两', '天', '先', '喝', '啤', '酒', '听', '您', '好', '酒', '加', '感', '冒', '药', '[SEP]'], ['[CLS]', '玫', '瑰', '糠', '疹', '2020', '年', '春', '天', '发', '现', '脖', '子', '一', '块', '感', '觉', '反', '反', '复', '复', '心', '力', '交', '猝', '控', '制', '住', '[SEP]'], ['[CLS]', '算', '是', '男', '性', '更', '年', '期', '综', '合', '征', '医', '生', '几', '天', '知', '晓', '男', '性', '更', '年', '期', '综', '合', '征', '更', '年', '期', '时', '睡', '不', '着', '觉', '脾', '气', '变', '得', '不', '好', '总', '以', '为', '女', '人', '更', '年', '期', '综', '合', '征', '在', '乎', '男', '性', '更', '年', '期', '综', '合', '征', '引', '来', '原', '因', '[SEP]'], ['[CLS]', '前', '段', '时', '间', '精', '子', '发', '黄', '现', '在', '有', '血', '喝', '过', '一', '段', '时', '间', '四', '妙', '丸', '和', '[UNK]', '[UNK]', '分', '清', '丸', '左', '侧', '睾', '丸', '发', '硬', '应', '该', '是', '精', '囊', '炎', '无', '任', '何', '不', '适', '请', '问', '喝', '什', '么', '药', '可', '以', '缓', '解', '[SEP]'], ['[CLS]', '小', '孩', '预', '防', '糖', '尿', '病', '大', '人', '平', '时', '饮', '食', '生', '存', '作', '息', '规', '律', '患', '糖', '尿', '病', '之', '外', '小', '孩', '子', '患', '糖', '尿', '病', '想', '小', '孩', '预', '防', '工', '作', '糖', '尿', '病', '[SEP]'], ['[CLS]', '运', '动', '血', '压', '变', '化', '怎', '么', '回', '事', '怎', '么', '回', '事', '感', '觉', '心', '脏', '舒', '服', '吃', '药', '控', '制', '效', '果', '医', '院', '检', '查', '吃', '药', '请', '问', '运', '动', '血', '压', '变', '化', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', '是', '从', '出', '生', '嘴', '唇', '紫', '办', '法', '是', '从', '降', '生', '嘴', '唇', '紫', '办', '法', '不', '让', '发', '紫', '治', '疗', '情', '况', '效', '果', '在', '乎', '协', '助', '想', '几', '下', '紫', '[SEP]'], ['[CLS]', '甲', '状', '腺', '结', '节', '吃', '某', '种', '疾', '病', '长', '期', '断', '药', '药', '物', '原', '因', '导', '致', '内', '分', '泌', '系', '统', '想', '要', '停', '药', '调', '理', '请', '问', '甲', '状', '腺', '结', '节', '吃', '[SEP]'], ['[CLS]', '慢', '性', '浅', '表', '性', '胃', '炎', '应', '治', '疗', '两', '年', '前', '医', '院', '做', '胃', '镜', '仔', '细', '检', '查', '仔', '细', '检', '查', '说', '浅', '表', '性', '胃', '炎', '轻', '度', '胃', '下', '垂', '脾', '胃', '虚', '弱', '两', '年', '前', '仔', '细', '检', '查', '浅', '表', '性', '胃', '炎', '[SEP]'], ['[CLS]', '子', '宫', '肌', '瘤', '做', '过', '剔', '除', '术', '后', '子', '宫', '肌', '瘤', '做', '过', '剔', '出', '术', '后', '您', '好', '所', '说', '中', '医', '中', '药', '方', '有', '生', '活', '习', '惯', '谢', '谢', '[SEP]'], ['[CLS]', '治', '疗', '哮', '喘', '早', '搏', '药', '物', '服', '用', '两', '天', '身', '体', '特', '别', '舒', '服', '情', '况', '很', '久', '咳', '嗽', '医', '院', '查', '找', '资', '料', '情', '况', '请', '问', '治', '疗', '哮', '喘', '早', '搏', '药', '物', '服', '用', '[SEP]'], ['[CLS]', '空', '腹', '血', '糖', '下', '不', '来', '咋', '治', '懒', '得', '动', '吃', '饭', '一', '会', '想', '吃', '东', '西', '吃', '不', '想', '急', '死', '了', '害', '怕', '疾', '病', '想', '咨', '询', '请', '问', '空', '腹', '血', '糖', '下', '不', '来', '咋', '治', '[SEP]'], ['[CLS]', '胃', '窦', '炎', '想', '胃', '窦', '炎', '[SEP]'], ['[CLS]', '癫', '痫', '发', '作', '急', '救', '方', '法', '十', '五', '年', '前', '遭', '受', '车', '祸', '癫', '痫', '发', '作', '两', '年', '前', '有', '吃', '德', '巴', '金', '药', '稳', '定', '停', '药', '一', '个', '月', '前', '天', '晚', '上', '发', '作', '想', '问', '问', '癫', '痫', '发', '作', '急', '救', '治', '愈', '[SEP]'], ['[CLS]', '初', '起', '时', '水', '疱', '疹', '痒', '破', '皮', '湿', '疹', '初', '起', '时', '水', '疱', '疹', '痒', '破', '皮', '医', '院', '说', '湿', '疹', '[SEP]'], ['[CLS]', '一', '直', '服', '用', '调', '经', '促', '孕', '丸', '一', '直', '没', '怀', '上', '[SEP]'], ['[CLS]', '白', '带', '异', '常', '腥', '臭', '味', '做', '爱', '阴', '道', '疼', '病', '白', '带', '异', '常', '增', '多', '呈', '黄', '褐', '色', '伴', '发', '腥', '臭', '味', '特', '别', '小', '腹', '胀', '痛', '做', '爱', '阴', '道', '疼', '家', '里', '二', '姑', '二', '姐', '宫', '颈', '癌', '去', '世', '您', '好', '病', '做', '过', '人', '流', '[SEP]'], ['[CLS]', '侏', '儒', '症', '手', '术', '价', '格', '病', '做', '手', '术', '做', '手', '术', '[SEP]'], ['[CLS]', '幽', '门', '梗', '阻', '病', '头', '痛', '乏', '力', '口', '渴', '这', '是', '幽', '门', '梗', '阻', '症', '状', '[SEP]'], ['[CLS]', '局', '限', '硬', '皮', '病', '八', '年', '前', '局', '限', '性', '硬', '皮', '病', '治', '疗', '三', '年', '疫', '情', '期', '间', '隔', '离', '帮', '硬', '皮', '病', '吃', '药', '邮', '寄', '[SEP]'], ['[CLS]', '子', '宫', '内', '膜', '炎', '治', '疗', '老', '婆', '三', '十', '八', '岁', '郁', '闷', '老', '婆', '仔', '细', '检', '查', '出', '患', '子', '宫', '内', '膜', '炎', '担', '心', '想', '要', '咨', '询', '医', '生', '子', '宫', '内', '膜', '炎', '治', '疗', '[SEP]'], ['[CLS]', '早', '泄', '龟', '头', '敏', '感', '以', '前', '有', '手', '淫', '习', '惯', '[SEP]'], ['[CLS]', '慢', '阻', '肺', '中', '期', '求', '治', '疗', '方', '案', '一', '年', '半', '前', '晚', '上', '休', '息', '时', '呼', '出', '气', '时', '有', '轻', '微', '响', '声', '几', '个', '月', '周', '口', '市', '中', '心', '医', '院', '肺', '功', '能', '检', '查', '慢', '阻', '肺', '医', '生', '开', '药', '布', '地', '奈', '德', '福', '莫', '特', '罗', '吸', '入', '粉', '多', '索', '茶', '碱', '片', '治', '疗', '效', '果', '不', '好', '[SEP]'], ['[CLS]', '宝', '宝', '大', '便', '黄', '色', '绿', '色', '怎', '么', '回', '事', '孩', '子', '不', '听', '话', '哭', '闹', '不', '休', '医', '院', '检', '查', '没', '用', '请', '问', '宝', '宝', '大', '便', '黄', '色', '绿', '色', '[SEP]'], ['[CLS]', '治', '疗', '房', '颤', '哪', '位', '专', '家', '医', '生', '大', '姨', '前', '天', '我', '家', '玩', '时', '发', '觉', '大', '姨', '脸', '色', '很', '差', '寻', '问', '获', '知', '大', '姨', '身', '体', '心', '脏', '房', '颤', '毛', '病', '医', '生', '房', '颤', '药', '物', '治', '疗', '房', '颤', '专', '家', '哪', '位', '[SEP]'], ['[CLS]', '幼', '儿', '扁', '桃', '体', '炎', '症', '哭', '闹', '医', '治', '我', '家', '女', '宝', '岁', '说', '嗓', '子', '喝', '水', '疼', '发', '现', '伴', '有', '轻', '微', '咳', '嗽', '好', '像', '低', '烧', '没', '退', '请', '问', '幼', '儿', '扁', '桃', '体', '炎', '症', '哭', '闹', '医', '治', '[SEP]'], ['[CLS]', '感', '冒', '不', '好', '治', '疗', '亲', '戚', '感', '冒', '舒', '服', '样', '子', '感', '冒', '舒', '服', '县', '城', '一', '家', '医', '院', '做', '打', '点', '滴', '亲', '戚', '体', '质', '一', '向', '不', '好', '样', '子', '亲', '戚', '感', '冒', '舒', '服', '药', '多', '长', '时', '间', '吃', '药', '品', '[SEP]'], ['[CLS]', '小', '儿', '扁', '桃', '体', '发', '炎', '食', '欲', '饮', '食', '点', '男', '孩', '岁', '小', '学', '说', '话', '时', '嗓', '子', '疼', '发', '现', '说', '话', '声', '音', '沙', '哑', '发', '烧', '请', '问', '小', '儿', '扁', '桃', '体', '发', '炎', '食', '欲', '饮', '食', '点', '[SEP]'], ['[CLS]', '宝', '宝', '晚', '上', '睡', '觉', '出', '汗', '几', '种', '原', '因', '[SEP]'], ['[CLS]', '治', '疗', '3d', '眩', '晕', '症', '怎', '么', '回', '事', '睡', '不', '着', '特', '别', '影', '响', '板', '式', '效', '率', '朋', '友', '推', '荐', '神', '经', '内', '科', '请', '问', '治', '疗', '3d', '眩', '晕', '症', '[SEP]'], ['[CLS]', '孩', '子', '中', '耳', '炎', '流', '脓', '诊', '治', '男', '宝', '刚', '满', '岁', '近', '几', '天', '孩', '子', '说', '耳', '朵', '疼', '早', '上', '耳', '屎', '黄', '耳', '朵', '低', '烧', '请', '问', '孩', '子', '中', '耳', '炎', '流', '脓', '诊', '治', '[SEP]'], ['[CLS]', '癫', '痫', '救', '治', '治', '方', '法', '楼', '下', '有', '户', '男', '癫', '痫', '病', '发', '动', '病', '来', '在', '家', '大', '喊', '大', '叫', '有', '时', '候', '听', '见', '撞', '墙', '声', '音', '白', '天', '下', '班', '无', '所', '谓', '有', '时', '候', '睡', '大', '半', '夜', '吵', '醒', '声', '音', '听', '心', '惊', '胆', '战', '[SEP]'], ['[CLS]', '经', '常', '性', '鼻', '腔', '充', '血', '偶', '尔', '流', '出', '[SEP]'], ['[CLS]', '宝', '宝', '大', '便', '几', '天', '老', '板', '说', '精', '神', '不', '好', '影', '响', '上', '班', '状', '态', '不', '想', '晚', '上', '睡', '不', '着', '有', '时', '候', '感', '觉', '心', '慌', '慌', '不', '太', '舒', '服', '担', '心', '影', '响', '身', '体', '工', '作', '请', '问', '宝', '宝', '大', '便', '[SEP]'], ['[CLS]', '男', '性', '高', '血', '压', '当', '兵', '回', '去', '部', '队', '吃', '回', '去', '健', '康', '检', '查', '高', '血', '压', '想', '懂', '部', '队', '天', '天', '锻', '炼', '身', '体', '高', '血', '压', '老', '年', '人', '症', '状', '22', '岁', '想', '连', '根', '解', '决', '想', '男', '性', '高', '血', '压', '技', '术', '[SEP]'], ['[CLS]', '脑', '动', '脉', '硬', '化', '请', '问', '该', '用', '药', '详', '细', '病', '情', '咨', '询', '目', '的', '10', '年', '前', '手', '运', '动', '时', '颤', '抖', '静', '止', '时', '不', '抖', '检', '查', '眼', '底', '脑', '动', '脉', '硬', '化', '请', '问', '该', '用', '药', '[SEP]'], ['[CLS]', '肺', '动', '脉', '高', '压', '病', '能', '医', '治', '怎', '么', '回', '事', '感', '觉', '心', '脏', '舒', '服', '吃', '药', '控', '制', '效', '果', '医', '院', '检', '查', '吃', '药', '请', '问', '肺', '动', '脉', '高', '压', '病', '能', '医', '治', '[SEP]'], ['[CLS]', '宝', '宝', '发', '烧', '嗓', '子', '痰', '宝', '宝', '发', '烧', '嗓', '子', '痰', '吃', '药', '温', '度', '37', '.', '5', '家', '里', '春', '夏', '秋', '冬', '抗', '病', '毒', '合', '剂', '头', '孢', '颗', '粒', '小', '儿', '氨', '酚', '黄', '那', '敏', '颗', '粒', '[SEP]'], ['[CLS]', '甲', '状', '腺', '做', '检', '查', '10', '月', '份', '体', '检', '医', '生', '摸', '说', '肿', '大', '[SEP]'], ['[CLS]', '感', '冒', '发', '烧', '宝', '宝', '吃', '[SEP]'], ['[CLS]', '尿', '频', '尿', '急', '尿', '痛', '尿', '无', '力', '喝', '完', '水', '就', '来', '尿', '[SEP]'], ['[CLS]', '四', '川', '治', '疗', '桥', '本', '氏', '甲', '状', '腺', '炎', '哪', '家', '医', '院', '甲', '状', '腺', '吞', '咽', '肿', '大', '甲', '状', '腺', '功', '能', '甲', '功', '五', '项', '彩', '超', '结', '节', '形', '态', '大', '小', '医', '生', '说', '皮', '下', '脂', '肪', '厚', '[SEP]'], ['[CLS]', '医', '生', '你', '好', '！', '患', '者', '已', '有', '十', '多', '年', '的', '病', '史', '曾', '使', '用', '过', '皮', '肤', '药', '膏', '食', '用', '阿', '维', 'a', '胶', '囊', '一', '个', '星', '期', '后', '出', '现', '皮', '肤', '更', '加', '瘙', '痒', '和', '溃', '烂', '的', '现', '象', '请', '问', '医', '生', '现', '在', '该', '怎', '么', '办', '好', '着', '急', '之', '前', '手', '臂', '上', '是', '没', '有', '的', '现', '在', '也', '出', '现', '有', '了', '是', '该', '停', '止', '用', '药', '吗', '[SEP]'], ['[CLS]', '霉', '菌', '性', '阴', '道', '炎', '治', '疗', '男', '15', '岁', '舒', '服', '检', '查', '一', '查', '病', '请', '问', '霉', '菌', '性', '阴', '道', '炎', '治', '疗', '[SEP]'], ['[CLS]', '医', '院', '治', '疗', '先', '兆', '流', '产', '先', '兆', '流', '产', '解', '决', '先', '兆', '流', '产', '打', '胎', '理', '解', '我', '该', '医', '院', '治', '疗', '先', '兆', '流', '产', '[SEP]'], ['[CLS]', '左', '眼', '视', '网', '膜', '中', '央', '动', '脉', '栓', '塞', '咋', '治', '左', '眼', '模', '糊', '不', '清', '东', '西', '月', '24', '日', '化', '验', '仔', '细', '检', '查', '左', '颈', '动', '脉', '斑', '块', '左', '眼', '冲', '血', '视', '网', '膜', '中', '央', '动', '脉', '栓', '塞', '治', '疗', '情', '况', '效', '果', '治', '疗', '效', '果', '输', '液', '吃', '药', '吸', '氧', '这', '病', '治', '疗', '[SEP]'], ['[CLS]', '病', '毒', '性', '心', '肌', '炎', '症', '状', '休', '学', '一', '年', '病', '要', '紧', '谢', '谢', '第', '一', '次', '补', '充', '心', '脏', '查', '出', '窦', '性', '心', '律', '不', '齐', '心', '速', '这', '是', '病', '[SEP]'], ['[CLS]', '您', '好', '我', '前', '年', '得', '了', '鼻', '炎', '在', '北', '京', '同', '仁', '开', '的', '内', '舒', '拿', '现', '在', '用', '完', '了', '想', '新', '买', '一', '盒', '能', '开', '处', '方', '吗', '[SEP]'], ['[CLS]', '羊', '羔', '疯', '病', '治', '疗', '健', '康', '咨', '询', '叙', '述', '哥', '两', '年', '前', '患', '癫', '痫', '每', '次', '复', '发', '四', '肢', '抽', '搐', '两', '眼', '翻', '口', '吐', '白', '色', '泡', '沫', '表', '情', '特', '别', '痛', '苦', '您', '好', '治', '疗', '在', '乎', '协', '助', '羊', '羔', '疯', '治', '疗', '[SEP]'], ['[CLS]', '胃', '胀', '胃', '胀', '气', '十', '天', '前', '段', '时', '间', '感', '觉', '胃', '胀', '气', '打', '嗝', '胡', '说', '八', '道', '臭', '味', '吃', '晚', '饭', '胃', '口', '感', '觉', '胃', '舒', '服', '服', '食', '保', '和', '丸', '症', '状', '减', '低', '药', '吃', '完', '症', '状', '反', '反', '复', '复', '吃', '药', '[SEP]'], ['[CLS]', '偶', '见', '吐', '血', '病', '母', '亲', '三', '月', '份', '发', '现', '偶', '然', '吐', '血', '症', '状', '七', '月', '份', '发', '现', '医', '院', '检', '查', '说', '支', '气', '管', '血', '管', '扩', '张', '出', '血', '现', '象', '吊', '针', '止', '血', '请', '问', '这', '病', '[SEP]'], ['[CLS]', '前', '感', '冒', '好', '后', '干', '咳', '病', '状', '一', '个', '月', '前', '感', '冒', '好', '后', '干', '咳', '嗓', '子', '痒', '痰', '每', '隔', '十', '分', '钟', '不', '由', '自', '主', '一', '两', '声', '[SEP]'], ['[CLS]', '孩', '童', '中', '耳', '炎', '耳', '朵', '痒', '诊', '治', '男', '孩', '10', '岁', '小', '学', '几', '天', '孩', '子', '耳', '朵', '疼', '黄', '色', '耳', '屎', '流', '出', '伴', '有', '头', '痛', '发', '烧', '请', '问', '孩', '童', '中', '耳', '炎', '耳', '朵', '痒', '诊', '治', '[SEP]'], ['[CLS]', '子', '宫', '内', '膜', '增', '生', '检', '查', '发', '小', '前', '一', '阵', '子', '身', '体', '舒', '适', '建', '议', '抽', '时', '间', '一', '家', '医', '院', '检', '查', '大', '夫', '通', '知', '子', '宫', '内', '膜', '增', '生', '做', '检', '查', '太', '想', '一', '下', '子', '宫', '内', '膜', '增', '生', '检', '查', '[SEP]'], ['[CLS]', '青', '春', '痘', '粉', '刺', '半', '年', '额', '头', '上', '起', '痘', '反', '复', '很', '密', '治', '疗', '[SEP]']]
 
2021-08-24 18:46:51 train.py INFO token_ids: tensor([[ 101, 1920,  912,  ...,    0,    0,    0],
        [ 101, 4508,  768,  ...,    0,    0,    0],
        [ 101, 2207, 1036,  ...,    0,    0,    0],
        ...,
        [ 101, 2111, 4997,  ...,    0,    0,    0],
        [ 101, 2094, 2151,  ...,    0,    0,    0],
        [ 101, 7471, 3217,  ...,    0,    0,    0]])
 
2021-08-24 18:46:51 train.py INFO token_ids shape: torch.Size([64, 87])
 
2021-08-24 18:46:51 train.py INFO attention_mask: tensor([[1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        ...,
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0]])

2021-08-24 18:46:51 train.py INFO token_type_ids: tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]])

2021-08-24 18:46:51 train.py INFO labels: tensor([ 9,  9,  5,  5,  3,  4,  0,  7,  4,  8,  1,  9,  0,  9,  4,  4,  9,  6,
         3,  8,  9,  6, 10,  1,  2,  3,  9,  6,  1,  3,  0,  8,  7,  4,  5,  8,
         5,  7, 10,  5, 10,  5,  7,  4,  4,  4,  7,  9,  7,  0,  9,  1,  3,  3,
         4,  4,  2, 10,  6,  8,  8,  5,  3,  1])

2021-08-24 18:46:51 train.py INFO labels shape: torch.Size([64])

2021-08-24 18:47:23 train.py INFO evaluate....................
2021-08-24 18:47:31 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9740    0.9509    0.9623       591
         皮肤科     0.8115    0.8960    0.8516       173
          其它     0.6014    0.5123    0.5533       162
          妇科     0.8475    0.6944    0.7634        72
       心血管内科     0.7424    0.7313    0.7368        67
        耳鼻喉科     0.7955    0.6863    0.7368        51
        消化内科     0.8000    0.7619    0.7805        84
        小儿内科     0.7024    0.5175    0.5960       114
        呼吸内科     0.6195    0.9270    0.7427       137
        内分泌科     0.7536    0.8254    0.7879        63
        神经内科     0.7164    0.7273    0.7218        66

    accuracy                         0.8127      1580
   macro avg     0.7604    0.7482    0.7485      1580
weighted avg     0.8175    0.8127    0.8102      1580

2021-08-24 18:47:31 train.py INFO Confusion matrix: 
[[562  10   8   3   1   0   2   2   0   1   2]
 [  3 155   4   4   1   0   0   1   2   0   3]
 [  5  17  83   2   8   3  10   7  11   9   7]
 [  3   4  11  50   0   0   1   3   0   0   0]
 [  2   1   2   0  49   0   0   0   5   7   1]
 [  0   0   2   0   0  35   0   1  12   0   1]
 [  0   0  11   0   0   0  64   5   4   0   0]
 [  0   2   4   0   1   2   2  59  43   0   1]
 [  1   0   0   0   0   4   1   2 127   0   2]
 [  1   0   4   0   1   0   0   3   0  52   2]
 [  0   2   9   0   5   0   0   1   1   0  48]]
2021-08-24 18:47:31 train.py INFO saving model..........
2021-08-24 18:47:33 train.py INFO Iter:2200, Train Loss:0.0233, Train Acc:92.19%, Val Loss:0.1407, Val Acc:81.27%, Time:0:33:50 *
2021-08-24 18:48:55 train.py INFO evaluate....................
2021-08-24 18:49:03 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9838    0.9255    0.9538       591
         皮肤科     0.6793    0.9306    0.7854       173
          其它     0.5618    0.3086    0.3984       162
          妇科     0.7561    0.8611    0.8052        72
       心血管内科     0.8393    0.7015    0.7642        67
        耳鼻喉科     0.6393    0.7647    0.6964        51
        消化内科     0.7927    0.7738    0.7831        84
        小儿内科     0.6154    0.7018    0.6557       114
        呼吸内科     0.7083    0.7445    0.7260       137
        内分泌科     0.7419    0.7302    0.7360        63
        神经内科     0.6173    0.7576    0.6803        66

    accuracy                         0.7905      1580
   macro avg     0.7214    0.7455    0.7259      1580
weighted avg     0.7940    0.7905    0.7848      1580

2021-08-24 18:49:03 train.py INFO Confusion matrix: 
[[547  19   7  10   0   1   2   1   0   1   3]
 [  3 161   0   4   1   0   0   1   1   0   2]
 [  4  42  50   3   2   6  13  12   7   8  15]
 [  0   2   5  62   0   0   0   2   0   0   1]
 [  1   2   1   1  47   1   0   0   4   7   3]
 [  0   0   2   0   0  39   0   2   7   0   1]
 [  0   2   5   0   0   0  65   8   4   0   0]
 [  0   4   5   1   0   4   1  80  18   0   1]
 [  0   0   0   1   0   9   1  22 102   0   2]
 [  1   2   7   0   2   0   0   2   0  46   3]
 [  0   3   7   0   4   1   0   0   1   0  50]]
2021-08-24 18:49:03 train.py INFO Iter:2300, Train Loss:0.0607, Train Acc:87.50%, Val Loss:0.1601, Val Acc:79.05%, Time:0:35:20 
2021-08-24 18:50:26 train.py INFO evaluate....................
2021-08-24 18:50:34 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9655    0.9459    0.9556       591
         皮肤科     0.9225    0.6879    0.7881       173
          其它     0.5489    0.4506    0.4949       162
          妇科     0.7111    0.8889    0.7901        72
       心血管内科     0.8333    0.6716    0.7438        67
        耳鼻喉科     0.8250    0.6471    0.7253        51
        消化内科     0.6667    0.9286    0.7761        84
        小儿内科     0.6476    0.5965    0.6210       114
        呼吸内科     0.6612    0.8832    0.7562       137
        内分泌科     0.5545    0.8889    0.6829        63
        神经内科     0.7755    0.5758    0.6609        66

    accuracy                         0.7937      1580
   macro avg     0.7374    0.7423    0.7268      1580
weighted avg     0.8068    0.7937    0.7919      1580

2021-08-24 18:50:34 train.py INFO Confusion matrix: 
[[559   3   7  10   1   0   5   2   1   2   1]
 [  9 119  17   7   1   0   4   1   2  11   2]
 [  7   4  73   5   4   2  25  14   6  17   5]
 [  1   0   4  64   0   0   1   2   0   0   0]
 [  1   0   5   2  45   0   0   0   5   8   1]
 [  0   0   3   0   0  33   0   3  11   0   1]
 [  0   0   2   0   0   0  78   0   4   0   0]
 [  0   2   6   1   0   1   2  68  33   1   0]
 [  0   0   0   1   0   3   1  11 121   0   0]
 [  1   0   4   0   0   0   0   1   0  56   1]
 [  1   1  12   0   3   1   1   3   0   6  38]]
2021-08-24 18:50:34 train.py INFO Iter:2400, Train Loss:0.0044, Train Acc:92.19%, Val Loss:0.1631, Val Acc:79.37%, Time:0:36:50 
2021-08-24 18:51:57 train.py INFO evaluate....................
2021-08-24 18:52:05 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9913    0.7682    0.8656       591
         皮肤科     0.8686    0.6879    0.7677       173
          其它     0.3500    0.4753    0.4031       162
          妇科     0.8491    0.6250    0.7200        72
       心血管内科     0.7500    0.7612    0.7556        67
        耳鼻喉科     0.9048    0.3725    0.5278        51
        消化内科     0.7500    0.7857    0.7674        84
        小儿内科     0.8194    0.5175    0.6344       114
        呼吸内科     0.6009    0.9343    0.7314       137
        内分泌科     0.6933    0.8254    0.7536        63
        神经内科     0.3086    0.8182    0.4481        66

    accuracy                         0.7114      1580
   macro avg     0.7169    0.6883    0.6704      1580
weighted avg     0.7931    0.7114    0.7298      1580

2021-08-24 18:52:05 train.py INFO Confusion matrix: 
[[454  11  71   2   2   0   6   0   1   2  42]
 [  2 119  18   4   1   0   1   1   1   3  23]
 [  2   6  77   2   4   0   9   5  10  10  37]
 [  0   0  18  45   4   0   2   1   0   0   2]
 [  0   0   2   0  51   0   0   0   3   8   3]
 [  0   0   5   0   0  19   0   2  23   0   2]
 [  0   0  10   0   2   0  66   0   4   0   2]
 [  0   0   4   0   0   1   3  59  42   0   5]
 [  0   0   1   0   1   1   1   3 128   0   2]
 [  0   0   7   0   0   0   0   1   0  52   3]
 [  0   1   7   0   3   0   0   0   1   0  54]]
2021-08-24 18:52:05 train.py INFO Iter:2500, Train Loss:0.0556, Train Acc:87.50%, Val Loss:0.3480, Val Acc:71.14%, Time:0:38:21 
2021-08-24 18:53:27 train.py INFO evaluate....................
2021-08-24 18:53:35 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8085    0.9932    0.8914       591
         皮肤科     0.8839    0.7919    0.8354       173
          其它     0.6923    0.2778    0.3965       162
          妇科     0.8696    0.5556    0.6780        72
       心血管内科     0.8980    0.6567    0.7586        67
        耳鼻喉科     0.6393    0.7647    0.6964        51
        消化内科     0.8049    0.7857    0.7952        84
        小儿内科     0.6702    0.5526    0.6058       114
        呼吸内科     0.6190    0.8540    0.7178       137
        内分泌科     0.7846    0.8095    0.7969        63
        神经内科     0.7292    0.5303    0.6140        66

    accuracy                         0.7747      1580
   macro avg     0.7636    0.6884    0.7078      1580
weighted avg     0.7751    0.7747    0.7567      1580

2021-08-24 18:53:35 train.py INFO Confusion matrix: 
[[587   1   0   0   0   0   0   1   0   1   1]
 [ 26 137   2   4   0   1   1   0   0   1   1]
 [ 49  10  45   2   2   6  12  11  13   5   7]
 [ 26   1   3  40   0   0   0   2   0   0   0]
 [  8   1   0   0  44   1   0   1   5   6   1]
 [  2   0   0   0   0  39   0   1   8   0   1]
 [  6   0   4   0   0   0  66   3   5   0   0]
 [  3   2   2   0   1   4   2  63  37   0   0]
 [  1   0   0   0   0   9   1   8 117   0   1]
 [  2   0   6   0   0   0   0   3   0  51   1]
 [ 16   3   3   0   2   1   0   1   4   1  35]]
2021-08-24 18:53:35 train.py INFO Iter:2600, Train Loss:0.0218, Train Acc:90.62%, Val Loss:0.1913, Val Acc:77.47%, Time:0:39:52 
2021-08-24 18:54:56 train.py INFO evaluate....................
2021-08-24 18:55:04 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9803    0.9239    0.9512       591
         皮肤科     0.7476    0.8902    0.8127       173
          其它     0.5231    0.4198    0.4658       162
          妇科     0.6036    0.9306    0.7322        72
       心血管内科     0.7742    0.7164    0.7442        67
        耳鼻喉科     0.8421    0.3137    0.4571        51
        消化内科     0.7238    0.9048    0.8042        84
        小儿内科     0.8667    0.4561    0.5977       114
        呼吸内科     0.6578    0.8978    0.7593       137
        内分泌科     0.6463    0.8413    0.7310        63
        神经内科     0.7213    0.6667    0.6929        66

    accuracy                         0.7892      1580
   macro avg     0.7352    0.7237    0.7044      1580
weighted avg     0.8036    0.7892    0.7820      1580

2021-08-24 18:55:04 train.py INFO Confusion matrix: 
[[546  14   5  13   0   0   3   1   0   8   1]
 [  4 154   3   8   0   0   2   0   0   0   2]
 [  4  26  68  16   7   0  17   3   6  10   5]
 [  1   0   1  67   0   0   1   1   0   0   1]
 [  1   1   4   2  48   0   0   0   2   8   1]
 [  0   1  18   0   0  16   0   0  13   0   3]
 [  0   1   4   0   0   0  76   0   3   0   0]
 [  0   5   8   2   1   1   3  52  39   2   1]
 [  0   1   4   1   0   2   2   2 123   0   2]
 [  1   0   4   1   1   0   1   1   0  53   1]
 [  0   3  11   1   5   0   0   0   1   1  44]]
2021-08-24 18:55:04 train.py INFO Iter:2700, Train Loss:0.0162, Train Acc:92.19%, Val Loss:0.1638, Val Acc:78.92%, Time:0:41:21 
2021-08-24 18:56:27 train.py INFO evaluate....................
2021-08-24 18:56:35 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8153    0.9932    0.8955       591
         皮肤科     0.9333    0.7283    0.8182       173
          其它     0.6866    0.2840    0.4017       162
          妇科     0.8571    0.7500    0.8000        72
       心血管内科     0.6912    0.7015    0.6963        67
        耳鼻喉科     0.6964    0.7647    0.7290        51
        消化内科     0.7955    0.8333    0.8140        84
        小儿内科     0.8462    0.4825    0.6145       114
        呼吸内科     0.6345    0.9124    0.7485       137
        内分泌科     0.6795    0.8413    0.7518        63
        神经内科     0.7442    0.4848    0.5872        66

    accuracy                         0.7810      1580
   macro avg     0.7618    0.7069    0.7142      1580
weighted avg     0.7849    0.7810    0.7623      1580

2021-08-24 18:56:35 train.py INFO Confusion matrix: 
[[587   1   0   1   0   0   0   0   0   1   1]
 [ 31 126   7   4   0   0   1   0   0   3   1]
 [ 50   5  46   3  10   5  14   5  10   9   5]
 [ 16   0   2  54   0   0   0   0   0   0   0]
 [  8   0   0   1  47   0   0   0   3   7   1]
 [  0   0   0   0   0  39   0   1  10   0   1]
 [  5   0   4   0   0   0  70   0   5   0   0]
 [  3   2   2   0   2   5   2  55  41   1   1]
 [  1   0   0   0   0   6   1   3 125   0   1]
 [  4   0   2   0   3   0   0   1   0  53   0]
 [ 15   1   4   0   6   1   0   0   3   4  32]]
2021-08-24 18:56:35 train.py INFO Iter:2800, Train Loss:0.0017, Train Acc:98.44%, Val Loss:0.1625, Val Acc:78.10%, Time:0:42:52 
2021-08-24 18:57:59 train.py INFO evaluate....................
2021-08-24 18:58:07 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9755    0.9442    0.9596       591
         皮肤科     0.7783    0.9133    0.8404       173
          其它     0.5443    0.2654    0.3568       162
          妇科     0.7917    0.7917    0.7917        72
       心血管内科     0.8431    0.6418    0.7288        67
        耳鼻喉科     0.3209    0.8431    0.4649        51
        消化内科     0.7634    0.8452    0.8023        84
        小儿内科     0.7204    0.5877    0.6473       114
        呼吸内科     0.6410    0.7299    0.6826       137
        内分泌科     0.8214    0.7302    0.7731        63
        神经内科     0.6620    0.7121    0.6861        66

    accuracy                         0.7804      1580
   macro avg     0.7147    0.7277    0.7031      1580
weighted avg     0.7967    0.7804    0.7776      1580

2021-08-24 18:58:07 train.py INFO Confusion matrix: 
[[558   9   9   6   0   5   1   0   1   1   1]
 [  4 158   1   2   0   5   1   0   1   0   1]
 [  5  27  43   4   1  31  14   4  16   4  13]
 [  0   2   4  57   0   7   0   2   0   0   0]
 [  3   1   4   2  43   3   0   0   4   5   2]
 [  0   0   0   0   0  43   0   1   6   0   1]
 [  1   2   2   0   0   4  71   0   4   0   0]
 [  0   2   2   0   1  14   5  67  21   0   2]
 [  0   0   0   1   0  15   1  19 100   0   1]
 [  1   0   9   0   2   2   0   0   0  46   3]
 [  0   2   5   0   4   5   0   0   3   0  47]]
2021-08-24 18:58:07 train.py INFO Iter:2900, Train Loss:0.0056, Train Acc:92.19%, Val Loss:0.1600, Val Acc:78.04%, Time:0:44:24 
2021-08-24 18:59:30 train.py INFO evaluate....................
2021-08-24 18:59:38 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9194    0.9848    0.9510       591
         皮肤科     0.7182    0.9133    0.8041       173
          其它     0.5000    0.4012    0.4452       162
          妇科     0.8364    0.6389    0.7244        72
       心血管内科     0.9767    0.6269    0.7636        67
        耳鼻喉科     0.7500    0.6471    0.6947        51
        消化内科     0.8276    0.5714    0.6761        84
        小儿内科     0.7368    0.6140    0.6699       114
        呼吸内科     0.6959    0.8686    0.7727       137
        内分泌科     0.7571    0.8413    0.7970        63
        神经内科     0.7049    0.6515    0.6772        66

    accuracy                         0.7968      1580
   macro avg     0.7657    0.7054    0.7251      1580
weighted avg     0.7947    0.7968    0.7886      1580

2021-08-24 18:59:38 train.py INFO Confusion matrix: 
[[582   7   0   0   0   0   0   0   0   1   1]
 [  9 158   2   3   0   0   1   0   0   0   0]
 [ 17  35  65   4   0   3   6   8   5   8  11]
 [ 13   4   7  46   0   0   0   0   0   2   0]
 [  4   2   6   1  42   0   0   1   3   6   2]
 [  0   2   3   0   0  33   0   2  11   0   0]
 [  3   3  21   0   0   1  48   3   5   0   0]
 [  1   4   6   1   0   2   2  70  27   0   1]
 [  1   0   1   0   0   5   1   9 119   0   1]
 [  1   0   6   0   0   0   0   1   0  53   2]
 [  2   5  13   0   1   0   0   1   1   0  43]]
2021-08-24 18:59:38 train.py INFO Iter:3000, Train Loss:0.0228, Train Acc:89.06%, Val Loss:0.1366, Val Acc:79.68%, Time:0:45:54 
2021-08-24 19:00:59 train.py INFO evaluate....................
2021-08-24 19:01:07 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9660    0.9628    0.9644       591
         皮肤科     0.7990    0.8960    0.8447       173
          其它     0.5725    0.4630    0.5119       162
          妇科     0.7500    0.8750    0.8077        72
       心血管内科     0.8125    0.7761    0.7939        67
        耳鼻喉科     0.8421    0.6275    0.7191        51
        消化内科     0.8333    0.7143    0.7692        84
        小儿内科     0.7802    0.6228    0.6927       114
        呼吸内科     0.6705    0.8613    0.7540       137
        内分泌科     0.6883    0.8413    0.7571        63
        神经内科     0.7656    0.7424    0.7538        66

    accuracy                         0.8209      1580
   macro avg     0.7709    0.7620    0.7608      1580
weighted avg     0.8215    0.8209    0.8173      1580

2021-08-24 19:01:07 train.py INFO Confusion matrix: 
[[569   7   3   9   1   0   0   0   0   1   1]
 [  8 155   4   4   0   0   1   0   0   0   1]
 [  8  25  75   7   6   1   6   5  10  13   6]
 [  0   1   6  63   0   0   1   0   0   1   0]
 [  0   0   3   0  52   0   0   0   4   7   1]
 [  0   2   2   0   0  32   0   1  13   0   1]
 [  2   1  16   0   0   0  60   0   5   0   0]
 [  0   2   7   1   1   2   3  71  25   1   1]
 [  1   0   0   0   0   3   1  12 118   0   2]
 [  1   0   6   0   0   0   0   1   0  53   2]
 [  0   1   9   0   4   0   0   1   1   1  49]]
2021-08-24 19:01:07 train.py INFO saving model..........
2021-08-24 19:01:09 train.py INFO Iter:3100, Train Loss:0.0869, Train Acc:78.12%, Val Loss:0.1180, Val Acc:82.09%, Time:0:47:26 *
2021-08-24 19:02:32 train.py INFO evaluate....................
2021-08-24 19:02:40 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9624    0.9526    0.9575       591
         皮肤科     0.7371    0.9075    0.8135       173
          其它     0.6786    0.1173    0.2000       162
          妇科     0.8030    0.7361    0.7681        72
       心血管内科     0.8868    0.7015    0.7833        67
        耳鼻喉科     0.5190    0.8039    0.6308        51
        消化内科     0.8250    0.7857    0.8049        84
        小儿内科     0.8070    0.4035    0.5380       114
        呼吸内科     0.6879    0.7883    0.7347       137
        内分泌科     0.3931    0.9048    0.5481        63
        神经内科     0.4444    0.7879    0.5683        66

    accuracy                         0.7652      1580
   macro avg     0.7040    0.7172    0.6679      1580
weighted avg     0.7972    0.7652    0.7472      1580

2021-08-24 19:02:40 train.py INFO Confusion matrix: 
[[563   8   0   5   0   0   0   1   0  12   2]
 [  8 157   0   3   0   0   1   0   0   1   3]
 [  8  33  19   3   2   8   9   3   4  44  29]
 [  3   2   1  53   0   0   0   0   0  10   3]
 [  1   1   0   0  47   1   0   0   3   9   5]
 [  0   2   1   0   0  41   0   0   4   0   3]
 [  0   1   1   0   1   0  66   0   5   4   6]
 [  0   4   4   1   0  14   3  46  32   4   6]
 [  0   0   0   1   0  15   1   7 108   2   3]
 [  1   0   0   0   0   0   0   0   0  57   5]
 [  1   5   2   0   3   0   0   0   1   2  52]]
2021-08-24 19:02:40 train.py INFO Iter:3200, Train Loss:0.0036, Train Acc:92.19%, Val Loss:0.2421, Val Acc:76.52%, Time:0:48:57 
2021-08-24 19:04:03 train.py INFO evaluate....................
2021-08-24 19:04:11 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9611    0.9628    0.9620       591
         皮肤科     0.7969    0.8844    0.8384       173
          其它     0.6863    0.2160    0.3286       162
          妇科     0.8219    0.8333    0.8276        72
       心血管内科     0.6579    0.7463    0.6993        67
        耳鼻喉科     0.6508    0.8039    0.7193        51
        消化内科     0.7308    0.9048    0.8085        84
        小儿内科     0.6475    0.6930    0.6695       114
        呼吸内科     0.6667    0.7299    0.6969       137
        内分泌科     0.6456    0.8095    0.7183        63
        神经内科     0.6410    0.7576    0.6944        66

    accuracy                         0.8000      1580
   macro avg     0.7188    0.7583    0.7239      1580
weighted avg     0.7994    0.8000    0.7853      1580

2021-08-24 19:04:11 train.py INFO Confusion matrix: 
[[569   8   2   4   0   0   2   1   2   2   1]
 [  6 153   0   3   1   1   1   0   1   4   3]
 [ 10  24  35   4  13   7  18  11  11  14  15]
 [  4   2   2  60   0   0   0   2   1   0   1]
 [  1   0   1   0  50   0   0   0   6   7   2]
 [  0   0   1   0   0  41   0   3   5   0   1]
 [  0   1   3   0   0   0  76   0   4   0   0]
 [  0   3   1   1   2   4   5  79  17   1   1]
 [  0   0   0   1   1   9   1  24 100   0   1]
 [  1   0   1   0   4   0   1   2   0  51   3]
 [  1   1   5   0   5   1   0   0   3   0  50]]
2021-08-24 19:04:11 train.py INFO Iter:3300, Train Loss:0.0063, Train Acc:95.31%, Val Loss:0.1649, Val Acc:80.00%, Time:0:50:28 
2021-08-24 19:05:32 train.py INFO evaluate....................
2021-08-24 19:05:41 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9740    0.9509    0.9623       591
         皮肤科     0.7560    0.9133    0.8272       173
          其它     0.4950    0.6111    0.5470       162
          妇科     0.8358    0.7778    0.8058        72
       心血管内科     0.8305    0.7313    0.7778        67
        耳鼻喉科     0.6557    0.7843    0.7143        51
        消化内科     0.8983    0.6310    0.7413        84
        小儿内科     0.6939    0.5965    0.6415       114
        呼吸内科     0.7172    0.7591    0.7376       137
        内分泌科     0.8103    0.7460    0.7769        63
        神经内科     0.8298    0.5909    0.6903        66

    accuracy                         0.8070      1580
   macro avg     0.7724    0.7357    0.7474      1580
weighted avg     0.8193    0.8070    0.8088      1580

2021-08-24 19:05:41 train.py INFO Confusion matrix: 
[[562  20   6   1   0   0   0   0   0   1   1]
 [  2 158   9   3   0   1   0   0   0   0   0]
 [  5  23  99   6   6   4   3   8   2   4   2]
 [  5   1   9  56   0   0   0   1   0   0   0]
 [  0   0   6   0  49   1   0   0   4   6   1]
 [  0   0   3   0   0  40   0   3   4   0   1]
 [  1   0  23   0   0   0  53   2   5   0   0]
 [  0   3  10   1   0   3   2  68  26   0   1]
 [  1   0   3   0   0  11   1  16 104   0   1]
 [  1   1  13   0   0   0   0   0   0  47   1]
 [  0   3  19   0   4   1   0   0   0   0  39]]
2021-08-24 19:05:41 train.py INFO Iter:3400, Train Loss:0.0232, Train Acc:89.06%, Val Loss:0.1190, Val Acc:80.70%, Time:0:51:57 
2021-08-24 19:07:01 train.py INFO evaluate....................
2021-08-24 19:07:09 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9740    0.9526    0.9632       591
         皮肤科     0.7725    0.9422    0.8490       173
          其它     0.4573    0.5617    0.5042       162
          妇科     0.8286    0.8056    0.8169        72
       心血管内科     0.6795    0.7910    0.7310        67
        耳鼻喉科     0.7576    0.4902    0.5952        51
        消化内科     0.8472    0.7262    0.7821        84
        小儿内科     0.7528    0.5877    0.6601       114
        呼吸内科     0.7267    0.7956    0.7596       137
        内分泌科     0.8065    0.7937    0.8000        63
        神经内科     0.8684    0.5000    0.6346        66

    accuracy                         0.8057      1580
   macro avg     0.7701    0.7224    0.7360      1580
weighted avg     0.8176    0.8057    0.8059      1580

2021-08-24 19:07:09 train.py INFO Confusion matrix: 
[[563  10  12   3   2   0   0   0   0   1   0]
 [  4 163   4   2   0   0   0   0   0   0   0]
 [  6  24  91   5  13   2   8   5   4   3   1]
 [  2   2   9  58   0   0   0   1   0   0   0]
 [  0   2   3   0  53   0   0   0   1   7   1]
 [  0   1  14   0   0  25   0   1   9   0   1]
 [  1   1  16   0   0   0  61   0   5   0   0]
 [  0   4  15   1   1   0   2  67  22   1   1]
 [  1   1   3   1   0   6   1  14 109   0   1]
 [  1   0  11   0   0   0   0   1   0  50   0]
 [  0   3  21   0   9   0   0   0   0   0  33]]
2021-08-24 19:07:09 train.py INFO Iter:3500, Train Loss:0.0076, Train Acc:95.31%, Val Loss:0.1229, Val Acc:80.57%, Time:0:53:26 
2021-08-24 19:08:32 train.py INFO evaluate....................
2021-08-24 19:08:41 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9726    0.9611    0.9668       591
         皮肤科     0.7630    0.9306    0.8385       173
          其它     0.5473    0.5000    0.5226       162
          妇科     0.7407    0.8333    0.7843        72
       心血管内科     0.7869    0.7164    0.7500        67
        耳鼻喉科     0.8140    0.6863    0.7447        51
        消化内科     0.8630    0.7500    0.8025        84
        小儿内科     0.8261    0.5000    0.6230       114
        呼吸内科     0.6429    0.9197    0.7568       137
        内分泌科     0.8000    0.7619    0.7805        63
        神经内科     0.7778    0.6364    0.7000        66

    accuracy                         0.8158      1580
   macro avg     0.7758    0.7451    0.7518      1580
weighted avg     0.8225    0.8158    0.8122      1580

2021-08-24 19:08:41 train.py INFO Confusion matrix: 
[[568   9   4   7   0   0   0   1   0   1   1]
 [  5 161   4   3   0   0   0   0   0   0   0]
 [  6  27  81   7   8   2   8   2  12   4   5]
 [  1   2   8  60   0   0   0   1   0   0   0]
 [  1   2   4   1  48   1   0   0   2   7   1]
 [  0   0   4   0   0  35   0   1  10   0   1]
 [  2   2  10   0   0   0  63   2   5   0   0]
 [  0   3   9   1   0   2   1  57  40   0   1]
 [  0   0   1   1   0   3   1   4 126   0   1]
 [  1   1   8   1   1   0   0   1   0  48   2]
 [  0   4  15   0   4   0   0   0   1   0  42]]
2021-08-24 19:08:41 train.py INFO Iter:3600, Train Loss:0.0201, Train Acc:89.06%, Val Loss:0.1083, Val Acc:81.58%, Time:0:54:57 
2021-08-24 19:10:04 train.py INFO evaluate....................
2021-08-24 19:10:12 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9806    0.9408    0.9603       591
         皮肤科     0.8404    0.9133    0.8753       173
          其它     0.5200    0.5617    0.5401       162
          妇科     0.7209    0.8611    0.7848        72
       心血管内科     0.8246    0.7015    0.7581        67
        耳鼻喉科     0.7949    0.6078    0.6889        51
        消化内科     0.8730    0.6548    0.7483        84
        小儿内科     0.6493    0.7632    0.7016       114
        呼吸内科     0.7200    0.7883    0.7526       137
        内分泌科     0.7538    0.7778    0.7656        63
        神经内科     0.8571    0.7273    0.7869        66

    accuracy                         0.8177      1580
   macro avg     0.7759    0.7543    0.7602      1580
weighted avg     0.8272    0.8177    0.8196      1580

2021-08-24 19:10:12 train.py INFO Confusion matrix: 
[[556   7  16   7   0   0   0   1   0   3   1]
 [  5 158   3   5   0   0   0   0   1   0   1]
 [  4  17  91   7   7   2   5  15   6   6   2]
 [  0   2   6  62   0   0   0   1   0   1   0]
 [  0   0   5   2  47   0   0   1   5   6   1]
 [  0   1   4   0   0  31   0   4  10   0   1]
 [  1   0  22   0   0   0  55   1   5   0   0]
 [  0   2   6   1   0   2   2  87  13   0   1]
 [  0   0   1   1   0   4   1  21 108   0   1]
 [  1   0  10   1   0   0   0   2   0  49   0]
 [  0   1  11   0   3   0   0   1   2   0  48]]
2021-08-24 19:10:12 train.py INFO Iter:3700, Train Loss:0.0097, Train Acc:90.62%, Val Loss:0.1181, Val Acc:81.77%, Time:0:56:28 
2021-08-24 19:11:34 train.py INFO evaluate....................
2021-08-24 19:11:42 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9693    0.9611    0.9652       591
         皮肤科     0.8172    0.8786    0.8468       173
          其它     0.5924    0.5741    0.5831       162
          妇科     0.7722    0.8472    0.8079        72
       心血管内科     0.8846    0.6866    0.7731        67
        耳鼻喉科     0.7547    0.7843    0.7692        51
        消化内科     0.8630    0.7500    0.8025        84
        小儿内科     0.7590    0.5526    0.6396       114
        呼吸内科     0.6538    0.8686    0.7461       137
        内分泌科     0.6753    0.8254    0.7429        63
        神经内科     0.7692    0.6061    0.6780        66

    accuracy                         0.8209      1580
   macro avg     0.7737    0.7577    0.7595      1580
weighted avg     0.8262    0.8209    0.8194      1580

2021-08-24 19:11:42 train.py INFO Confusion matrix: 
[[568   6   8   5   0   0   0   1   0   2   1]
 [  5 152  10   5   0   0   0   0   1   0   0]
 [  6  17  93   5   3   2   6   7   8   9   6]
 [  1   2   5  61   0   0   0   2   0   1   0]
 [  2   1   4   1  46   1   0   0   2   8   2]
 [  0   0   1   0   0  40   0   1   8   0   1]
 [  2   1  13   0   0   0  63   0   5   0   0]
 [  0   1   5   1   0   2   3  63  37   1   1]
 [  1   0   0   1   0   7   1   7 119   0   1]
 [  1   1   8   0   0   0   0   1   0  52   0]
 [  0   5  10   0   3   1   0   1   2   4  40]]
2021-08-24 19:11:42 train.py INFO Iter:3800, Train Loss:0.0260, Train Acc:89.06%, Val Loss:0.1074, Val Acc:82.09%, Time:0:57:59 
2021-08-24 19:13:05 train.py INFO evaluate....................
2021-08-24 19:13:13 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9366    0.9746    0.9552       591
         皮肤科     0.8211    0.9017    0.8595       173
          其它     0.6148    0.5123    0.5589       162
          妇科     0.8194    0.8194    0.8194        72
       心血管内科     0.8679    0.6866    0.7667        67
        耳鼻喉科     0.8372    0.7059    0.7660        51
        消化内科     0.8553    0.7738    0.8125        84
        小儿内科     0.7356    0.5614    0.6368       114
        呼吸内科     0.7006    0.8029    0.7483       137
        内分泌科     0.7105    0.8571    0.7770        63
        神经内科     0.6184    0.7121    0.6620        66

    accuracy                         0.8203      1580
   macro avg     0.7743    0.7553    0.7602      1580
weighted avg     0.8179    0.8203    0.8160      1580

2021-08-24 19:13:13 train.py INFO Confusion matrix: 
[[576   7   1   4   0   0   0   0   0   2   1]
 [ 12 156   0   3   0   0   1   0   0   0   1]
 [ 13  15  83   5   3   1   6   4   7  10  15]
 [  3   2   6  59   0   0   0   1   0   1   0]
 [  3   2   4   0  46   1   0   0   1   7   3]
 [  0   0   4   0   0  36   0   0  10   0   1]
 [  3   1   9   0   0   0  65   0   4   0   2]
 [  1   4  11   1   0   2   3  64  24   2   2]
 [  1   1   1   0   1   3   1  17 110   0   2]
 [  1   0   5   0   0   0   0   1   0  54   2]
 [  2   2  11   0   3   0   0   0   1   0  47]]
2021-08-24 19:13:13 train.py INFO Iter:3900, Train Loss:0.0059, Train Acc:90.62%, Val Loss:0.1082, Val Acc:82.03%, Time:0:59:29 
2021-08-24 19:14:35 train.py INFO evaluate....................
2021-08-24 19:14:43 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9873    0.9188    0.9518       591
         皮肤科     0.7547    0.9249    0.8312       173
          其它     0.5380    0.5679    0.5526       162
          妇科     0.5641    0.9167    0.6984        72
       心血管内科     0.8214    0.6866    0.7480        67
        耳鼻喉科     0.5441    0.7255    0.6218        51
        消化内科     0.8769    0.6786    0.7651        84
        小儿内科     0.6607    0.6491    0.6549       114
        呼吸内科     0.7692    0.6569    0.7087       137
        内分泌科     0.7761    0.8254    0.8000        63
        神经内科     0.8222    0.5606    0.6667        66

    accuracy                         0.7937      1580
   macro avg     0.7377    0.7374    0.7272      1580
weighted avg     0.8115    0.7937    0.7964      1580

2021-08-24 19:14:43 train.py INFO Confusion matrix: 
[[543  15   9  22   0   1   0   0   0   1   0]
 [  2 160   2   7   0   1   1   0   0   0   0]
 [  2  23  92  13   6   6   3   5   3   6   3]
 [  0   1   4  66   0   0   0   1   0   0   0]
 [  1   2   4   2  46   1   0   0   2   7   2]
 [  0   1   6   0   0  37   0   2   4   0   1]
 [  1   1  19   1   0   0  57   1   4   0   0]
 [  0   3  13   2   0   5   2  74  13   1   1]
 [  0   0   3   1   0  12   1  29  90   0   1]
 [  1   0   8   2   0   0   0   0   0  52   0]
 [  0   6  11   1   4   5   1   0   1   0  37]]
2021-08-24 19:14:43 train.py INFO Iter:4000, Train Loss:0.0078, Train Acc:92.19%, Val Loss:0.1388, Val Acc:79.37%, Time:1:01:00 
2021-08-24 19:16:04 train.py INFO evaluate....................
2021-08-24 19:16:12 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9227    0.9695    0.9455       591
         皮肤科     0.9306    0.7746    0.8454       173
          其它     0.6168    0.4074    0.4907       162
          妇科     0.8406    0.8056    0.8227        72
       心血管内科     0.6053    0.6866    0.6434        67
        耳鼻喉科     0.7857    0.6471    0.7097        51
        消化内科     0.8571    0.7143    0.7792        84
        小儿内科     0.7917    0.5000    0.6129       114
        呼吸内科     0.6047    0.9489    0.7386       137
        内分泌科     0.5481    0.9048    0.6826        63
        神经内科     0.7333    0.6667    0.6984        66

    accuracy                         0.7962      1580
   macro avg     0.7488    0.7296    0.7245      1580
weighted avg     0.8072    0.7962    0.7903      1580

2021-08-24 19:16:12 train.py INFO Confusion matrix: 
[[573   4   3   2   0   0   0   1   0   7   1]
 [ 17 134   5   5   3   0   0   0   2   4   3]
 [ 16   4  66   3  14   3   7   7  14  21   7]
 [  2   0   6  58   1   0   0   2   1   2   0]
 [  4   0   2   0  46   0   0   0   5   8   2]
 [  0   0   3   0   0  33   0   1  13   0   1]
 [  3   0  11   0   5   0  60   0   5   0   0]
 [  0   1   3   1   2   3   2  57  41   3   1]
 [  1   0   0   0   0   3   1   2 130   0   0]
 [  2   0   2   0   0   0   0   1   0  57   1]
 [  3   1   6   0   5   0   0   1   4   2  44]]
2021-08-24 19:16:12 train.py INFO Iter:4100, Train Loss:0.0156, Train Acc:95.31%, Val Loss:0.1523, Val Acc:79.62%, Time:1:02:28 
2021-08-24 19:17:35 train.py INFO evaluate....................
2021-08-24 19:17:43 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9708    0.9577    0.9642       591
         皮肤科     0.7318    0.9306    0.8193       173
          其它     0.5443    0.5309    0.5375       162
          妇科     0.7887    0.7778    0.7832        72
       心血管内科     0.6667    0.8060    0.7297        67
        耳鼻喉科     0.7692    0.5882    0.6667        51
        消化内科     0.8554    0.8452    0.8503        84
        小儿内科     0.7282    0.6579    0.6912       114
        呼吸内科     0.7680    0.7007    0.7328       137
        内分泌科     0.7879    0.8254    0.8062        63
        神经内科     0.8431    0.6515    0.7350        66

    accuracy                         0.8165      1580
   macro avg     0.7686    0.7520    0.7560      1580
weighted avg     0.8194    0.8165    0.8151      1580

2021-08-24 19:17:43 train.py INFO Confusion matrix: 
[[566   9   9   3   1   0   0   1   0   1   1]
 [  7 161   0   3   1   0   0   1   0   0   0]
 [  5  27  86   5  13   1   9   6   4   4   2]
 [  2   3  10  56   0   0   0   1   0   0   0]
 [  0   1   3   0  54   1   0   0   0   7   1]
 [  0   4   6   0   0  30   0   4   6   0   1]
 [  0   2   6   1   2   0  71   1   1   0   0]
 [  0   4  12   0   0   1   2  75  18   1   1]
 [  1   7   6   3   3   6   1  12  96   0   2]
 [  1   1   7   0   1   0   0   1   0  52   0]
 [  1   1  13   0   6   0   0   1   0   1  43]]
2021-08-24 19:17:43 train.py INFO Iter:4200, Train Loss:0.0105, Train Acc:93.75%, Val Loss:0.1224, Val Acc:81.65%, Time:1:04:00 
2021-08-24 19:19:05 train.py INFO evaluate....................
2021-08-24 19:19:13 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9587    0.9814    0.9699       591
         皮肤科     0.8444    0.8786    0.8612       173
          其它     0.6892    0.3148    0.4322       162
          妇科     0.8485    0.7778    0.8116        72
       心血管内科     0.8667    0.7761    0.8189        67
        耳鼻喉科     0.9062    0.5686    0.6988        51
        消化内科     0.7429    0.9286    0.8254        84
        小儿内科     0.6316    0.7368    0.6802       114
        呼吸内科     0.6928    0.8394    0.7591       137
        内分泌科     0.5472    0.9206    0.6864        63
        神经内科     0.7925    0.6364    0.7059        66

    accuracy                         0.8209      1580
   macro avg     0.7746    0.7599    0.7500      1580
weighted avg     0.8264    0.8209    0.8113      1580

2021-08-24 19:19:13 train.py INFO Confusion matrix: 
[[580   4   0   3   0   0   0   0   0   3   1]
 [  9 152   0   3   0   0   3   0   1   3   2]
 [  8  18  51   4   5   1  19  19   9  23   5]
 [  4   2   3  56   0   0   1   4   0   2   0]
 [  1   0   2   0  52   0   0   1   3   7   1]
 [  0   2   3   0   0  29   0   4  12   0   1]
 [  1   0   1   0   0   0  78   0   4   0   0]
 [  0   1   3   0   0   1   2  84  21   2   0]
 [  1   0   0   0   0   1   1  18 115   0   1]
 [  1   0   1   0   0   0   1   2   0  58   0]
 [  0   1  10   0   3   0   0   1   1   8  42]]
2021-08-24 19:19:13 train.py INFO Iter:4300, Train Loss:0.0095, Train Acc:95.31%, Val Loss:0.1267, Val Acc:82.09%, Time:1:05:30 
2021-08-24 19:19:31 train.py INFO Epoch [3/5]
2021-08-24 19:19:31 train.py INFO tokens: [['[CLS]', '胃', '胀', '嗝', '气', '要', '你', '好', '大', '夫', '嗝', '气', '胃', '胀', '长', '时', '间', '照', '样', '吃', '晚', '饭', '感', '觉', '放', '屁', '胃', '里', '舒', '服', '气', '嗝', '舒', '服', '不', '隔', '气', '胃', '里', '发', '涨', '做', '过', '百', '餐', '扫', '描', '胃', '炎', '吃', '药', '好', '点', '不', '好', '[SEP]'], ['[CLS]', '癫', '痫', '病', '服', '用', '头', '孢', '克', '[UNK]', '氨', '茶', '碱', '老', '伴', '有', '脑', '梗', '后', '遗', '症', '癫', '痫', '肺', '感', '染', '服', '食', '头', '孢', '克', '[UNK]', '氨', '茶', '碱', '在', '乎', '协', '助', '您', '好', '服', '食', '头', '孢', '克', '[UNK]', '氨', '茶', '碱', '癫', '痫', '发', '作', '药', '物', '关', '系', '[SEP]'], ['[CLS]', 'nu', '##m', '个', '月', '宝', '宝', '左', '手', '大', '拇', '指', '有', '点', '伸', '不', '直', '有', '人', '说', '是', '腱', '鞘', '炎', '请', '问', '是', '不', '是', '宝', '宝', '没', '发', '育', '好', '可', '以', '用', '什', '么', '药', '吗', '那', '么', '小', '要', '不', '要', '治', '疗', '[SEP]'], ['[CLS]', '请', '问', '脑', '神', '经', '痛', '[SEP]'], ['[CLS]', '爸', '爸', '背', '上', '大', '片', '硬', '疙', '瘩', '自', '述', '年', '轻', '时', '背', '上', '大', '块', '疙', '瘩', '[SEP]'], ['[CLS]', '请', '问', '胃', '病', '引', '发', '腹', '泻', '患', '者', '昨', '晚', '感', '觉', '胃', '疼', '时', '常', '不', '太', '舒', '服', '傍', '晚', '胃', '疼', '恶', '心', '呕', '吐', '恶', '心', '呕', '吐', '是', '因', '为', '胃', '病', '引', '来', '[SEP]'], ['[CLS]', '儿', '童', '支', '气', '管', '哮', '喘', '患', '者', '喝', '药', '有', '影', '响', '患', '儿', '男', '性', '岁', '夜', '间', '咳', '嗽', '一', '年', '有', '时', '候', '伴', '咳', '喘', '现', '喝', '肺', '宝', '效', '果', '医', '院', '确', '诊', '典', '型', '支', '气', '管', '哮', '喘', '想', '咨', '询', '长', '时', '间', '喝', '肺', '宝', '会', '孩', '子', '生', '长', '发', '育', '影', '响', '我', '该', '孩', '子', '治', '疗', '在', '乎', '喝', '肺', '宝', '自', '愈', '[SEP]'], ['[CLS]', '全', '身', '红', '色', '疹', '子', '巨', '痒', '后', '背', '上', '臂', '内', '测', '大', '腿', '根', '成', '片', '红', '请', '问', '皮', '疹', '原', '因', '建', '议', '治', '疗', '方', '式', '[SEP]'], ['[CLS]', 'c1', '##3', '吹', '气', '只', '能', '检', '查', '有', '没', '有', '幽', '门', '螺', '杆', '菌', '幽', '门', '螺', '杆', '菌', '推', '测', '吹', '气', '一', '个', '月', '不', '吃', '消', '炎', '药', '抑', '酸', '药', '[SEP]'], ['[CLS]', '孩', '子', '扁', '桃', '体', '炎', '症', '哭', '闹', '怎', '样', '治', '效', '果', '我', '家', '男', '宝', '岁', '嗓', '子', '眼', '有', '点', '痛', '发', '现', '咳', '嗽', '剧', '烈', '好', '像', '低', '烧', '没', '退', '请', '问', '孩', '子', '扁', '桃', '体', '炎', '症', '哭', '闹', '怎', '样', '治', '效', '果', '[SEP]'], ['[CLS]', '疝', '气', '手', '术', '治', '疗', '儿', '子', '降', '生', '星', '期', '晚', '上', '哭', '奶', '不', '吃', '哄', '不', '到', '医', '院', '仔', '细', '检', '查', '发', '觉', '疝', '气', '医', '生', '说', '手', '术', '治', '疗', '您', '好', '疝', '气', '手', '术', '治', '疗', '[SEP]'], ['[CLS]', '包', '皮', '龟', '头', '炎', '治', '疗', '效', '果', '男', '33', '岁', '身', '体', '不', '适', '感', '觉', '没', '用', '请', '问', '包', '皮', '龟', '头', '炎', '治', '疗', '效', '果', '[SEP]'], ['[CLS]', '硬', '斑', '病', '额', '头', '硬', '斑', '病', '萎', '缩', '状', '态', '三', '年', '前', '额', '头', '右', '边', '太', '阳', '穴', '处', '有', '乒', '乓', '球', '扩', '散', '药', '物', '治', '疗', '[SEP]'], ['[CLS]', '局', '限', '性', '硬', '皮', '病', '2016', '##11', '就', '诊', '谢', '主', '任', '2016', '年', '11', '月', '就', '诊', '谢', '勇', '主', '任', '现', '病', '情', '控', '制', '[SEP]'], ['[CLS]', '小', '儿', '扁', '桃', '体', '炎', '咽', '痛', '治', '效', '果', '男', '孩', '12', '岁', '小', '学', '说', '嗓', '子', '疼', '察', '觉', '到', '说', '话', '声', '音', '沙', '哑', '高', '烧', '不', '退', '请', '问', '小', '儿', '扁', '桃', '体', '炎', '咽', '痛', '治', '效', '果', '[SEP]'], ['[CLS]', '睾', '丸', '无', '故', '疼', '痛', '前', '段', '时', '间', '右', '睾', '丸', '有', '点', '痛', '肿', '大', '右', '睾', '丸', '一', '点', '听', '人', '说', '睾', '丸', '炎', '睾', '丸', '无', '故', '疼', '痛', '[SEP]'], ['[CLS]', '医', '生', '你', '好', '我', '患', '有', '抑', '郁', '症', '一', '直', '服', '用', '开', '克', '盐', '酸', '氟', '西', '汀', '效', '果', '很', '好', '请', '为', '我', '开', '一', '个', '疗', '程', '[SEP]'], ['[CLS]', '患', '外', '阴', '炎', '治', '较', '女', '32', '岁', '段', '时', '间', '发', '现', '自', '己', '私', '处', '很', '痒', '烫', '火', '烧', '情', '况', '炎', '症', '请', '问', '患', '外', '阴', '炎', '治', '较', '[SEP]'], ['[CLS]', '子', '宫', '附', '件', '上', '有', '一', '畸', '胎', '瘤', '想', '做', '一', '个', '腹', '腔', '镜', '手', '术', '治', '疗', '在', '哺', '乳', '期', '孩', '子', '六', '个', '半', '月', '想', '问', '一', '下', '做', '手', '术', '对', '孩', '子', '哺', '乳', '有', '影', '响', '吗', '[SEP]'], ['[CLS]', '宫', '颈', '息', '肉', '原', '因', '患', '者', '年', '龄', '35', '患', '者', '性', '别', '女', '白', '带', '伴', '有', '血', '丝', '异', '味', '检', '查', '说', '宫', '颈', '息', '肉', '宫', '颈', '息', '肉', '原', '因', '[SEP]'], ['[CLS]', '新', '生', '儿', '全', '身', '水', '肿', '媳', '妇', '刚', '刚', '生', '完', '孩', '子', '家', '里', '孩', '子', '母', '亲', '阴', '性', '血', '导', '致', '孩', '子', '生', '患', '有', '溶', '血', '症', '溶', '血', '症', '黄', '疸', '痊', '愈', '孩', '子', '身', '上', '水', '肿', '消', '医', '生', '说', '请', '问', '这', '是', '新', '生', '儿', '水', '肿', '这', '是', '因', '素', '病', '因', '[SEP]'], ['[CLS]', '干', '咳', '吃', '梨', '炖', '百', '合', '汤', '两', '天', '身', '体', '特', '别', '舒', '服', '情', '况', '很', '久', '咳', '嗽', '医', '院', '查', '找', '资', '料', '情', '况', '请', '问', '干', '咳', '吃', '梨', '炖', '百', '合', '汤', '[SEP]'], ['[CLS]', '请', '问', '肺', '炎', '吃', '肉', '我', '哥', '家', '孩', '子', '感', '冒', '肺', '炎', '发', '烧', '没', '大', '精', '神', '住', '院', '治', '疗', '孩', '子', '爱', '吃', '肉', '每', '顿', '饭', '有', '肉', '住', '院', '想', '吃', '点', '清', '淡', '食', '物', '孩', '子', '惯', '坏', '没', '肉', '吃', '饭', '真', '办', '法', '[SEP]'], ['[CLS]', '腿', '痛', '痉', '挛', '脚', '麻', '等', '等', '[SEP]'], ['[CLS]', '婴', '儿', '羊', '癫', '疯', '不', '易', '发', '现', '婴', '儿', '羊', '癫', '疯', '不', '易', '发', '觉', '我', '家', '孩', '子', '讨', '厌', '摇', '摇', '头', '自', '觉', '孩', '子', '搞', '玩', '发', '觉', '不', '太', '在', '乎', '协', '助', '婴', '儿', '羊', '癫', '疯', '不', '易', '发', '觉', '[SEP]'], ['[CLS]', '阳', '痿', '早', '泄', '吃', '药', '变', '解', '决', '大', '夫', '阳', '痿', '早', '泄', '说', '吃', '六', '味', '地', '黄', '丸', '吃', '几', '天', '觉', '着', '夜', '尿', '多', '这', '是', '怎', '么', '回', '事', '大', '夫', '[SEP]'], ['[CLS]', '幼', '儿', '扁', '桃', '体', '炎', '症', '低', '烧', '医', '治', '女', '宝', '宝', '月', '说', '嗓', '子', '喝', '水', '疼', '察', '觉', '到', '说', '话', '声', '音', '沙', '哑', '发', '烧', '请', '问', '幼', '儿', '扁', '桃', '体', '炎', '症', '低', '烧', '医', '治', '[SEP]'], ['[CLS]', '睡', '眠', '不', '足', '高', '血', '压', '叔', '叔', '说', '高', '血', '压', '做', '完', '睡', '睡', '眠', '不', '足', '引', '来', '高', '血', '压', '[SEP]'], ['[CLS]', '高', '血', '压', '长', '效', '药', '有', '奶', '奶', '高', '血', '压', '吃', '哪', '种', '药', '控', '制', '血', '压', '效', '果', '想', '高', '血', '压', '长', '效', '药', '有', '[SEP]'], ['[CLS]', '糖', '尿', '并', '发', '症', '年', '眼', '底', '出', '血', '看', '不', '见', '[SEP]'], ['[CLS]', '谷', '丙', '转', '氨', '酶', '高', '121', '##520', '##12', '年', '月', '22', '日', '头', '昏', '无', '力', '小', '便', '黄', '就', '诊', '湖', '北', '省', '襄', '阳', '市', '第', '一', '医', '院', '[SEP]'], ['[CLS]', '我', '家', '孩', '子', '月', '发', '烧', '发', '高', '烧', '头', '天', '吃', '烧', '到', '39', '.', '2', '抽', '送', '医', '院', '仔', '细', '检', '查', '做', '轻', '微', '肺', '炎', '针', '发', '高', '烧', '反', '反', '复', '复', '做', 'ct', '说', '我', '家', '孩', '子', '脑', '沟', '深', '在', '乎', '想', '问', '问', '病', '菌', '病', '汤', '孩', '子', '发', '烧', '不', '爱', '退', '[SEP]'], ['[CLS]', '治', '疗', '癫', '痫', '医', '院', '哪', '家', '治', '癫', '痫', '医', '院', '丈', '夫', '工', '地', '小', '心', '撞', '癫', '痫', '复', '发', '手', '脚', '不', '停', '抽', '还', '会', '口', '吐', '白', '想', '脑', '外', '伤', '引', '发', '癫', '痫', '病', '治', '疗', '脑', '外', '伤', '引', '发', '癫', '痫', '病', '治', '疗', '[SEP]'], ['[CLS]', '非', '器', '质', '性', '勃', '起', '功', '能', '障', '碍', '[SEP]'], ['[CLS]', '孩', '子', '感', '冒', '发', '烧', '咳', '嗽', '吃', '药', '不', '见', '怎', '么', '回', '事', '我', '家', '孩', '子', '两', '周', '岁', '多', '点', '前', '几', '天', '感', '冒', '发', '烧', '喝', '药', '不', '见', '踪', '影', '小', '针', '肌', '肉', '注', '射', '三', '天', '吃', '药', '两', '天', '发', '烧', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', '坐', '骨', '神', '经', '痛', '是', '哪', '种', '病', '打', '篮', '球', '时', '拉', '伤', '腰', '再', '次', '出', '现', '疼', '痛', '感', '蔓', '延', '到', '大', '腿', '医', '院', '仔', '细', '检', '查', '确', '诊', '坐', '骨', '神', '经', '痛', '想', '坐', '骨', '神', '经', '痛', '是', '[SEP]'], ['[CLS]', '甲', '状', '腺', '结', '节', '心', '脏', '房', '颤', '心', '动', '过', '缓', '食', '欲', '不', '好', '嗓', '子', '干', '吞', '咽', '困', '难', '浑', '身', '没', '劲', '心', '脏', '房', '颤', '心', '动', '过', '缓', '去', '年', '确', '诊', '过', '有', '甲', '状', '腺', '结', '节', '[SEP]'], ['[CLS]', '宝', '宝', '咳', '嗽', '多', '点', '轻', '流', '鼻', '涕', '治', '疗', '情', '况', '效', '果', '吃', '一', '段', '时', '间', '药', '没', '什', '么', '效', '果', '在', '乎', '想', '看', '一', '看', '办', '法', '[SEP]'], ['[CLS]', '胆', '固', '醇', '高', '血', '脂', '高', '服', '用', '辛', '伐', '丁', '剂', '量', '医', '生', '您', '好', '昨', '天', '验', '尿', '总', '胆', '固', '醇', '6', '.', '29', '甘', '油', '三', '脂', '6', '.', '45', '医', '生', '化', '验', '单', '上', '注', '标', '本', '轻', '度', '乳', '糜', '胆', '固', '醇', '高', '过', '甘', '油', '三', '脂', '高', '过', '次', '点', '多', '辛', '伐', '丁', '40', '毫', '克', '每', '晚', '吃', '剂', '量', '吃', '合', '适', '谢', '谢', '[SEP]'], ['[CLS]', '小', '儿', '支', '气', '管', '炎', '食', '疗', '偏', '方', '小', '孩', '患', '上', '支', '气', '管', '炎', '好', '长', '一', '段', '时', '间', '喝', '药', '治', '不', '好', '平', '时', '气', '喘', '这', '该', '您', '好', '医', '生', '小', '儿', '支', '气', '管', '炎', '食', '疗', '偏', '方', '怎', '样', '才', '能', '快', '速', '[SEP]'], ['[CLS]', '吃', '鸡', '蛋', '能', '得', '禽', '流', '感', '早', '上', '吃', '两', '个', '煮', '鸡', '蛋', '蛋', '黄', '煮', '熟', '会', '得', '禽', '流', '感', '谢', '谢', '[SEP]'], ['[CLS]', '请', '问', '眩', '晕', '症', '有', '症', '状', '20', '天', '天', '旋', '地', '转', '[SEP]'], ['[CLS]', '局', '限', '硬', '皮', '病', '八', '年', '前', '局', '限', '性', '硬', '皮', '病', '治', '疗', '三', '年', '疫', '情', '期', '间', '隔', '离', '帮', '硬', '皮', '病', '吃', '药', '邮', '寄', '[SEP]'], ['[CLS]', '早', '泄', '阴', '径', '进', '入', '后', '就', '想', '射', '精', '不', '动', '时', '还', '好', '一', '动', '就', '射', '有', '频', '繁', '手', '淫', '射', '精', '后', '再', '次', '勃', '起', '有', '点', '困', '难', '第', '一', '次', '勃', '起', '没', '有', '问', '题', '有', '尿', '频', '尿', '急', '小', '便', '后', '有', '时', '有', '血', '流', '出', '阴', '径', '口', '有', '时', '有', '黄', '色', '东', '西', '有', '时', '有', '尿', '痛', '现', '象', '勃', '起', '时', '也', '有', '时', '有', '在', '医', '院', '也', '看', '过', '没', '有', '效', '果', '[SEP]'], ['[CLS]', '医', '生', '您', '好', '宝', '宝', '出', '生', 'nu', '##m', '天', '起', '就', '持', '续', '哭', '闹', '白', '天', '从', '八', '点', '多', '醒', '来', '就', '一', '直', '闹', '到', '下', '午', '五', '点', '多', '睡', '九', '点', '多', '醒', '来', '从', '十', '一', '二', '点', '开', '始', '一', '直', '闹', '到', '半', '夜', '三', '四', '点', '抱', '起', '来', '一', '会', '不', '闹', '了', '没', '几', '分', '钟', '又', '开', '始', '哭', '的', '撕', '心', '裂', '肺', '的', '脸', '上', '长', '了', '一', '脸', '湿', '疹', '今', '天', '在', '当', '地', '医', '院', '医', '生', '给', '开', '的', '碳', '酸', '钙', '和', '益', '生', '菌', '孩', '子', '现', '在', 'nu', '##m', '天', '主', '要', '喝', '的', '奶', '粉', 'nu', '##mm', '##l', '母', '乳', '也', '喝', '[SEP]'], ['[CLS]', '脐', '带', '胎', '盘', '影', '响', '肚', '子', '胎', '儿', '双', '腿', '双', '手', '长', '骨', '未', '见', '脐', '带', '胎', '盘', '边', '缘', '肚', '子', '胎', '儿', '影', '响', '大', '不', '大', '[SEP]'], ['[CLS]', '甲', '状', '舌', '骨', '囊', '肿', '术', '后', '复', '发', '颈', '部', '长', '囊', '肿', '月', '医', '院', '做', '过', '手', '术', '术', '后', '复', '发', '[SEP]'], ['[CLS]', '诊', '断', '脂', '溢', '性', '皮', '炎', '痒', '起', '皮', '发', '干', '熬', '夜', '加', '重', '脂', '溢', '性', '皮', '炎', '皮', '肤', '刺', '痒', '掉', '皮', '[SEP]'], ['[CLS]', '医', '院', '诊', '断', '过', '敏', '性', '皮', '炎', '家', '族', '史', '病', '史', '五', '月', '患', '湿', '疹', '用', '药', '好', '转', '腿', '肚', '感', '染', '愈', '合', '过', '敏', '性', '皮', '炎', '瘙', '痒', '肿', '胀', '十', '天', '症', '状', '加', '剧', '过', '敏', '性', '皮', '炎', '痒', '受', '不', '了', '病', '情', '加', '剧', '[SEP]'], ['[CLS]', '治', '疗', '喘', '息', '性', '肺', '炎', '多', '长', '时', '间', '治', '疗', '喘', '息', '性', '肺', '炎', '多', '长', '时', '间', '[SEP]'], ['[CLS]', '亚', '急', '性', '甲', '状', '腺', '炎', '治', '疗', '亚', '急', '性', '甲', '状', '腺', '炎', '治', '疗', '[SEP]'], ['[CLS]', '儿', '童', '中', '耳', '炎', '耳', '朵', '疼', '痛', '如', '何', '治', '效', '果', '女', '宝', '宝', '岁', '近', '几', '天', '孩', '子', '告', '诉', '耳', '朵', '疼', '察', '觉', '到', '黄', '色', '耳', '屎', '流', '出', '伴', '有', '头', '痛', '发', '烧', '请', '问', '儿', '童', '中', '耳', '炎', '耳', '朵', '疼', '痛', '如', '何', '治', '效', '果', '[SEP]'], ['[CLS]', '胃', '底', '腺', '息', '肉', '治', '疗', '胃', '底', '腺', '息', '肉', '约', '数', '十', '枚', '[SEP]'], ['[CLS]', '晚', '上', '吃', '高', '血', '压', '药', '姥', '姥', '年', '龄', '关', '系', '发', '觉', '血', '压', '偏', '高', '方', '式', '压', '制', '服', '食', '降', '压', '药', '压', '制', '血', '压', '想', '理', '解', '几', '下', '晚', '上', '吃', '高', '血', '压', '药', '[SEP]'], ['[CLS]', '幼', '儿', '扁', '桃', '体', '炎', '症', '高', '烧', '诊', '治', '女', '宝', '宝', '岁', '嗓', '子', '眼', '有', '点', '痛', '察', '觉', '到', '咳', '嗽', '剧', '烈', '伴', '有', '低', '烧', '请', '问', '幼', '儿', '扁', '桃', '体', '炎', '症', '高', '烧', '诊', '治', '[SEP]'], ['[CLS]', '三', '岁', '小', '孩', '咳', '嗽', '我', '家', '小', '孩', '几', '天', '咳', '嗽', '三', '岁', '咳', '嗽', '孩', '子', '身', '体', '受', '不', '了', '请', '问', '三', '岁', '小', '孩', '咳', '嗽', '[SEP]'], ['[CLS]', '灌', '肠', '便', '秘', '有', '没', '有', '作', '用', '便', '秘', '有', '时', '候', '太', '难', '受', '觉', '着', '厕', '所', '一', '件', '很', '痛', '事', '情', '拉', '不', '出', '您', '好', '灌', '肠', '便', '秘', '有', '用', '吗', '[SEP]'], ['[CLS]', '口', '臭', '浅', '表', '性', '胃', '炎', '17', '年', '前', '口', '臭', '浅', '表', '性', '胃', '炎', '幽', '门', '螺', '旋', '杆', '菌', '吃', '杀', '菌', '药', '物', '烧', '心', '感', '舌', '苔', '齿', '舌', '偏', '白', '手', '脚', '冰', '凉', '身', '体', '爱', '流', '汗', '身', '体', '爱', '疲', '惫', '咽', '部', '异', '物', '感', '有', '时', '候', '咳', '出', '黄', '色', '颗', '粒', '极', '臭', '口', '干', '口', '臭', '浅', '表', '性', '胃', '炎', '[SEP]'], ['[CLS]', '胰', '岛', '素', '血', '糖', '反', '升', '怎', '么', '回', '事', '奶', '奶', '糖', '尿', '病', '几', '天', '作', '白', '内', '障', '手', '术', '胰', '岛', '素', '降', '血', '糖', '几', '天', '不', '降', '反', '升', '点', '多', '升', '11', '点', '多', '[SEP]'], ['[CLS]', '小', '儿', '扁', '桃', '体', '发', '炎', '吞', '咽', '困', '难', '饮', '食', '禁', '忌', '女', '宝', '宝', '月', '嗓', '子', '眼', '有', '点', '痛', '察', '觉', '到', '咳', '嗽', '剧', '烈', '伴', '有', '低', '烧', '请', '问', '小', '儿', '扁', '桃', '体', '发', '炎', '吞', '咽', '困', '难', '饮', '食', '禁', '忌', '[SEP]'], ['[CLS]', '医', '生', '你', '好', '！', '我', '早', '泄', '问', '题', '有', '二', '十', '多', '年', '了', '现', '在', '还', '有', '勃', '起', '无', '力', '请', '问', '我', '该', '用', '什', '么', '药', '用', '万', '艾', '可', '效', '果', '怎', '么', '样', '[SEP]'], ['[CLS]', '胃', '镜', '幽', '门', '螺', '杆', '菌', 'hp', '阳', '性', '胃', '痛', '呼', '气', '试', '验', '检', '验', '幽', '门', '螺', '杆', '菌', '方', '法', '治', '疗', '效', '果', '用', '过', '三', '联', '疗', '法', '呼', '气', '味', '[UNK]', '气', '知', '晓', '救', '治', '[SEP]'], ['[CLS]', '您', '好', '患', '者', '被', '诊', '断', '为', '中', '风', '后', '遗', '症', '医', '生', '建', '议', '吃', '华', '佗', '再', '造', '丸', '能', '否', '帮', '忙', '开', '具', '下', '以', '便', '我', '在', '京', '东', '购', '买', '[SEP]'], ['[CLS]', '宫', '外', '孕', '救', '治', '肚', '子', '不', '痛', '血', '值', '出', '院', '宫', '外', '孕', '苛', '刻', '救', '治', '星', '期', '肚', '子', '不', '痛', '血', '值', '出', '院', '[SEP]']]
 
2021-08-24 19:19:31 train.py INFO token_ids: tensor([[  101,  5517,  5515,  ...,     0,     0,     0],
        [  101,  4626,  4587,  ...,     0,     0,     0],
        [  101, 12797,  8175,  ...,     0,     0,     0],
        ...,
        [  101,  5517,  7262,  ...,     0,     0,     0],
        [  101,  2644,  1962,  ...,     0,     0,     0],
        [  101,  2151,  1912,  ...,     0,     0,     0]])
 
2021-08-24 19:19:31 train.py INFO token_ids shape: torch.Size([64, 128])
 
2021-08-24 19:19:31 train.py INFO attention_mask: tensor([[1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        ...,
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0]])

2021-08-24 19:19:31 train.py INFO token_type_ids: tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]])

2021-08-24 19:19:31 train.py INFO labels: tensor([ 6, 10,  2, 10,  1,  6,  8,  1,  6,  5,  0,  0,  1,  1,  5,  0,  2,  3,
         3,  3,  4,  8,  8,  2, 10,  0,  5,  4,  4,  9,  6,  7, 10,  0,  8, 10,
         9,  7,  4,  8,  8, 10,  1,  0,  2,  3,  9,  1,  1,  8,  9,  5,  6,  4,
         5,  8,  6,  6,  9,  5,  0,  6, 10,  3])

2021-08-24 19:19:31 train.py INFO labels shape: torch.Size([64])

2021-08-24 19:20:36 train.py INFO evaluate....................
2021-08-24 19:20:44 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9758    0.9560    0.9658       591
         皮肤科     0.8229    0.9133    0.8658       173
          其它     0.6116    0.4568    0.5230       162
          妇科     0.6932    0.8472    0.7625        72
       心血管内科     0.9020    0.6866    0.7797        67
        耳鼻喉科     0.8889    0.4706    0.6154        51
        消化内科     0.8554    0.8452    0.8503        84
        小儿内科     0.6148    0.6579    0.6356       114
        呼吸内科     0.6928    0.8394    0.7591       137
        内分泌科     0.7746    0.8730    0.8209        63
        神经内科     0.6125    0.7424    0.6712        66

    accuracy                         0.8184      1580
   macro avg     0.7677    0.7535    0.7499      1580
weighted avg     0.8227    0.8184    0.8150      1580

2021-08-24 19:20:44 train.py INFO Confusion matrix: 
[[565   8   3  10   0   0   0   3   0   1   1]
 [  4 158   4   5   0   0   1   0   0   0   1]
 [  7  19  74   7   3   2   7  10   8   7  18]
 [  1   1   4  61   0   0   0   3   0   0   2]
 [  1   0   4   1  46   0   0   1   2   7   5]
 [  0   0   7   0   0  24   0   9  10   0   1]
 [  0   0   8   0   0   0  71   0   4   0   1]
 [  0   1   6   1   0   0   3  75  27   0   1]
 [  0   0   0   1   0   1   1  18 115   0   1]
 [  1   1   2   2   0   0   0   2   0  55   0]
 [  0   4   9   0   2   0   0   1   0   1  49]]
2021-08-24 19:20:44 train.py INFO Iter:4400, Train Loss:0.0139, Train Acc:90.62%, Val Loss:0.1163, Val Acc:81.84%, Time:1:07:01 
2021-08-24 19:22:07 train.py INFO evaluate....................
2021-08-24 19:22:15 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9536    0.9729    0.9631       591
         皮肤科     0.8824    0.8671    0.8746       173
          其它     0.6500    0.4012    0.4962       162
          妇科     0.6531    0.8889    0.7529        72
       心血管内科     0.8167    0.7313    0.7717        67
        耳鼻喉科     0.7292    0.6863    0.7071        51
        消化内科     0.7872    0.8810    0.8315        84
        小儿内科     0.7816    0.5965    0.6766       114
        呼吸内科     0.6988    0.8467    0.7657       137
        内分泌科     0.5876    0.9048    0.7125        63
        神经内科     0.7719    0.6667    0.7154        66

    accuracy                         0.8209      1580
   macro avg     0.7556    0.7676    0.7516      1580
weighted avg     0.8224    0.8209    0.8145      1580

2021-08-24 19:22:15 train.py INFO Confusion matrix: 
[[575   4   0   9   0   0   0   0   0   2   1]
 [  8 150   4   7   0   0   1   0   0   2   1]
 [ 14  12  65  12   5   4  12   5   8  18   7]
 [  2   1   2  64   0   0   0   1   0   2   0]
 [  1   0   3   1  49   1   0   0   3   8   1]
 [  0   1   6   0   0  35   0   0   8   0   1]
 [  1   0   3   0   1   0  74   0   4   1   0]
 [  0   1   6   3   0   2   5  68  25   3   1]
 [  0   0   1   1   0   5   1  12 116   0   1]
 [  1   0   2   1   0   0   1   1   0  57   0]
 [  1   1   8   0   5   1   0   0   2   4  44]]
2021-08-24 19:22:15 train.py INFO Iter:4500, Train Loss:0.0319, Train Acc:89.06%, Val Loss:0.1201, Val Acc:82.09%, Time:1:08:32 
2021-08-24 19:23:37 train.py INFO evaluate....................
2021-08-24 19:23:46 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9711    0.9679    0.9695       591
         皮肤科     0.8953    0.8902    0.8928       173
          其它     0.6224    0.5494    0.5836       162
          妇科     0.8621    0.6944    0.7692        72
       心血管内科     0.7812    0.7463    0.7634        67
        耳鼻喉科     0.7857    0.6471    0.7097        51
        消化内科     0.8539    0.9048    0.8786        84
        小儿内科     0.6639    0.7105    0.6864       114
        呼吸内科     0.7368    0.8175    0.7751       137
        内分泌科     0.6404    0.9048    0.7500        63
        神经内科     0.7667    0.6970    0.7302        66

    accuracy                         0.8354      1580
   macro avg     0.7800    0.7754    0.7735      1580
weighted avg     0.8376    0.8354    0.8344      1580

2021-08-24 19:23:46 train.py INFO Confusion matrix: 
[[572   3   8   2   0   0   0   0   0   5   1]
 [  8 154   5   3   0   0   0   1   0   0   2]
 [  4  10  89   2   7   2  10  12   6  14   6]
 [  3   3  11  50   0   0   0   2   0   3   0]
 [  1   0   3   0  50   1   0   0   2   9   1]
 [  0   0   7   0   0  33   0   4   6   0   1]
 [  0   0   4   0   0   0  76   0   4   0   0]
 [  0   1   5   0   1   1   2  81  22   0   1]
 [  0   0   0   1   0   5   1  17 112   0   1]
 [  1   0   2   0   0   0   0   2   0  57   1]
 [  0   1   9   0   6   0   0   3   0   1  46]]
2021-08-24 19:23:46 train.py INFO saving model..........
2021-08-24 19:23:48 train.py INFO Iter:4600, Train Loss:0.0162, Train Acc:92.19%, Val Loss:0.1072, Val Acc:83.54%, Time:1:10:04 *
2021-08-24 19:25:10 train.py INFO evaluate....................
2021-08-24 19:25:18 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9427    0.9746    0.9584       591
         皮肤科     0.8324    0.8613    0.8466       173
          其它     0.6471    0.3395    0.4453       162
          妇科     0.6667    0.8889    0.7619        72
       心血管内科     0.7571    0.7910    0.7737        67
        耳鼻喉科     0.5968    0.7255    0.6549        51
        消化内科     0.7922    0.7262    0.7578        84
        小儿内科     0.8750    0.4298    0.5765       114
        呼吸内科     0.6994    0.8321    0.7600       137
        内分泌科     0.7051    0.8730    0.7801        63
        神经内科     0.5049    0.7879    0.6154        66

    accuracy                         0.8006      1580
   macro avg     0.7290    0.7482    0.7210      1580
weighted avg     0.8070    0.8006    0.7901      1580

2021-08-24 19:25:18 train.py INFO Confusion matrix: 
[[576   4   0   6   0   0   2   0   0   2   1]
 [  7 149   3   6   1   0   0   0   0   0   7]
 [ 15  17  55  11   8   5   9   2   4  10  26]
 [  3   0   2  64   0   0   0   0   0   2   1]
 [  2   0   0   1  53   1   1   0   0   7   2]
 [  0   2   2   2   0  37   0   0   6   0   2]
 [  3   0  14   0   1   0  61   0   3   0   2]
 [  2   5   2   3   1   8   3  49  36   2   3]
 [  0   0   1   2   2  10   1   4 114   0   3]
 [  1   0   2   0   0   0   0   1   0  55   4]
 [  2   2   4   1   4   1   0   0   0   0  52]]
2021-08-24 19:25:18 train.py INFO Iter:4700, Train Loss:0.0673, Train Acc:84.38%, Val Loss:0.1493, Val Acc:80.06%, Time:1:11:35 
2021-08-24 19:26:39 train.py INFO evaluate....................
2021-08-24 19:26:47 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9839    0.9306    0.9565       591
         皮肤科     0.9397    0.6301    0.7543       173
          其它     0.6944    0.3086    0.4274       162
          妇科     0.4762    0.9722    0.6393        72
       心血管内科     0.6753    0.7761    0.7222        67
        耳鼻喉科     0.6667    0.7451    0.7037        51
        消化内科     0.5563    0.9405    0.6991        84
        小儿内科     0.7640    0.5965    0.6700       114
        呼吸内科     0.6807    0.8248    0.7459       137
        内分泌科     0.7200    0.8571    0.7826        63
        神经内科     0.6500    0.7879    0.7123        66

    accuracy                         0.7816      1580
   macro avg     0.7098    0.7609    0.7103      1580
weighted avg     0.8136    0.7816    0.7778      1580

2021-08-24 19:26:47 train.py INFO Confusion matrix: 
[[550   2   4  17   1   0  10   0   2   2   3]
 [  4 109   6  29   5   0   7   0   1   4   8]
 [  4   4  50  22  11   3  35   7   7   9  10]
 [  0   0   2  70   0   0   0   0   0   0   0]
 [  0   0   1   3  52   0   0   1   3   6   1]
 [  0   0   0   1   0  38   0   2   9   0   1]
 [  0   0   1   0   0   0  79   0   4   0   0]
 [  0   0   1   3   1   6   5  68  27   0   3]
 [  0   0   1   1   0  10   1   9 113   0   2]
 [  1   0   1   1   2   0   3   1   0  54   0]
 [  0   1   5   0   5   0   2   1   0   0  52]]
2021-08-24 19:26:47 train.py INFO Iter:4800, Train Loss:0.0192, Train Acc:89.06%, Val Loss:0.2093, Val Acc:78.16%, Time:1:13:04 
2021-08-24 19:28:09 train.py INFO evaluate....................
2021-08-24 19:28:17 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9695    0.9695    0.9695       591
         皮肤科     0.9096    0.8728    0.8909       173
          其它     0.6392    0.6235    0.6312       162
          妇科     0.7294    0.8611    0.7898        72
       心血管内科     0.7966    0.7015    0.7460        67
        耳鼻喉科     0.6406    0.8039    0.7130        51
        消化内科     0.8642    0.8333    0.8485        84
        小儿内科     0.7670    0.6930    0.7281       114
        呼吸内科     0.7310    0.7737    0.7518       137
        内分泌科     0.7903    0.7778    0.7840        63
        神经内科     0.7424    0.7424    0.7424        66

    accuracy                         0.8405      1580
   macro avg     0.7800    0.7866    0.7814      1580
weighted avg     0.8427    0.8405    0.8407      1580

2021-08-24 19:28:17 train.py INFO Confusion matrix: 
[[573   4   7   6   0   1   0   0   0   0   0]
 [  8 151   6   5   0   0   1   0   0   0   2]
 [  5   8 101   7   6   6   6   4   4   7   8]
 [  1   1   6  62   0   0   0   2   0   0   0]
 [  1   0   5   2  47   1   0   1   3   6   1]
 [  0   0   3   0   0  41   0   1   5   0   1]
 [  2   0   7   0   0   0  70   1   4   0   0]
 [  0   1   5   1   1   2   2  79  22   0   1]
 [  0   0   1   1   0  12   1  14 106   0   2]
 [  1   0   7   1   1   0   1   1   0  49   2]
 [  0   1  10   0   4   1   0   0   1   0  49]]
2021-08-24 19:28:17 train.py INFO saving model..........
2021-08-24 19:28:19 train.py INFO Iter:4900, Train Loss:0.0278, Train Acc:90.62%, Val Loss:0.0902, Val Acc:84.05%, Time:1:14:36 *
2021-08-24 19:29:43 train.py INFO evaluate....................
2021-08-24 19:29:51 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9694    0.9645    0.9669       591
         皮肤科     0.9150    0.8092    0.8589       173
          其它     0.5891    0.4691    0.5223       162
          妇科     0.5397    0.9444    0.6869        72
       心血管内科     0.9574    0.6716    0.7895        67
        耳鼻喉科     0.8250    0.6471    0.7253        51
        消化内科     0.8793    0.6071    0.7183        84
        小儿内科     0.5844    0.7895    0.6716       114
        呼吸内科     0.7317    0.6569    0.6923       137
        内分泌科     0.6790    0.8730    0.7639        63
        神经内科     0.6173    0.7576    0.6803        66

    accuracy                         0.8025      1580
   macro avg     0.7534    0.7446    0.7342      1580
weighted avg     0.8202    0.8025    0.8030      1580

2021-08-24 19:29:51 train.py INFO Confusion matrix: 
[[570   3   3  10   0   0   0   2   0   2   1]
 [  8 140   6  11   0   0   0   0   0   4   4]
 [  6   8  76  21   1   2   3  10   7  12  16]
 [  0   0   3  68   0   0   0   1   0   0   0]
 [  1   0   3   3  45   1   0   1   4   6   3]
 [  0   0   2   1   0  33   0   5   9   0   1]
 [  2   0  20   3   0   0  51   1   5   1   1]
 [  0   1   3   5   0   2   3  90   8   0   2]
 [  0   0   0   2   0   2   1  40  90   0   2]
 [  1   0   3   2   0   0   0   1   0  55   1]
 [  0   1  10   0   1   0   0   3   0   1  50]]
2021-08-24 19:29:51 train.py INFO Iter:5000, Train Loss:0.0367, Train Acc:87.50%, Val Loss:0.1309, Val Acc:80.25%, Time:1:16:07 
2021-08-24 19:31:13 train.py INFO evaluate....................
2021-08-24 19:31:22 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9172    0.9932    0.9537       591
         皮肤科     0.9459    0.8092    0.8723       173
          其它     0.5732    0.5802    0.5767       162
          妇科     0.7867    0.8194    0.8027        72
       心血管内科     0.8393    0.7015    0.7642        67
        耳鼻喉科     0.5775    0.8039    0.6721        51
        消化内科     0.8657    0.6905    0.7682        84
        小儿内科     0.8478    0.3421    0.4875       114
        呼吸内科     0.6436    0.8832    0.7446       137
        内分泌科     0.8393    0.7460    0.7899        63
        神经内科     0.6957    0.7273    0.7111        66

    accuracy                         0.8108      1580
   macro avg     0.7756    0.7361    0.7403      1580
weighted avg     0.8210    0.8108    0.8038      1580

2021-08-24 19:31:22 train.py INFO Confusion matrix: 
[[587   0   1   2   0   1   0   0   0   0   0]
 [ 15 140  10   4   0   0   0   0   0   1   3]
 [ 16   6  94   7   4   7   5   2   9   4   8]
 [  5   0   7  59   0   0   0   1   0   0   0]
 [  4   0   4   1  47   1   0   1   2   4   3]
 [  0   0   1   0   0  41   0   0   8   0   1]
 [  4   0  17   0   0   0  58   1   4   0   0]
 [  0   1  14   1   1  10   3  39  44   0   1]
 [  2   0   1   0   0   9   1   1 121   0   2]
 [  3   0   8   1   0   0   0   1   0  47   3]
 [  4   1   7   0   4   2   0   0   0   0  48]]
2021-08-24 19:31:22 train.py INFO Iter:5100, Train Loss:0.0071, Train Acc:90.62%, Val Loss:0.1135, Val Acc:81.08%, Time:1:17:38 
2021-08-24 19:32:43 train.py INFO evaluate....................
2021-08-24 19:32:51 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9757    0.9526    0.9640       591
         皮肤科     0.8678    0.8728    0.8703       173
          其它     0.6129    0.4691    0.5315       162
          妇科     0.8000    0.7222    0.7591        72
       心血管内科     0.8000    0.7761    0.7879        67
        耳鼻喉科     0.7600    0.7451    0.7525        51
        消化内科     0.7765    0.7857    0.7811        84
        小儿内科     0.7117    0.6930    0.7022       114
        呼吸内科     0.7285    0.8029    0.7639       137
        内分泌科     0.4553    0.8889    0.6022        63
        神经内科     0.8000    0.6667    0.7273        66

    accuracy                         0.8146      1580
   macro avg     0.7535    0.7614    0.7493      1580
weighted avg     0.8251    0.8146    0.8155      1580

2021-08-24 19:32:51 train.py INFO Confusion matrix: 
[[563   7   5   5   0   1   0   1   0   9   0]
 [  6 151   5   3   0   0   0   0   0   7   1]
 [  4  11  76   4   5   2  10   7   9  28   6]
 [  2   1   7  52   0   0   1   3   0   6   0]
 [  0   1   3   0  52   1   0   0   3   6   1]
 [  0   0   2   0   0  38   0   4   6   0   1]
 [  0   0  11   0   0   0  66   0   4   3   0]
 [  0   1   5   0   1   2   4  79  19   2   1]
 [  0   1   1   1   0   6   1  15 110   1   1]
 [  1   0   1   0   2   0   2   1   0  56   0]
 [  1   1   8   0   5   0   1   1   0   5  44]]
2021-08-24 19:32:51 train.py INFO Iter:5200, Train Loss:0.0089, Train Acc:93.75%, Val Loss:0.1169, Val Acc:81.46%, Time:1:19:08 
2021-08-24 19:34:15 train.py INFO evaluate....................
2021-08-24 19:34:23 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9842    0.8426    0.9079       591
         皮肤科     0.9024    0.8555    0.8783       173
          其它     0.5267    0.4877    0.5064       162
          妇科     0.5941    0.8333    0.6936        72
       心血管内科     0.8868    0.7015    0.7833        67
        耳鼻喉科     0.7619    0.6275    0.6882        51
        消化内科     0.7865    0.8333    0.8092        84
        小儿内科     0.7048    0.6491    0.6758       114
        呼吸内科     0.5438    0.8613    0.6667       137
        内分泌科     0.6471    0.8730    0.7432        63
        神经内科     0.6618    0.6818    0.6716        66

    accuracy                         0.7759      1580
   macro avg     0.7273    0.7497    0.7295      1580
weighted avg     0.8035    0.7759    0.7820      1580

2021-08-24 19:34:23 train.py INFO Confusion matrix: 
[[498   7  36  31   2   1   2   0   5   3   6]
 [  4 148   7   3   0   0   0   1   6   2   2]
 [  3   6  79   5   2   3  12   8  27   9   8]
 [  0   1   8  60   0   0   0   1   0   1   1]
 [  0   0   3   0  47   0   1   0   5   9   2]
 [  0   0   1   0   0  32   0   2  15   0   1]
 [  0   0   3   0   0   0  70   2   9   0   0]
 [  0   1   3   1   0   3   3  74  26   2   1]
 [  0   0   0   1   0   1   1  15 118   0   1]
 [  1   0   3   0   0   0   0   2   1  55   1]
 [  0   1   7   0   2   2   0   0   5   4  45]]
2021-08-24 19:34:23 train.py INFO Iter:5300, Train Loss:0.0068, Train Acc:92.19%, Val Loss:0.2094, Val Acc:77.59%, Time:1:20:40 
2021-08-24 19:35:45 train.py INFO evaluate....................
2021-08-24 19:35:53 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9725    0.9577    0.9650       591
         皮肤科     0.8644    0.8844    0.8743       173
          其它     0.6567    0.2716    0.3843       162
          妇科     0.8710    0.7500    0.8060        72
       心血管内科     0.8571    0.7164    0.7805        67
        耳鼻喉科     0.7200    0.7059    0.7129        51
        消化内科     0.8256    0.8452    0.8353        84
        小儿内科     0.6883    0.4649    0.5550       114
        呼吸内科     0.6332    0.9197    0.7500       137
        内分泌科     0.6292    0.8889    0.7368        63
        神经内科     0.4000    0.8182    0.5373        66

    accuracy                         0.7981      1580
   macro avg     0.7380    0.7475    0.7216      1580
weighted avg     0.8153    0.7981    0.7902      1580

2021-08-24 19:35:53 train.py INFO Confusion matrix: 
[[566   4   2   3   1   0   0   3   0   5   7]
 [  9 153   1   2   1   0   0   1   0   1   5]
 [  5  16  44   3   2   4  10  11  10  14  43]
 [  0   1   6  54   0   0   0   4   0   1   6]
 [  0   1   1   0  48   0   0   0   2   8   7]
 [  0   0   1   0   0  36   0   1  10   0   3]
 [  0   0   4   0   1   1  71   0   4   0   3]
 [  0   1   2   0   0   2   4  53  46   3   3]
 [  1   0   0   0   0   5   1   2 126   0   2]
 [  1   0   2   0   0   0   0   2   0  56   2]
 [  0   1   4   0   3   2   0   0   1   1  54]]
2021-08-24 19:35:53 train.py INFO Iter:5400, Train Loss:0.0026, Train Acc:95.31%, Val Loss:0.1736, Val Acc:79.81%, Time:1:22:09 
2021-08-24 19:37:16 train.py INFO evaluate....................
2021-08-24 19:37:24 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9306    0.9763    0.9529       591
         皮肤科     0.8163    0.9249    0.8672       173
          其它     0.6637    0.4630    0.5455       162
          妇科     0.7973    0.8194    0.8082        72
       心血管内科     0.8095    0.7612    0.7846        67
        耳鼻喉科     0.7255    0.7255    0.7255        51
        消化内科     0.8085    0.9048    0.8539        84
        小儿内科     0.7821    0.5351    0.6354       114
        呼吸内科     0.6839    0.8686    0.7653       137
        内分泌科     0.7273    0.8889    0.8000        63
        神经内科     0.8500    0.5152    0.6415        66

    accuracy                         0.8259      1580
   macro avg     0.7813    0.7621    0.7618      1580
weighted avg     0.8228    0.8259    0.8171      1580

2021-08-24 19:37:24 train.py INFO Confusion matrix: 
[[577   6   0   5   0   1   0   0   0   2   0]
 [  8 160   2   3   0   0   0   0   0   0   0]
 [ 18  18  75   5   5   3  12   6   9   9   2]
 [  4   2   5  59   0   0   0   1   0   1   0]
 [  4   1   1   0  51   1   0   0   1   7   1]
 [  0   1   3   0   0  37   0   2   7   0   1]
 [  0   0   4   0   0   0  76   0   4   0   0]
 [  0   2   9   1   1   2   3  61  33   1   1]
 [  1   0   1   1   0   6   1   7 119   0   1]
 [  2   1   2   0   0   0   1   1   0  56   0]
 [  6   5  11   0   6   1   1   0   1   1  34]]
2021-08-24 19:37:24 train.py INFO Iter:5500, Train Loss:0.0250, Train Acc:89.06%, Val Loss:0.1161, Val Acc:82.59%, Time:1:23:41 
2021-08-24 19:38:47 train.py INFO evaluate....................
2021-08-24 19:38:55 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9693    0.9628    0.9660       591
         皮肤科     0.8800    0.8902    0.8851       173
          其它     0.6518    0.4506    0.5328       162
          妇科     0.7093    0.8472    0.7722        72
       心血管内科     0.7397    0.8060    0.7714        67
        耳鼻喉科     0.7805    0.6275    0.6957        51
        消化内科     0.8909    0.5833    0.7050        84
        小儿内科     0.5878    0.7632    0.6641       114
        呼吸内科     0.5268    0.7883    0.6316       137
        内分泌科     0.8226    0.8095    0.8160        63
        神经内科     0.8333    0.4545    0.5882        66

    accuracy                         0.8025      1580
   macro avg     0.7629    0.7257    0.7298      1580
weighted avg     0.8177    0.8025    0.8005      1580

2021-08-24 19:38:55 train.py INFO Confusion matrix: 
[[569   8   0  11   0   1   0   1   0   1   0]
 [  5 154   4   3   1   0   0   1   5   0   0]
 [  8   8  73   7   8   2   4  10  36   4   2]
 [  2   1   4  61   0   0   0   3   1   0   0]
 [  0   0   2   1  54   0   0   1   3   5   1]
 [  0   0   0   0   0  32   0  10   8   0   1]
 [  2   0   6   0   1   0  49   8  18   0   0]
 [  0   1   2   1   1   1   1  87  19   0   1]
 [  0   0   0   1   1   1   1  24 108   0   1]
 [  1   0   6   1   1   0   0   2   1  51   0]
 [  0   3  15   0   6   4   0   1   6   1  30]]
2021-08-24 19:38:55 train.py INFO Iter:5600, Train Loss:0.0425, Train Acc:90.62%, Val Loss:0.1513, Val Acc:80.25%, Time:1:25:11 
2021-08-24 19:40:18 train.py INFO evaluate....................
2021-08-24 19:40:26 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9667    0.9814    0.9740       591
         皮肤科     0.9324    0.7977    0.8598       173
          其它     0.5519    0.6235    0.5855       162
          妇科     0.8235    0.7778    0.8000        72
       心血管内科     0.7937    0.7463    0.7692        67
        耳鼻喉科     0.6452    0.7843    0.7080        51
        消化内科     0.8462    0.7857    0.8148        84
        小儿内科     0.7527    0.6140    0.6763       114
        呼吸内科     0.7099    0.8394    0.7692       137
        内分泌科     0.6829    0.8889    0.7724        63
        神经内科     0.8293    0.5152    0.6355        66

    accuracy                         0.8266      1580
   macro avg     0.7758    0.7595    0.7604      1580
weighted avg     0.8350    0.8266    0.8266      1580

2021-08-24 19:40:26 train.py INFO Confusion matrix: 
[[580   1   3   4   0   0   0   0   0   2   1]
 [  8 138  20   3   0   0   0   0   1   3   0]
 [  6   5 101   3   6   5   8   6   9  11   2]
 [  1   1  13  56   0   0   0   1   0   0   0]
 [  0   0   4   0  50   0   0   0   4   8   1]
 [  0   0   1   0   0  40   0   4   5   0   1]
 [  2   0  10   0   0   0  66   1   5   0   0]
 [  0   1   9   1   0   6   3  70  22   1   1]
 [  0   0   0   1   0  10   1   9 115   0   1]
 [  1   0   5   0   0   0   0   1   0  56   0]
 [  2   2  17   0   7   1   0   1   1   1  34]]
2021-08-24 19:40:26 train.py INFO Iter:5700, Train Loss:0.0160, Train Acc:90.62%, Val Loss:0.1138, Val Acc:82.66%, Time:1:26:43 
2021-08-24 19:41:46 train.py INFO evaluate....................
2021-08-24 19:41:54 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9585    0.9763    0.9673       591
         皮肤科     0.7626    0.8728    0.8140       173
          其它     0.7400    0.2284    0.3491       162
          妇科     0.6078    0.8611    0.7126        72
       心血管内科     0.8125    0.7761    0.7939        67
        耳鼻喉科     0.8333    0.4902    0.6173        51
        消化内科     0.6875    0.9167    0.7857        84
        小儿内科     0.6867    0.5000    0.5787       114
        呼吸内科     0.6500    0.9489    0.7715       137
        内分泌科     0.7429    0.8254    0.7820        63
        神经内科     0.7101    0.7424    0.7259        66

    accuracy                         0.8032      1580
   macro avg     0.7447    0.7399    0.7180      1580
weighted avg     0.8087    0.8032    0.7847      1580

2021-08-24 19:41:54 train.py INFO Confusion matrix: 
[[577   3   0  10   0   0   0   0   0   0   1]
 [  8 151   1   8   0   0   2   0   2   1   0]
 [ 11  23  37  14   6   2  25  17  10   8   9]
 [  3   3   1  62   0   0   1   2   0   0   0]
 [  1   0   1   2  52   0   0   0   2   7   2]
 [  0  11   0   0   0  25   0   2  12   0   1]
 [  1   0   2   0   1   0  77   0   3   0   0]
 [  0   3   1   2   1   2   3  57  41   1   3]
 [  0   1   0   1   0   1   1   2 130   0   1]
 [  1   0   2   2   1   0   1   1   0  52   3]
 [  0   3   5   1   3   0   2   2   0   1  49]]
2021-08-24 19:41:54 train.py INFO Iter:5800, Train Loss:0.0103, Train Acc:90.62%, Val Loss:0.1431, Val Acc:80.32%, Time:1:28:10 
2021-08-24 19:43:18 train.py INFO evaluate....................
2021-08-24 19:43:26 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9677    0.9645    0.9661       591
         皮肤科     0.7031    0.9306    0.8010       173
          其它     0.5729    0.3395    0.4264       162
          妇科     0.6977    0.8333    0.7595        72
       心血管内科     0.8889    0.7164    0.7934        67
        耳鼻喉科     0.6800    0.6667    0.6733        51
        消化内科     0.8375    0.7976    0.8171        84
        小儿内科     0.5402    0.8246    0.6528       114
        呼吸内科     0.8636    0.5547    0.6756       137
        内分泌科     0.7812    0.7937    0.7874        63
        神经内科     0.7000    0.7424    0.7206        66

    accuracy                         0.8000      1580
   macro avg     0.7484    0.7422    0.7339      1580
weighted avg     0.8079    0.8000    0.7934      1580

2021-08-24 19:43:26 train.py INFO Confusion matrix: 
[[570   9   3   5   0   0   0   1   0   2   1]
 [  5 161   2   3   0   1   0   0   0   1   0]
 [  8  36  55  13   2   5  10  14   3   5  11]
 [  1   3   6  60   0   0   0   2   0   0   0]
 [  2   1   3   1  48   1   0   1   1   6   3]
 [  0   5   1   0   0  34   0   8   2   0   1]
 [  1   0  10   0   0   0  67   3   3   0   0]
 [  0   6   5   1   0   1   2  94   3   0   2]
 [  1   1   2   0   0   7   1  48  76   0   1]
 [  1   1   4   2   1   0   0   2   0  50   2]
 [  0   6   5   1   3   1   0   1   0   0  49]]
2021-08-24 19:43:26 train.py INFO Iter:5900, Train Loss:0.0064, Train Acc:93.75%, Val Loss:0.1306, Val Acc:80.00%, Time:1:29:43 
2021-08-24 19:44:50 train.py INFO evaluate....................
2021-08-24 19:44:58 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9788    0.9374    0.9576       591
         皮肤科     0.7667    0.9306    0.8407       173
          其它     0.5972    0.2654    0.3675       162
          妇科     0.8545    0.6528    0.7402        72
       心血管内科     0.8393    0.7015    0.7642        67
        耳鼻喉科     0.5190    0.8039    0.6308        51
        消化内科     0.8571    0.7857    0.8199        84
        小儿内科     0.5347    0.6754    0.5969       114
        呼吸内科     0.7258    0.6569    0.6897       137
        内分泌科     0.6292    0.8889    0.7368        63
        神经内科     0.5000    0.8182    0.6207        66

    accuracy                         0.7823      1580
   macro avg     0.7093    0.7379    0.7059      1580
weighted avg     0.7956    0.7823    0.7762      1580

2021-08-24 19:44:58 train.py INFO Confusion matrix: 
[[554   6   0   6   0   1   0   6   0   1  17]
 [  4 161   2   0   0   0   0   1   2   1   2]
 [  5  27  43   2   4   8   9  17   5  17  25]
 [  2   6   8  47   0   0   0   4   0   4   1]
 [  0   1   1   0  47   1   0   0   4   8   5]
 [  0   2   3   0   0  41   0   1   3   0   1]
 [  0   0   6   0   1   0  66   6   5   0   0]
 [  0   5   3   0   0  12   1  77  14   1   1]
 [  0   1   2   0   0  15   1  27  90   0   1]
 [  1   0   2   0   0   1   0   2   0  56   1]
 [  0   1   2   0   4   0   0   3   1   1  54]]
2021-08-24 19:44:58 train.py INFO Iter:6000, Train Loss:0.0227, Train Acc:87.50%, Val Loss:0.1961, Val Acc:78.23%, Time:1:31:15 
2021-08-24 19:46:19 train.py INFO evaluate....................
2021-08-24 19:46:27 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9869    0.8917    0.9369       591
         皮肤科     0.7409    0.9422    0.8295       173
          其它     0.4633    0.5062    0.4838       162
          妇科     0.8727    0.6667    0.7559        72
       心血管内科     0.8846    0.6866    0.7731        67
        耳鼻喉科     0.8529    0.5686    0.6824        51
        消化内科     0.8391    0.8690    0.8538        84
        小儿内科     0.8000    0.5614    0.6598       114
        呼吸内科     0.6875    0.8832    0.7732       137
        内分泌科     0.6707    0.8730    0.7586        63
        神经内科     0.5783    0.7273    0.6443        66

    accuracy                         0.7949      1580
   macro avg     0.7615    0.7433    0.7410      1580
weighted avg     0.8154    0.7949    0.7973      1580

2021-08-24 19:46:27 train.py INFO Confusion matrix: 
[[527  13  35   3   1   0   0   0   0   2  10]
 [  4 163   4   0   0   0   0   0   0   1   1]
 [  3  25  82   2   2   3   8   3   6  15  13]
 [  0   9  11  48   0   0   1   2   0   1   0]
 [  0   1   3   0  46   0   0   1   3   6   7]
 [  0   1  10   0   0  29   0   0  10   0   1]
 [  0   0   7   0   0   0  73   0   4   0   0]
 [  0   3   9   1   0   0   3  64  31   1   2]
 [  0   1   2   0   0   2   1   9 121   0   1]
 [  0   1   5   1   0   0   0   1   0  55   0]
 [  0   3   9   0   3   0   1   0   1   1  48]]
2021-08-24 19:46:27 train.py INFO Iter:6100, Train Loss:0.0309, Train Acc:90.62%, Val Loss:0.1547, Val Acc:79.49%, Time:1:32:44 
2021-08-24 19:47:49 train.py INFO evaluate....................
2021-08-24 19:47:57 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9460    0.9780    0.9617       591
         皮肤科     0.8095    0.8844    0.8453       173
          其它     0.6789    0.4568    0.5461       162
          妇科     0.7973    0.8194    0.8082        72
       心血管内科     0.8519    0.6866    0.7603        67
        耳鼻喉科     0.7308    0.7451    0.7379        51
        消化内科     0.8434    0.8333    0.8383        84
        小儿内科     0.6133    0.8070    0.6970       114
        呼吸内科     0.7576    0.7299    0.7435       137
        内分泌科     0.7105    0.8571    0.7770        63
        神经内科     0.8000    0.6061    0.6897        66

    accuracy                         0.8253      1580
   macro avg     0.7763    0.7640    0.7641      1580
weighted avg     0.8247    0.8253    0.8203      1580

2021-08-24 19:47:57 train.py INFO Confusion matrix: 
[[578   6   0   4   0   0   0   0   0   2   1]
 [ 11 153   3   3   0   0   0   0   2   1   0]
 [  9  19  74   6   3   4   9  17   7  11   3]
 [  4   2   3  59   0   0   0   3   0   1   0]
 [  4   0   3   1  46   0   0   1   4   6   2]
 [  0   1   0   0   0  38   0   7   4   0   1]
 [  1   0   9   0   0   0  70   0   4   0   0]
 [  2   1   3   1   1   2   3  92   8   0   1]
 [  1   0   0   0   0   7   1  27 100   0   1]
 [  1   1   4   0   0   0   0   1   1  54   1]
 [  0   6  10   0   4   1   0   2   2   1  40]]
2021-08-24 19:47:57 train.py INFO Iter:6200, Train Loss:0.0077, Train Acc:93.75%, Val Loss:0.1109, Val Acc:82.53%, Time:1:34:14 
2021-08-24 19:49:18 train.py INFO evaluate....................
2021-08-24 19:49:26 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9810    0.9594    0.9701       591
         皮肤科     0.8141    0.9364    0.8710       173
          其它     0.6324    0.5309    0.5772       162
          妇科     0.8169    0.8056    0.8112        72
       心血管内科     0.7941    0.8060    0.8000        67
        耳鼻喉科     0.6667    0.6275    0.6465        51
        消化内科     0.8222    0.8810    0.8506        84
        小儿内科     0.5813    0.8158    0.6788       114
        呼吸内科     0.8378    0.6788    0.7500       137
        内分泌科     0.8387    0.8254    0.8320        63
        神经内科     0.8421    0.7273    0.7805        66

    accuracy                         0.8348      1580
   macro avg     0.7843    0.7813    0.7789      1580
weighted avg     0.8402    0.8348    0.8342      1580

2021-08-24 19:49:26 train.py INFO Confusion matrix: 
[[567  11   2   6   0   1   0   4   0   0   0]
 [  2 162   5   4   0   0   0   0   0   0   0]
 [  6  17  86   2   8   2  12  19   4   4   2]
 [  1   3   7  58   0   0   0   3   0   0   0]
 [  0   1   2   0  54   1   0   1   1   5   2]
 [  0   1   9   0   0  32   0   4   4   0   1]
 [  0   0   5   0   0   0  74   4   1   0   0]
 [  0   2   5   1   1   1   2  93   8   0   1]
 [  1   1   1   0   0  10   1  29  93   0   1]
 [  1   0   6   0   1   0   0   1   0  52   2]
 [  0   1   8   0   4   1   1   2   0   1  48]]
2021-08-24 19:49:26 train.py INFO Iter:6300, Train Loss:0.0213, Train Acc:85.94%, Val Loss:0.0979, Val Acc:83.48%, Time:1:35:43 
2021-08-24 19:50:49 train.py INFO evaluate....................
2021-08-24 19:50:57 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9821    0.9289    0.9548       591
         皮肤科     0.9059    0.8902    0.8980       173
          其它     0.5067    0.7037    0.5891       162
          妇科     0.8235    0.7778    0.8000        72
       心血管内科     0.9565    0.6567    0.7788        67
        耳鼻喉科     0.8529    0.5686    0.6824        51
        消化内科     0.8676    0.7024    0.7763        84
        小儿内科     0.6981    0.6491    0.6727       114
        呼吸内科     0.6964    0.8540    0.7672       137
        内分泌科     0.7833    0.7460    0.7642        63
        神经内科     0.6711    0.7727    0.7183        66

    accuracy                         0.8190      1580
   macro avg     0.7949    0.7500    0.7638      1580
weighted avg     0.8403    0.8190    0.8242      1580

2021-08-24 19:50:57 train.py INFO Confusion matrix: 
[[549   6  27   5   0   0   0   0   0   2   2]
 [  5 154   9   4   0   0   0   0   0   0   1]
 [  3   8 114   2   1   1   6   7   6   4  10]
 [  0   1  14  56   0   0   0   1   0   0   0]
 [  1   0   4   0  44   0   0   1   4   7   6]
 [  0   0   6   0   0  29   0   2  13   0   1]
 [  1   0  14   0   0   0  59   6   4   0   0]
 [  0   0  11   1   0   1   2  74  24   0   1]
 [  0   0   4   0   0   3   1  11 117   0   1]
 [  0   0  11   0   0   0   0   2   0  47   3]
 [  0   1  11   0   1   0   0   2   0   0  51]]
2021-08-24 19:50:57 train.py INFO Iter:6400, Train Loss:0.0259, Train Acc:89.06%, Val Loss:0.1105, Val Acc:81.90%, Time:1:37:14 
2021-08-24 19:52:04 train.py INFO Epoch [4/5]
2021-08-24 19:52:04 train.py INFO tokens: [['[CLS]', '胃', '炎', '吃', '养', '胃', '34', '岁', '怎', '么', '回', '事', '感', '觉', '恶', '心', '想', '吐', '胃', '部', '阴', '阴', '作', '痛', '灼', '热', '反', '酸', '症', '状', '医', '院', '看', '过', '一', '段', '时', '间', '犯', '请', '问', '胃', '炎', '吃', '养', '胃', '[SEP]'], ['[CLS]', '甲', '亢', '病', '人', '能', '喝', '大', '麦', '茶', '[SEP]'], ['[CLS]', '吃', '腌', '制', '生', '[UNK]', '子', '寄', '生', '虫', '上', '个', '星', '期', '饭', '店', '吃', '腌', '生', '[UNK]', '子', '吃', '炒', '螺', '丝', '吐', '掉', '几', '天', '腹', '泻', '上', '网', '查', '生', '吃', '感', '染', '肺', '吸', '虫', '情', '况', '医', '院', '做', '检', '查', '有', '没', '有', '那', '种', '驱', '虫', '药', '吃', '[SEP]'], ['[CLS]', '孩', '子', '扁', '桃', '体', '炎', '红', '肿', '饮', '食', '男', '宝', '刚', '满', '月', '说', '嗓', '子', '疼', '察', '觉', '到', '伴', '有', '轻', '微', '咳', '嗽', '高', '烧', '不', '退', '请', '问', '孩', '子', '扁', '桃', '体', '炎', '红', '肿', '饮', '食', '[SEP]'], ['[CLS]', '胃', '炎', '治', '疗', '多', '久', '26', '岁', '段', '时', '间', '再', '次', '出', '现', '拉', '肚', '子', '肚', '子', '胀', '症', '状', '医', '院', '仔', '细', '检', '查', '说', '胃', '炎', '救', '治', '想', '问', '几', '下', '胃', '炎', '多', '长', '时', '间', '[SEP]'], ['[CLS]', '低', '血', '压', '102', '高', '压', '167', '低', '血', '压', '102', '高', '压', '167', '您', '好', '医', '生', '我', '要', '吃', '降', '压', '药', '合', '适', '谢', '谢', '[SEP]'], ['[CLS]', '治', '疗', '颞', '叶', '癫', '痫', '方', '法', '段', '时', '间', '身', '体', '小', '毛', '病', '倒', '地', '抽', '动', '眼', '睛', '向', '上', '翻', '白', '眼', '持', '续', '时', '间', '一', '到', '两', '分', '钟', '发', '烧', '检', '查', '说', '癫', '痫', '治', '疗', '癫', '痫', '哪', '家', '[SEP]'], ['[CLS]', '请', '问', '做', '甲', '状', '腺', '彩', '超', '造', '影', '声', '诺', '维', '药', '物', '甲', '状', '腺', '结', '节', '复', '查', '[SEP]'], ['[CLS]', '医', '生', '您', '好', '我', '患', '有', '高', '血', '压', '、', '高', '血', '脂', '、', '高', '胆', '固', '醇', '最', '近', '用', '了', '一', '个', '多', '月', '的', '阿', '司', '匹', '林', '肠', '溶', '片', '、', '洛', '伐', '他', '汀', '胶', '囊', '、', '复', '方', '利', '血', '平', '请', '问', '你', '能', '不', '能', '用', '中', '成', '药', '替', '代', '这', '些', '西', '药', '[SEP]'], ['[CLS]', '甲', '状', '腺', '疾', '病', '吃', '乌', '鸡', '白', '凤', '丸', '甲', '状', '腺', '疾', '病', '吃', '乌', '鸡', '白', '凤', '丸', '[SEP]'], ['[CLS]', '高', '血', '压', '吃', '银', '杏', '叶', '片', '舒', '服', '情', '况', '两', '个', '月', '早', '晨', '头', '疼', '担', '心', '情', '况', '发', '生', '时', '间', '长', '治', '疗', '请', '问', '高', '血', '压', '吃', '银', '杏', '叶', '片', '[SEP]'], ['[CLS]', '我', 'nu', '##m', '岁', '长', '期', '手', '淫', '导', '致', '早', '泄', '现', '在', '感', '觉', '腰', '疼', '肾', '虚', '现', '在', '有', '点', '尿', '频', '尿', '急', '记', '忆', '力', '下', '降', '龟', '头', '好', '像', '出', '现', '湿', '疹', '每', '次', '做', '爱', '的', '时', '候', '刚', '进', '去', '就', '射', '了', '[SEP]'], ['[CLS]', '甲', '状', '腺', '结', '节', '患', '者', '吃', '朋', '友', '甲', '状', '腺', '结', '节', '吃', '晚', '饭', '时', '严', '令', '禁', '止', '吃', '您', '好', '甲', '状', '腺', '结', '节', '吃', '[SEP]'], ['[CLS]', '腹', '泻', '拉', '肚', '子', '两', '天', '以', '前', '用', '杜', '拉', '宝', '好', '用', '电', '话', 'nu', '##m', '[SEP]'], ['[CLS]', '心', '绞', '痛', '治', '疗', '方', '法', '心', '绞', '痛', '两', '年', '没', '好', '痛', '苦', '您', '好', '心', '绞', '痛', '治', '疗', '方', '法', '[SEP]'], ['[CLS]', '轮', '胎', '气', '味', '香', '烟', '危', '害', '胸', '口', '胸', '痛', '胸', '闷', '情', '况', '医', '院', '检', '查', '说', '呼', '吸', '道', '疾', '病', '吃', '药', '管', '用', '咳', '嗽', '加', '重', '请', '问', '轮', '胎', '气', '味', '香', '烟', '危', '害', '[SEP]'], ['[CLS]', '痛', '风', '治', '疗', '仪', '管', '用', '懒', '得', '动', '吃', '饭', '一', '会', '想', '吃', '东', '西', '吃', '不', '想', '急', '死', '了', '害', '怕', '疾', '病', '想', '咨', '询', '请', '问', '痛', '风', '治', '疗', '仪', '管', '用', '[SEP]'], ['[CLS]', '睡', '觉', '时', '干', '咳', '嗽', '胸', '口', '胸', '痛', '胸', '闷', '情', '况', '医', '院', '检', '查', '说', '呼', '吸', '道', '疾', '病', '吃', '药', '管', '用', '咳', '嗽', '加', '重', '请', '问', '睡', '觉', '时', '干', '咳', '嗽', '[SEP]'], ['[CLS]', '小', '孩', '扁', '桃', '体', '炎', '高', '烧', '治', '效', '果', '我', '家', '男', '宝', '岁', '嗓', '子', '眼', '有', '点', '痛', '发', '现', '伴', '有', '轻', '微', '咳', '嗽', '发', '烧', '请', '问', '小', '孩', '扁', '桃', '体', '炎', '高', '烧', '治', '效', '果', '[SEP]'], ['[CLS]', '维', '生', '素', '片', '有', '作', '用', '维', '生', '素', '片', '作', '用', '[SEP]'], ['[CLS]', '荨', '麻', '疹', '复', '发', '在', '医', '院', '做', '了', '过', '敏', '源', '检', '查', '医', '生', '还', '查', '了', '甲', '亢', '荨', '麻', '疹', '已', '开', '药', '甲', '亢', '结', '果', '让', '去', '内', '分', '泌', '科', '诊', '断', '[SEP]'], ['[CLS]', '情', '况', '习', '惯', '性', '流', '产', '治', '疗', '患', '有', '习', '惯', '性', '流', '产', '流', '产', '特', '别', '担', '心', '真', '的', '想', '要', '孩', '子', '请', '问', '医', '生', '情', '况', '习', '惯', '性', '流', '产', '治', '疗', '[SEP]'], ['[CLS]', '二', '型', '糖', '尿', '病', '患', '者', '适', '合', '做', '化', '疗', '症', '状', '直', '肠', '糖', '尿', '病', '发', '病', '时', '间', '原', '因', '直', '肠', '过', '年', '治', '疗', '情', '况', '手', '术', '想', '要', '二', '型', '糖', '尿', '病', '患', '者', '适', '合', '做', '化', '疗', '[SEP]'], ['[CLS]', '低', '血', '钾', '会', '高', '血', '压', '同', '事', '妈', '妈', '仔', '细', '检', '查', '发', '觉', '低', '血', '钾', '您', '好', '医', '生', '低', '血', '钾', '会', '引', '来', '高', '血', '压', '[SEP]'], ['[CLS]', '发', '烧', '胃', '痛', '扁', '桃', '体', '腺', '样', '体', '术', '后', '发', '烧', '完', '针', '退', '后', '疼', '请', '问', '发', '烧', '胃', '痛', '[SEP]'], ['[CLS]', '甲', '状', '腺', '癌', '术', '后', '做', '头', '部', '核', '磁', '共', '振', '月', '25', '日', '医', '生', '主', '刀', '甲', '状', '腺', '癌', '手', '术', '术', '后', '半', '月', '恢', '复', '住', '院', '期', '间', '感', '觉', '头', '部', '舒', '服', '后', '脑', '勺', '胀', '痛', '医', '生', '建', '议', '神', '经', '内', '科', '就', '诊', '内', '科', '医', '生', '建', '议', '做', '头', '部', '核', '磁', '共', '振', '[SEP]'], ['[CLS]', '阴', '茎', '勃', '起', '不', '坚', '不', '能', '坚', '持', '整', '个', '过', '程', '！', '基', '本', '无', '性', '欲', '[SEP]'], ['[CLS]', '头', '疼', '快', '速', '缓', '解', '我', '家', '50', '岁', '一', '段', '时', '间', '眩', '晕', '症', '状', '特', '别', '累', '干', '不', '了', '家', '人', '挺', '担', '心', '特', '地', '咨', '询', '情', '况', '请', '问', '头', '疼', '快', '速', '缓', '解', '[SEP]'], ['[CLS]', '癫', '痫', '病', '病', '人', '吃', '女', '朋', '友', '患', '癫', '痫', '病', '发', '觉', '小', '气', '吃', '晚', '饭', '吃', '知', '晓', '病', '饮', '食', '留', '意', '不', '吃', '不', '好', '食', '物', '没', '什', '么', '理', '解', '[SEP]'], ['[CLS]', '联', '苯', '双', '酯', '滴', '丸', '天', '晴', '甘', '平', '[SEP]'], ['[CLS]', '生', '殖', '器', '包', '皮', '过', '长', '医', '生', '包', '皮', '过', '长', '治', '疗', '男', '性', '包', '皮', '过', '长', '朋', '友', '知', '晓', '帮', '给', '你', '个', '详', '细', '专', '业', '答', '案', '非', '常', '感', '谢', '[SEP]'], ['[CLS]', '天', '气', '干', '燥', '热', '伤', '风', '感', '冒', '咳', '嗽', '想', '买', '几', '盒', '希', '刻', '劳', '消', '炎', '药', '需', '要', '个', '处', '方', '因', '为', '之', '前', '医', '院', '也', '开', '这', '个', '宝', '宝', '爱', '吃', '效', '果', '好', '谢', '谢', '[SEP]'], ['[CLS]', '小', '儿', '哮', '喘', '吃', '從', '周', '岁', '周', '岁', '反', '复', '发', '作', '[SEP]'], ['[CLS]', '糖', '尿', '病', '便', '秘', '治', '疗', '便', '秘', '好', '几', '年', '查', '出', '糖', '尿', '病', '吃', '梨', '好', '些', '可', '梨', '含', '糖', '[SEP]'], ['[CLS]', '咳', '嗽', '两', '周', '了', '吃', '苏', '黄', '止', '咳', '胶', '囊', '有', '所', '缓', '解', '希', '望', '医', '生', '给', '我', '再', '开', '两', '盒', '然', '后', '再', '给', '我', '开', 'nu', '##m', '盒', '蒲', '地', '兰', '口', '服', '液', '[SEP]'], ['[CLS]', '癫', '痫', '病', '改', '善', '已', '有', '30', '年', '年', '病', '史', '现', '年', '36', '岁', '发', '病', '症', '状', '癫', '痫', '勉', '强', '药', '物', '医', '疗', '技', '术', '治', '疗', '方', '案', '[SEP]'], ['[CLS]', '羊', '角', '风', '疾', '病', '治', '疗', '婶', '知', '晓', '怎', '么', '回', '事', '头', '疼', '口', '吐', '白', '沫', '意', '识', '跌', '倒', '仔', '细', '检', '查', '说', '患', '羊', '角', '风', '想', '问', '问', '羊', '角', '风', '病', '该', '治', '疗', '羊', '角', '风', '治', '疗', '[SEP]'], ['[CLS]', '鹅', '口', '疮', '去', '医', '院', '看', '医', '生', '说', '让', '买', '制', '霉', '菌', '素', '甘', '油', '好', '像', '都', '买', '不', '到', '请', '问', '用', '鲁', '抗', '制', '霉', '菌', '素', '可', '以', '吗', '[SEP]'], ['[CLS]', '支', '气', '管', '炎', '反', '复', '一', '周', '反', '复', '发', '烧', '[SEP]'], ['[CLS]', '婴', '幼', '儿', '扁', '桃', '体', '炎', '嗓', '子', '疼', '治', '疗', '期', '间', '吃', '我', '家', '孩', '子', '男', '宝', '宝', '岁', '说', '咽', '东', '西', '疼', '察', '觉', '到', '咳', '嗽', '剧', '烈', '高', '烧', '不', '退', '请', '问', '婴', '幼', '儿', '扁', '桃', '体', '炎', '嗓', '子', '疼', '治', '疗', '期', '间', '吃', '[SEP]'], ['[CLS]', '月', '宝', '宝', '舌', '苔', '月', '宝', '宝', '舌', '苔', '12', '月', '日', '起', '咳', '嗽', '支', '气', '管', '炎', '不', '咳', '痰', '舌', '苔', '支', '气', '管', '炎', '[SEP]'], ['[CLS]', '小', '儿', '扁', '桃', '体', '发', '炎', '总', '发', '烧', '饮', '食', '男', '宝', '刚', '满', '月', '说', '嗓', '子', '喝', '水', '疼', '察', '觉', '到', '咳', '嗽', '好', '像', '比', '较', '严', '重', '高', '烧', '不', '退', '请', '问', '小', '儿', '扁', '桃', '体', '发', '炎', '总', '发', '烧', '饮', '食', '[SEP]'], ['[CLS]', '输', '卵', '管', '完', '好', '做', '检', '查', '感', '觉', '腰', '酸', '背', '痛', '小', '腹', '一', '种', '下', '坠', '感', '觉', '放', '心', '医', '院', '检', '查', '说', '输', '卵', '管', '积', '液', '请', '问', '想', '要', '输', '卵', '管', '完', '好', '做', '检', '查', '[SEP]'], ['[CLS]', '多', '年', '手', '淫', '现', '在', '能', '勃', '起', '但', '是', '硬', '度', '不', '够', '一', '分', '钟', '左', '右', '射', '精', '[SEP]'], ['[CLS]', '必', '利', '劲', '盐', '酸', '达', '泊', '西', '汀', '片', '[SEP]'], ['[CLS]', '吃', '避', '孕', '药', '阴', '道', '疼', '吃', '避', '孕', '药', '几', '天', '阴', '道', '出', '血', '小', '腹', '疼', '阴', '道', '疼', '正', '[SEP]'], ['[CLS]', '阑', '尾', '炎', '如', '何', '治', '跑', '步', '腹', '部', '痛', '[SEP]'], ['[CLS]', '宫', '颈', '糜', '烂', '检', '查', '白', '带', '增', '多', '天', '天', '流', '白', '带', '小', '便', '腥', '臭', '味', '夏', '天', '味', '道', '恨', '不', '得', '流', '白', '带', '洗', '澡', '问', '到', '羞', '愧', '质', '疑', '宫', '颈', '糜', '烂', '您', '好', '宫', '颈', '糜', '烂', '仔', '细', '检', '查', '[SEP]'], ['[CLS]', '输', '卵', '管', '检', '查', '治', '疗', '输', '卵', '管', '检', '验', '报', '告', '右', '侧', '输', '卵', '管', '炎', '伴', '远', '端', '扩', '展', '伞', '端', '黏', '连', '左', '侧', '输', '卵', '管', '通', '欠', '畅', '认', '同', '治', '疗', '救', '治', '自', '然', '怀', '上', '[SEP]'], ['[CLS]', '头', '昏', '恶', '心', '原', '因', '调', '理', '怎', '么', '回', '事', '睡', '不', '着', '特', '别', '影', '响', '板', '式', '效', '率', '朋', '友', '推', '荐', '神', '经', '内', '科', '请', '问', '头', '昏', '恶', '心', '原', '因', '调', '理', '[SEP]'], ['[CLS]', '肚', '子', '疼', '肠', '胃', '炎', '吃', '药', '肚', '子', '疼', '肠', '胃', '炎', '吃', '药', '额', '外', '留', '意', '蔬', '果', '吃', '[SEP]'], ['[CLS]', '男', '孩', '晚', '上', '频', '繁', '干', '咳', '男', '孩', '岁', '号', '晚', '上', '频', '繁', '轻', '咳', '入', '眠', '不', '咳', '无', '痰', '孩', '子', '说', '嗓', '子', '痒', '号', '早', '上', '发', '烧', '38', '度', '未', '到', '医', '院', '复', '诊', '吃', '护', '彤', '退', '烧', '药', '退', '热', '[SEP]'], ['[CLS]', '尿', '频', '.', '尿', '后', '是', '白', '色', '的', '.', '早', '泄', '很', '严', '重', '.', '时', '间', '长', '反', '反', '复', '复', '的', '.', '大', '医', '院', '去', '看', '了', '很', '多', '回', '了', '.', '没', '办', '法', '了', '.', '医', '生', '请', '问', '有', '什', '么', '办', '法', '吗', '.', '我', '去', '大', '医', '院', '感', '觉', '花', '多', '少', '钱', '都', '没', '用', '[SEP]'], ['[CLS]', '孩', '子', '扁', '桃', '体', '炎', '症', '吞', '咽', '困', '难', '饮', '食', '禁', '忌', '女', '宝', '宝', '岁', '说', '话', '时', '嗓', '子', '疼', '察', '觉', '到', '说', '话', '声', '音', '沙', '哑', '伴', '有', '低', '烧', '请', '问', '孩', '子', '扁', '桃', '体', '炎', '症', '吞', '咽', '困', '难', '饮', '食', '禁', '忌', '[SEP]'], ['[CLS]', '颞', '叶', '癫', '痫', '羊', '角', '风', '上', '次', '发', '了', '低', '烧', '退', '热', '晕', '迷', '医', '生', '说', '患', '上', '癫', '痫', '医', '治', '医', '生', '仔', '细', '检', '查', '诊', '断', '额', '叶', '癫', '痫', '病', '医', '生', '开', '药', '定', '时', '服', '食', '颞', '叶', '癫', '痫', '病', '羊', '角', '风', '[SEP]'], ['[CLS]', '肚', '子', '痛', '吃', '药', '34', '岁', '怎', '么', '回', '事', '感', '觉', '恶', '心', '想', '吐', '胃', '部', '阴', '阴', '作', '痛', '灼', '热', '反', '酸', '症', '状', '医', '院', '看', '过', '一', '段', '时', '间', '犯', '请', '问', '肚', '子', '痛', '吃', '药', '[SEP]'], ['[CLS]', '小', '儿', '腺', '样', '体', '肥', '大', '治', '疗', '孩', '子', '四', '岁', '睡', '觉', '打', '鼾', '四', '个', '月', '三', '个', '月', '前', '做', '鼻', '镜', '腺', '样', '体', '肥', '大', '堵', '满', '鼻', '腔', '吃', '孟', '鲁', '司', '特', '和', '匹', '莫', '得', '莫', '米', '松', '喷', '鼻', '一', '月', '前', '做', '睡', '眠', '测', '试', '分', '泌', '物', '老', '流', '黄', '鼻', '涕', '影', '响', '睡', '眠', '[SEP]'], ['[CLS]', '中', '度', '阻', '塞', '性', '睡', '眠', '呼', '吸', '暂', '停', '低', '通', '气', '综', '合', '症', '治', '疗', '病', '情', '描', '述', '睡', '觉', '时', '打', '呼', '噜', '声', '音', '特', '别', '治', '疗', '情', '况', '效', '果', '治', '疗', '效', '果', '想', '得', '到', '治', '疗', '[SEP]'], ['[CLS]', '诱', '发', '老', '年', '人', '癫', '痫', '因', '素', '家', '里', '老', '人', '喊', '头', '晕', '有', '时', '候', '还', '会', '呆', '愣', '特', '别', '吃', '晚', '饭', '好', '好', '呆', '住', '出', '神', '目', '光', '呆', '滞', '一', '动', '不', '动', '手', '脚', '发', '颤', '医', '院', '仔', '细', '检', '查', '说', '癫', '痫', '想', '致', '使', '老', '年', '人', '癫', '痫', '因', '素', '[SEP]'], ['[CLS]', '客', '户', '您', '好', '因', '工', '作', '压', '力', '大', '阳', '痿', '早', '泄', '严', '重', '影', '响', '夫', '妻', '生', '活', '须', '开', '处', '方', '药', '谢', '谢', '[SEP]'], ['[CLS]', '孩', '子', '中', '耳', '炎', '耳', '朵', '疼', '该', '医', '治', '男', '孩', '子', '岁', '近', '几', '天', '孩', '子', '说', '耳', '朵', '痒', '疼', '察', '觉', '到', '黄', '色', '耳', '屎', '流', '出', '耳', '朵', '低', '烧', '请', '问', '孩', '子', '中', '耳', '炎', '耳', '朵', '疼', '该', '医', '治', '[SEP]'], ['[CLS]', '羊', '角', '风', '发', '作', '症', '状', '朋', '友', '爸', '爸', '患', '上', '羊', '角', '风', '意', '识', '跌', '倒', '四', '肢', '抽', '搐', '口', '吐', '涎', '沫', '羊', '角', '风', '症', '状', '羊', '角', '风', '复', '发', '症', '状', '在', '乎', '羊', '角', '风', '复', '发', '症', '状', '[SEP]'], ['[CLS]', '岁', '小', '孩', '耳', '朵', '长', '淋', '巴', '结', '怎', '样', '治', '[SEP]'], ['[CLS]', '最', '近', '一', '个', '星', '期', '感', '觉', '憋', '不', '住', '尿', '小', '腹', '部', '有', '不', '适', '感', '假', '期', '在', '家', '久', '坐', '请', '问', '是', '不', '是', '前', '列', '腺', '炎', '之', '类', '的', '应', '该', '吃', '什', '么', '消', '炎', '药', '呢', '左', '氧', '氟', '沙', '星', '吗', '[SEP]']]
 
2021-08-24 19:52:04 train.py INFO token_ids: tensor([[ 101, 5517, 4142,  ...,    0,    0,    0],
        [ 101, 4508,  768,  ...,    0,    0,    0],
        [ 101, 1391, 5574,  ...,    0,    0,    0],
        ...,
        [ 101, 5399, 6235,  ...,    0,    0,    0],
        [ 101, 2259, 2207,  ...,    0,    0,    0],
        [ 101, 3297, 6818,  ...,    0,    0,    0]])
 
2021-08-24 19:52:04 train.py INFO token_ids shape: torch.Size([64, 72])
 
2021-08-24 19:52:04 train.py INFO attention_mask: tensor([[1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        ...,
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0]])

2021-08-24 19:52:04 train.py INFO token_type_ids: tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]])

2021-08-24 19:52:04 train.py INFO labels: tensor([ 6,  9,  8,  5,  6,  4, 10,  9,  4,  9,  4,  0,  9,  7,  4,  8,  9,  8,
         5, 10,  9,  3,  9,  4,  6,  9,  0, 10, 10,  6,  0,  7,  7,  9,  8, 10,
        10,  7,  8,  5,  7,  5,  3,  0,  0,  3,  6,  3,  3, 10,  6,  7,  0,  5,
        10,  6,  5,  8, 10,  0,  5, 10,  5,  0])

2021-08-24 19:52:04 train.py INFO labels shape: torch.Size([64])

2021-08-24 19:52:18 train.py INFO evaluate....................
2021-08-24 19:52:26 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9762    0.9712    0.9737       591
         皮肤科     0.8729    0.9133    0.8927       173
          其它     0.5730    0.6543    0.6110       162
          妇科     0.8308    0.7500    0.7883        72
       心血管内科     0.9074    0.7313    0.8099        67
        耳鼻喉科     0.6230    0.7451    0.6786        51
        消化内科     0.8523    0.8929    0.8721        84
        小儿内科     0.8072    0.5877    0.6802       114
        呼吸内科     0.7434    0.8248    0.7820       137
        内分泌科     0.7200    0.8571    0.7826        63
        神经内科     0.8542    0.6212    0.7193        66

    accuracy                         0.8411      1580
   macro avg     0.7964    0.7772    0.7809      1580
weighted avg     0.8483    0.8411    0.8413      1580

2021-08-24 19:52:26 train.py INFO Confusion matrix: 
[[574   6   4   4   0   1   0   0   0   2   0]
 [  5 158   5   3   0   0   0   0   1   1   0]
 [  5  14 106   3   2   3   7   5   6   8   3]
 [  2   1  14  54   0   0   0   0   0   1   0]
 [  1   0   4   0  49   1   1   0   2   8   1]
 [  0   0   5   0   0  38   0   0   7   0   1]
 [  0   0   7   0   0   0  75   0   2   0   0]
 [  0   1  12   1   0   9   3  67  20   0   1]
 [  0   0   4   0   0   8   1  10 113   0   1]
 [  1   0   7   0   0   0   0   1   0  54   0]
 [  0   1  17   0   3   1   1   0   1   1  41]]
2021-08-24 19:52:26 train.py INFO saving model..........
2021-08-24 19:52:28 train.py INFO Iter:6500, Train Loss:0.0182, Train Acc:89.06%, Val Loss:0.0874, Val Acc:84.11%, Time:1:38:45 *
2021-08-24 19:53:50 train.py INFO evaluate....................
2021-08-24 19:53:58 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9791    0.9492    0.9639       591
         皮肤科     0.7653    0.9422    0.8446       173
          其它     0.6393    0.4815    0.5493       162
          妇科     0.6593    0.8333    0.7362        72
       心血管内科     0.9091    0.5970    0.7207        67
        耳鼻喉科     0.6667    0.7059    0.6857        51
        消化内科     0.8409    0.8810    0.8605        84
        小儿内科     0.7000    0.6754    0.6875       114
        呼吸内科     0.6914    0.8175    0.7492       137
        内分泌科     0.6883    0.8413    0.7571        63
        神经内科     0.8043    0.5606    0.6607        66

    accuracy                         0.8171      1580
   macro avg     0.7585    0.7532    0.7469      1580
weighted avg     0.8219    0.8171    0.8137      1580

2021-08-24 19:53:58 train.py INFO Confusion matrix: 
[[561   8   3  16   0   1   0   0   0   2   0]
 [  4 163   1   3   0   1   1   0   0   0   0]
 [  4  24  78   6   1   6   9   8  13  10   3]
 [  0   2   7  60   0   0   0   1   0   2   0]
 [  3   1   5   3  40   0   0   0   4   8   3]
 [  0   1   4   0   0  36   0   2   7   0   1]
 [  0   0   6   0   0   0  74   0   4   0   0]
 [  0   4   5   1   0   4   2  77  19   1   1]
 [  0   0   0   1   0   3   1  20 112   0   0]
 [  1   1   4   1   0   1   0   1   0  53   1]
 [  0   9   9   0   3   2   1   1   3   1  37]]
2021-08-24 19:53:58 train.py INFO Iter:6600, Train Loss:0.0268, Train Acc:93.75%, Val Loss:0.1312, Val Acc:81.71%, Time:1:40:15 
2021-08-24 19:55:23 train.py INFO evaluate....................
2021-08-24 19:55:31 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9554    0.9780    0.9666       591
         皮肤科     0.8800    0.8902    0.8851       173
          其它     0.5956    0.5000    0.5436       162
          妇科     0.8596    0.6806    0.7597        72
       心血管内科     0.8333    0.7463    0.7874        67
        耳鼻喉科     0.7561    0.6078    0.6739        51
        消化内科     0.7379    0.9048    0.8128        84
        小儿内科     0.8000    0.6316    0.7059       114
        呼吸内科     0.7215    0.8321    0.7729       137
        内分泌科     0.7200    0.8571    0.7826        63
        神经内科     0.6500    0.7879    0.7123        66

    accuracy                         0.8297      1580
   macro avg     0.7736    0.7651    0.7639      1580
weighted avg     0.8291    0.8297    0.8261      1580

2021-08-24 19:55:31 train.py INFO Confusion matrix: 
[[578   3   3   3   0   0   1   0   0   2   1]
 [  9 154   6   2   0   0   1   0   1   0   0]
 [  9   8  81   2   6   3  16   4   9   8  16]
 [  5   1  13  49   0   0   0   0   0   3   1]
 [  1   0   2   0  50   1   0   0   2   8   3]
 [  0   1   9   0   0  31   0   1   8   0   1]
 [  0   0   4   0   0   0  76   0   4   0   0]
 [  1   5   4   1   1   2   5  72  20   0   3]
 [  1   1   1   0   0   4   1  13 114   0   2]
 [  1   1   5   0   0   0   1   0   0  54   1]
 [  0   1   8   0   3   0   2   0   0   0  52]]
2021-08-24 19:55:31 train.py INFO Iter:6700, Train Loss:0.0554, Train Acc:87.50%, Val Loss:0.1060, Val Acc:82.97%, Time:1:41:47 
2021-08-24 19:56:53 train.py INFO evaluate....................
2021-08-24 19:57:01 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9156    0.9915    0.9521       591
         皮肤科     0.9152    0.8728    0.8935       173
          其它     0.7011    0.3765    0.4900       162
          妇科     0.8485    0.7778    0.8116        72
       心血管内科     0.8387    0.7761    0.8062        67
        耳鼻喉科     0.7556    0.6667    0.7083        51
        消化内科     0.8642    0.8333    0.8485        84
        小儿内科     0.7059    0.6316    0.6667       114
        呼吸内科     0.6393    0.8540    0.7313       137
        内分泌科     0.6628    0.9048    0.7651        63
        神经内科     0.7778    0.7424    0.7597        66

    accuracy                         0.8259      1580
   macro avg     0.7841    0.7661    0.7666      1580
weighted avg     0.8244    0.8259    0.8171      1580

2021-08-24 19:57:01 train.py INFO Confusion matrix: 
[[586   0   0   3   0   0   0   0   0   1   1]
 [ 11 151   3   3   0   0   0   0   3   1   1]
 [ 26   8  61   4   3   3   8  10  14  18   7]
 [  6   2   3  56   0   0   0   3   0   2   0]
 [  2   1   0   0  52   0   0   0   3   7   2]
 [  0   0   3   0   0  34   0   2  11   0   1]
 [  3   0   7   0   0   0  70   0   4   0   0]
 [  1   1   3   0   1   4   2  72  29   0   1]
 [  1   0   0   0   0   4   1  13 117   0   1]
 [  2   1   2   0   0   0   0   1   0  57   0]
 [  2   1   5   0   6   0   0   1   2   0  49]]
2021-08-24 19:57:01 train.py INFO Iter:6800, Train Loss:0.0033, Train Acc:93.75%, Val Loss:0.1188, Val Acc:82.59%, Time:1:43:17 
2021-08-24 19:58:24 train.py INFO evaluate....................
2021-08-24 19:58:32 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9796    0.9729    0.9762       591
         皮肤科     0.8889    0.8786    0.8837       173
          其它     0.6149    0.5617    0.5871       162
          妇科     0.6739    0.8611    0.7561        72
       心血管内科     0.7969    0.7612    0.7786        67
        耳鼻喉科     0.8378    0.6078    0.7045        51
        消化内科     0.8000    0.8571    0.8276        84
        小儿内科     0.7590    0.5526    0.6396       114
        呼吸内科     0.6595    0.8905    0.7578       137
        内分泌科     0.8125    0.8254    0.8189        63
        神经内科     0.7966    0.7121    0.7520        66

    accuracy                         0.8342      1580
   macro avg     0.7836    0.7710    0.7711      1580
weighted avg     0.8385    0.8342    0.8322      1580

2021-08-24 19:58:32 train.py INFO Confusion matrix: 
[[575   6   1   7   0   0   0   0   0   1   1]
 [  4 152   8   6   0   0   1   0   1   0   1]
 [  5  10  91  10   7   3  11   7  10   4   4]
 [  2   0   6  62   0   0   0   1   0   1   0]
 [  0   0   3   2  51   0   0   1   3   5   2]
 [  0   0   8   0   0  31   0   1  10   0   1]
 [  0   0   7   0   0   0  72   1   4   0   0]
 [  0   2   8   1   1   0   4  63  34   0   1]
 [  0   0   2   1   0   3   1   7 122   0   1]
 [  1   0   5   2   0   0   1   1   0  52   1]
 [  0   1   9   1   5   0   0   1   1   1  47]]
2021-08-24 19:58:32 train.py INFO Iter:6900, Train Loss:0.0165, Train Acc:90.62%, Val Loss:0.0892, Val Acc:83.42%, Time:1:44:48 
2021-08-24 19:59:54 train.py INFO evaluate....................
2021-08-24 20:00:03 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9744    0.9645    0.9694       591
         皮肤科     0.8757    0.8960    0.8857       173
          其它     0.5104    0.6049    0.5537       162
          妇科     0.8000    0.7778    0.7887        72
       心血管内科     0.9200    0.6866    0.7863        67
        耳鼻喉科     0.7021    0.6471    0.6735        51
        消化内科     0.8395    0.8095    0.8242        84
        小儿内科     0.8000    0.4211    0.5517       114
        呼吸内科     0.6886    0.8394    0.7566       137
        内分泌科     0.8545    0.7460    0.7966        63
        神经内科     0.5625    0.8182    0.6667        66

    accuracy                         0.8165      1580
   macro avg     0.7753    0.7465    0.7503      1580
weighted avg     0.8304    0.8165    0.8162      1580

2021-08-24 20:00:03 train.py INFO Confusion matrix: 
[[570   7   7   5   0   0   0   0   0   1   1]
 [  4 155   7   4   0   0   0   0   0   0   3]
 [  5  11  98   3   1   5   8   3   4   4  20]
 [  1   1  14  56   0   0   0   0   0   0   0]
 [  2   0   3   0  46   1   0   1   2   3   9]
 [  0   0   8   0   0  33   0   1   8   0   1]
 [  1   0  11   0   0   0  68   0   3   0   1]
 [  0   2  21   1   0   3   3  48  35   0   1]
 [  1   0   5   0   0   5   1   7 115   0   3]
 [  1   0  11   1   0   0   0   0   0  47   3]
 [  0   1   7   0   3   0   1   0   0   0  54]]
2021-08-24 20:00:03 train.py INFO Iter:7000, Train Loss:0.0212, Train Acc:93.75%, Val Loss:0.0952, Val Acc:81.65%, Time:1:46:19 
2021-08-24 20:01:22 train.py INFO evaluate....................
2021-08-24 20:01:30 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9633    0.9780    0.9706       591
         皮肤科     0.8196    0.9191    0.8665       173
          其它     0.5306    0.6420    0.5810       162
          妇科     0.7973    0.8194    0.8082        72
       心血管内科     0.6522    0.8955    0.7547        67
        耳鼻喉科     0.5323    0.6471    0.5841        51
        消化内科     0.8592    0.7262    0.7871        84
        小儿内科     0.5921    0.7895    0.6767       114
        呼吸内科     0.8947    0.3723    0.5258       137
        内分泌科     0.9020    0.7302    0.8070        63
        神经内科     0.8710    0.4091    0.5567        66

    accuracy                         0.8025      1580
   macro avg     0.7649    0.7208    0.7199      1580
weighted avg     0.8240    0.8025    0.7969      1580

2021-08-24 20:01:30 train.py INFO Confusion matrix: 
[[578   6   3   3   0   0   0   0   0   0   1]
 [  4 159   6   4   0   0   0   0   0   0   0]
 [  6  17 104   5   7   3   7   8   0   4   1]
 [  3   1   7  59   0   0   0   2   0   0   0]
 [  2   0   2   0  60   1   0   1   0   1   0]
 [  0   2  13   0   0  33   0   1   1   0   1]
 [  1   0  14   0   1   0  61   6   1   0   0]
 [  0   2   8   1   1   6   2  90   4   0   0]
 [  3   4  16   1   4  19   1  37  51   0   1]
 [  1   1   4   1   7   0   0   3   0  46   0]
 [  2   2  19   0  12   0   0   4   0   0  27]]
2021-08-24 20:01:30 train.py INFO Iter:7100, Train Loss:0.0272, Train Acc:87.50%, Val Loss:0.1431, Val Acc:80.25%, Time:1:47:47 
2021-08-24 20:02:53 train.py INFO evaluate....................
2021-08-24 20:03:01 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9585    0.9780    0.9682       591
         皮肤科     0.7707    0.9133    0.8360       173
          其它     0.6032    0.4691    0.5278       162
          妇科     0.8194    0.8194    0.8194        72
       心血管内科     0.9259    0.7463    0.8264        67
        耳鼻喉科     0.7255    0.7255    0.7255        51
        消化内科     0.8462    0.7857    0.8148        84
        小儿内科     0.6957    0.7018    0.6987       114
        呼吸内科     0.8077    0.7664    0.7865       137
        内分泌科     0.8125    0.8254    0.8189        63
        神经内科     0.6341    0.7879    0.7027        66

    accuracy                         0.8310      1580
   macro avg     0.7818    0.7744    0.7750      1580
weighted avg     0.8289    0.8310    0.8275      1580

2021-08-24 20:03:01 train.py INFO Confusion matrix: 
[[578   6   2   3   0   0   0   0   0   1   1]
 [  9 158   3   3   0   0   0   0   0   0   0]
 [  7  26  76   5   2   3   7   8   5   7  16]
 [  3   4   4  59   0   0   0   2   0   0   0]
 [  2   1   2   0  50   1   0   1   1   4   5]
 [  0   2   2   0   0  37   0   1   8   0   1]
 [  0   0  16   0   0   0  66   0   2   0   0]
 [  1   5   7   1   0   5   4  80   9   0   2]
 [  1   1   2   0   0   4   1  21 105   0   2]
 [  1   1   4   1   0   0   0   1   0  52   3]
 [  1   1   8   0   2   1   0   1   0   0  52]]
2021-08-24 20:03:01 train.py INFO Iter:7200, Train Loss:0.0110, Train Acc:93.75%, Val Loss:0.0937, Val Acc:83.10%, Time:1:49:18 
2021-08-24 20:04:25 train.py INFO evaluate....................
2021-08-24 20:04:33 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9755    0.9442    0.9596       591
         皮肤科     0.9272    0.8092    0.8642       173
          其它     0.6134    0.4506    0.5196       162
          妇科     0.8194    0.8194    0.8194        72
       心血管内科     1.0000    0.4478    0.6186        67
        耳鼻喉科     0.6230    0.7451    0.6786        51
        消化内科     0.7407    0.9524    0.8333        84
        小儿内科     0.7604    0.6404    0.6952       114
        呼吸内科     0.7846    0.7445    0.7640       137
        内分泌科     0.7143    0.8730    0.7857        63
        神经内科     0.3720    0.9242    0.5304        66

    accuracy                         0.8032      1580
   macro avg     0.7573    0.7592    0.7335      1580
weighted avg     0.8355    0.8032    0.8065      1580

2021-08-24 20:04:33 train.py INFO Confusion matrix: 
[[558   6   2   4   0   0   2   0   0   3  16]
 [  4 140  10   3   0   0   1   0   0   1  14]
 [  6   5  73   4   0   5  15   4   4  11  35]
 [  2   0   6  59   0   0   1   2   0   0   2]
 [  1   0   5   0  30   1   0   1   1   7  21]
 [  0   0   3   0   0  38   0   1   5   0   4]
 [  0   0   2   0   0   0  80   0   2   0   0]
 [  0   0   9   1   0   6   5  73  16   0   4]
 [  0   0   3   1   0  11   2  14 102   0   4]
 [  1   0   2   0   0   0   1   1   0  55   3]
 [  0   0   4   0   0   0   1   0   0   0  61]]
2021-08-24 20:04:33 train.py INFO Iter:7300, Train Loss:0.0157, Train Acc:93.75%, Val Loss:0.1272, Val Acc:80.32%, Time:1:50:50 
2021-08-24 20:05:56 train.py INFO evaluate....................
2021-08-24 20:06:04 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9892    0.9323    0.9599       591
         皮肤科     0.7725    0.9422    0.8490       173
          其它     0.6381    0.4136    0.5019       162
          妇科     0.8689    0.7361    0.7970        72
       心血管内科     0.8361    0.7612    0.7969        67
        耳鼻喉科     0.8000    0.6275    0.7033        51
        消化内科     0.8554    0.8452    0.8503        84
        小儿内科     0.5470    0.8684    0.6712       114
        呼吸内科     0.7692    0.5839    0.6639       137
        内分泌科     0.6196    0.9048    0.7355        63
        神经内科     0.6353    0.8182    0.7152        66

    accuracy                         0.8089      1580
   macro avg     0.7574    0.7667    0.7495      1580
weighted avg     0.8238    0.8089    0.8067      1580

2021-08-24 20:06:04 train.py INFO Confusion matrix: 
[[551  15   6   3   0   0   0   1   1   6   8]
 [  2 163   2   2   0   0   0   0   1   2   1]
 [  3  24  67   2   5   2   9  14   7  17  12]
 [  1   3   9  53   0   0   0   3   0   3   0]
 [  0   1   1   0  51   1   0   0   2   7   4]
 [  0   3   1   0   0  32   0  11   3   0   1]
 [  0   1   5   0   0   0  71   2   5   0   0]
 [  0   0   3   1   1   2   2  99   4   0   2]
 [  0   0   3   0   0   3   1  49  80   0   1]
 [  0   0   3   0   0   0   0   1   0  57   2]
 [  0   1   5   0   4   0   0   1   1   0  54]]
2021-08-24 20:06:04 train.py INFO Iter:7400, Train Loss:0.0180, Train Acc:90.62%, Val Loss:0.1433, Val Acc:80.89%, Time:1:52:20 
2021-08-24 20:07:26 train.py INFO evaluate....................
2021-08-24 20:07:34 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9425    0.9712    0.9567       591
         皮肤科     0.8701    0.8902    0.8800       173
          其它     0.6277    0.3642    0.4609       162
          妇科     0.8333    0.7639    0.7971        72
       心血管内科     0.5484    0.7612    0.6375        67
        耳鼻喉科     0.5256    0.8039    0.6357        51
        消化内科     0.7835    0.9048    0.8398        84
        小儿内科     0.8333    0.4386    0.5747       114
        呼吸内科     0.6748    0.8029    0.7333       137
        内分泌科     0.6790    0.8730    0.7639        63
        神经内科     0.7258    0.6818    0.7031        66

    accuracy                         0.8038      1580
   macro avg     0.7313    0.7505    0.7257      1580
weighted avg     0.8081    0.8038    0.7949      1580

2021-08-24 20:07:34 train.py INFO Confusion matrix: 
[[574   4   4   5   1   0   0   0   0   2   1]
 [ 11 154   1   2   1   0   1   0   1   2   0]
 [ 14  12  59   3  22   7  15   2   8  11   9]
 [  3   1   8  55   0   0   0   0   0   5   0]
 [  2   0   2   0  51   1   0   0   4   5   2]
 [  0   1   1   0   1  41   0   0   6   0   1]
 [  0   0   3   0   1   0  76   0   4   0   0]
 [  0   3   5   1   2  17   4  50  29   1   2]
 [  1   1   3   0   2  10   1   8 110   0   1]
 [  2   0   3   0   2   0   0   0   0  55   1]
 [  2   1   5   0  10   2   0   0   1   0  45]]
2021-08-24 20:07:34 train.py INFO Iter:7500, Train Loss:0.1055, Train Acc:81.25%, Val Loss:0.1192, Val Acc:80.38%, Time:1:53:50 
2021-08-24 20:08:55 train.py INFO evaluate....................
2021-08-24 20:09:03 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9539    0.9814    0.9675       591
         皮肤科     0.8701    0.8902    0.8800       173
          其它     0.5758    0.5864    0.5810       162
          妇科     0.8333    0.7639    0.7971        72
       心血管内科     0.9800    0.7313    0.8376        67
        耳鼻喉科     0.6111    0.6471    0.6286        51
        消化内科     0.7755    0.9048    0.8352        84
        小儿内科     0.6797    0.7632    0.7190       114
        呼吸内科     0.8142    0.6715    0.7360       137
        内分泌科     0.7761    0.8254    0.8000        63
        神经内科     0.7222    0.5909    0.6500        66

    accuracy                         0.8304      1580
   macro avg     0.7811    0.7596    0.7665      1580
weighted avg     0.8324    0.8304    0.8291      1580

2021-08-24 20:09:03 train.py INFO Confusion matrix: 
[[580   1   5   2   0   0   0   0   0   2   1]
 [ 10 154   3   5   0   0   1   0   0   0   0]
 [  8  13  95   3   0   3  16   9   5   6   4]
 [  4   1  10  55   0   0   1   1   0   0   0]
 [  2   0   4   0  49   1   0   1   1   6   3]
 [  1   1   9   0   0  33   0   5   1   0   1]
 [  1   0   4   0   0   0  76   0   3   0   0]
 [  0   3   7   1   0   2   2  87  11   0   1]
 [  1   1   3   0   0  15   1  20  92   0   4]
 [  1   0   8   0   0   0   0   1   0  52   1]
 [  0   3  17   0   1   0   1   4   0   1  39]]
2021-08-24 20:09:03 train.py INFO Iter:7600, Train Loss:0.0181, Train Acc:89.06%, Val Loss:0.1086, Val Acc:83.04%, Time:1:55:20 
2021-08-24 20:10:25 train.py INFO evaluate....................
2021-08-24 20:10:33 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9744    0.9645    0.9694       591
         皮肤科     0.8957    0.8439    0.8690       173
          其它     0.6446    0.4815    0.5512       162
          妇科     0.7273    0.8889    0.8000        72
       心血管内科     0.7429    0.7761    0.7591        67
        耳鼻喉科     0.8889    0.4706    0.6154        51
        消化内科     0.6639    0.9643    0.7864        84
        小儿内科     0.7703    0.5000    0.6064       114
        呼吸内科     0.6106    0.9270    0.7362       137
        内分泌科     0.7606    0.8571    0.8060        63
        神经内科     0.8431    0.6515    0.7350        66

    accuracy                         0.8203      1580
   macro avg     0.7747    0.7569    0.7486      1580
weighted avg     0.8313    0.8203    0.8150      1580

2021-08-24 20:10:33 train.py INFO Confusion matrix: 
[[570   5   1  11   2   0   0   0   0   1   1]
 [  7 146  10   3   1   0   4   0   1   1   0]
 [  4   9  78   6   9   1  26   7  13   6   3]
 [  1   0   5  64   0   0   0   1   0   1   0]
 [  1   0   2   0  52   0   0   1   5   5   1]
 [  0   0   6   0   0  24   0   2  18   0   1]
 [  0   0   1   0   0   0  81   0   2   0   0]
 [  0   1   5   1   1   1   6  57  41   0   1]
 [  0   0   1   1   0   1   2   4 127   0   1]
 [  1   0   4   2   0   0   1   1   0  54   0]
 [  1   2   8   0   5   0   2   1   1   3  43]]
2021-08-24 20:10:33 train.py INFO Iter:7700, Train Loss:0.0032, Train Acc:93.75%, Val Loss:0.1143, Val Acc:82.03%, Time:1:56:50 
2021-08-24 20:11:57 train.py INFO evaluate....................
2021-08-24 20:12:05 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9500    0.9645    0.9572       591
         皮肤科     0.8902    0.8902    0.8902       173
          其它     0.6535    0.5123    0.5744       162
          妇科     0.7722    0.8472    0.8079        72
       心血管内科     0.7692    0.7463    0.7576        67
        耳鼻喉科     0.7826    0.7059    0.7423        51
        消化内科     0.8462    0.7857    0.8148        84
        小儿内科     0.6881    0.6579    0.6726       114
        呼吸内科     0.6832    0.8029    0.7383       137
        内分泌科     0.7467    0.8889    0.8116        63
        神经内科     0.7463    0.7576    0.7519        66

    accuracy                         0.8297      1580
   macro avg     0.7753    0.7781    0.7744      1580
weighted avg     0.8277    0.8297    0.8269      1580

2021-08-24 20:12:05 train.py INFO Confusion matrix: 
[[570   5   6   5   0   0   0   0   0   4   1]
 [ 10 154   3   4   0   0   0   1   0   1   0]
 [ 12  11  83   5   8   2   7  10   9   8   7]
 [  1   0   8  61   0   0   0   2   0   0   0]
 [  1   1   1   0  50   1   0   1   3   5   4]
 [  0   0   3   0   0  36   0   3   8   0   1]
 [  3   0   9   0   1   0  66   0   4   0   1]
 [  0   1   2   2   0   2   4  75  26   1   1]
 [  1   0   2   1   1   5   1  15 110   0   1]
 [  1   0   2   1   1   0   0   1   0  56   1]
 [  1   1   8   0   4   0   0   1   1   0  50]]
2021-08-24 20:12:05 train.py INFO Iter:7800, Train Loss:0.0242, Train Acc:89.06%, Val Loss:0.0911, Val Acc:82.97%, Time:1:58:21 
2021-08-24 20:13:29 train.py INFO evaluate....................
2021-08-24 20:13:37 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9742    0.9594    0.9668       591
         皮肤科     0.8333    0.9249    0.8767       173
          其它     0.5450    0.6358    0.5869       162
          妇科     0.8261    0.7917    0.8085        72
       心血管内科     0.8361    0.7612    0.7969        67
        耳鼻喉科     0.7391    0.6667    0.7010        51
        消化内科     0.8375    0.7976    0.8171        84
        小儿内科     0.7614    0.5877    0.6634       114
        呼吸内科     0.7320    0.8175    0.7724       137
        内分泌科     0.8980    0.6984    0.7857        63
        神经内科     0.7042    0.7576    0.7299        66

    accuracy                         0.8304      1580
   macro avg     0.7897    0.7635    0.7732      1580
weighted avg     0.8366    0.8304    0.8311      1580

2021-08-24 20:13:37 train.py INFO Confusion matrix: 
[[567   7  11   4   0   0   0   1   0   0   1]
 [  6 160   5   2   0   0   0   0   0   0   0]
 [  5  15 103   4   3   3   8   6   6   2   7]
 [  1   3  10  57   0   0   0   1   0   0   0]
 [  1   1   3   0  51   1   0   1   1   3   5]
 [  0   0   9   0   0  34   0   1   6   0   1]
 [  1   0  12   0   1   0  67   0   3   0   0]
 [  0   2  13   1   1   1   3  67  25   0   1]
 [  0   0   4   0   1   7   1   9 112   0   3]
 [  0   1  10   1   2   0   0   2   0  44   3]
 [  1   3   9   0   2   0   1   0   0   0  50]]
2021-08-24 20:13:37 train.py INFO Iter:7900, Train Loss:0.0408, Train Acc:90.62%, Val Loss:0.0962, Val Acc:83.04%, Time:1:59:53 
2021-08-24 20:15:00 train.py INFO evaluate....................
2021-08-24 20:15:08 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9828    0.9662    0.9744       591
         皮肤科     0.8511    0.9249    0.8864       173
          其它     0.5519    0.6235    0.5855       162
          妇科     0.9074    0.6806    0.7778        72
       心血管内科     0.8793    0.7612    0.8160        67
        耳鼻喉科     0.6610    0.7647    0.7091        51
        消化内科     0.8514    0.7500    0.7975        84
        小儿内科     0.7368    0.6140    0.6699       114
        呼吸内科     0.7241    0.7664    0.7447       137
        内分泌科     0.7500    0.8571    0.8000        63
        神经内科     0.7324    0.7879    0.7591        66

    accuracy                         0.8323      1580
   macro avg     0.7844    0.7724    0.7746      1580
weighted avg     0.8391    0.8323    0.8334      1580

2021-08-24 20:15:08 train.py INFO Confusion matrix: 
[[571  10   6   2   0   0   0   0   0   1   1]
 [  3 160   9   0   0   0   0   0   0   0   1]
 [  5  13 101   2   3   3   7   7   6   8   7]
 [  1   1  17  49   0   0   0   1   1   2   0]
 [  0   1   3   0  51   1   0   1   1   6   3]
 [  0   0   7   0   0  39   0   0   4   0   1]
 [  1   0  15   0   1   0  63   1   3   0   0]
 [  0   1   8   1   0   4   2  70  25   1   2]
 [  0   0   2   0   1  12   1  14 105   0   2]
 [  0   0   6   0   0   0   0   1   0  54   2]
 [  0   2   9   0   2   0   1   0   0   0  52]]
2021-08-24 20:15:08 train.py INFO Iter:8000, Train Loss:0.0114, Train Acc:93.75%, Val Loss:0.0883, Val Acc:83.23%, Time:2:01:25 
2021-08-24 20:16:31 train.py INFO evaluate....................
2021-08-24 20:16:39 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9772    0.9425    0.9595       591
         皮肤科     0.9453    0.6994    0.8040       173
          其它     0.4925    0.6111    0.5455       162
          妇科     0.6737    0.8889    0.7665        72
       心血管内科     0.9600    0.7164    0.8205        67
        耳鼻喉科     0.6977    0.5882    0.6383        51
        消化内科     0.8594    0.6548    0.7432        84
        小儿内科     0.5621    0.8333    0.6714       114
        呼吸内科     0.8077    0.6131    0.6971       137
        内分泌科     0.6353    0.8571    0.7297        63
        神经内科     0.7324    0.7879    0.7591        66

    accuracy                         0.7968      1580
   macro avg     0.7585    0.7448    0.7395      1580
weighted avg     0.8257    0.7968    0.8024      1580

2021-08-24 20:16:39 train.py INFO Confusion matrix: 
[[557   3   9  13   1   0   0   4   0   3   1]
 [  6 121  31   7   1   0   0   2   0   4   1]
 [  5   3  99   8   0   3   5  14   3  13   9]
 [  1   0   5  64   0   0   0   1   0   1   0]
 [  0   0   4   0  48   1   0   1   2   7   4]
 [  0   0  11   0   0  30   0   4   5   0   1]
 [  1   0  20   0   0   0  55   5   3   0   0]
 [  0   0   6   1   0   1   2  95   7   1   1]
 [  0   0   4   1   0   8   1  38  84   0   1]
 [  0   0   4   1   0   0   0   3   0  54   1]
 [  0   1   8   0   0   0   1   2   0   2  52]]
2021-08-24 20:16:39 train.py INFO Iter:8100, Train Loss:0.0213, Train Acc:90.62%, Val Loss:0.1575, Val Acc:79.68%, Time:2:02:56 
2021-08-24 20:18:04 train.py INFO evaluate....................
2021-08-24 20:18:12 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9647    0.9712    0.9680       591
         皮肤科     0.8720    0.8266    0.8487       173
          其它     0.6970    0.1420    0.2359       162
          妇科     0.7500    0.7917    0.7703        72
       心血管内科     0.5930    0.7612    0.6667        67
        耳鼻喉科     0.8000    0.3137    0.4507        51
        消化内科     0.6552    0.9048    0.7600        84
        小儿内科     0.6748    0.7281    0.7004       114
        呼吸内科     0.4216    0.8248    0.5580       137
        内分泌科     0.7755    0.6032    0.6786        63
        神经内科     0.7800    0.5909    0.6724        66

    accuracy                         0.7677      1580
   macro avg     0.7258    0.6780    0.6645      1580
weighted avg     0.7965    0.7677    0.7516      1580

2021-08-24 20:18:12 train.py INFO Confusion matrix: 
[[574   5   1   5   2   0   0   0   1   2   1]
 [  8 143   1   5   2   0   4   2   6   0   2]
 [  8  13  23   6  13   1  27  10  53   5   3]
 [  4   0   1  57   3   0   0   3   4   0   0]
 [  1   1   0   0  51   0   0   1   9   4   0]
 [  0   0   1   0   0  16   0   1  32   0   1]
 [  0   0   0   0   0   0  76   0   8   0   0]
 [  0   0   0   1   1   2   4  83  22   0   1]
 [  0   0   0   1   0   1   1  20 113   0   1]
 [  0   0   5   1   8   0   2   2   5  38   2]
 [  0   2   1   0   6   0   2   1  15   0  39]]
2021-08-24 20:18:12 train.py INFO Iter:8200, Train Loss:0.0383, Train Acc:90.62%, Val Loss:0.1926, Val Acc:76.77%, Time:2:04:28 
2021-08-24 20:19:34 train.py INFO evaluate....................
2021-08-24 20:19:42 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9570    0.9797    0.9682       591
         皮肤科     0.8245    0.8960    0.8587       173
          其它     0.6972    0.4691    0.5609       162
          妇科     0.8088    0.7639    0.7857        72
       心血管内科     0.8750    0.7313    0.7967        67
        耳鼻喉科     0.7170    0.7451    0.7308        51
        消化内科     0.8280    0.9167    0.8701        84
        小儿内科     0.7157    0.6404    0.6759       114
        呼吸内科     0.7333    0.8029    0.7666       137
        内分泌科     0.6429    0.8571    0.7347        63
        神经内科     0.7083    0.7727    0.7391        66

    accuracy                         0.8335      1580
   macro avg     0.7734    0.7795    0.7716      1580
weighted avg     0.8313    0.8335    0.8285      1580

2021-08-24 20:19:42 train.py INFO Confusion matrix: 
[[579   7   0   2   0   0   0   0   0   2   1]
 [  5 155   3   4   0   0   0   0   1   2   3]
 [ 11  17  76   5   3   3  12   7   6  13   9]
 [  6   3   4  55   1   0   0   1   0   1   1]
 [  2   2   1   0  49   0   0   0   4   7   2]
 [  0   0   2   0   0  38   0   1   9   0   1]
 [  1   0   5   0   0   0  77   0   1   0   0]
 [  0   2   7   1   0   6   3  73  19   2   1]
 [  0   0   0   1   1   6   1  16 110   1   1]
 [  1   0   5   0   0   0   0   1   0  54   2]
 [  0   2   6   0   2   0   0   3   0   2  51]]
2021-08-24 20:19:42 train.py INFO Iter:8300, Train Loss:0.0044, Train Acc:93.75%, Val Loss:0.0942, Val Acc:83.35%, Time:2:05:59 
2021-08-24 20:21:06 train.py INFO evaluate....................
2021-08-24 20:21:14 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9794    0.9645    0.9719       591
         皮肤科     0.7626    0.9653    0.8520       173
          其它     0.6154    0.5926    0.6038       162
          妇科     0.8750    0.7778    0.8235        72
       心血管内科     1.0000    0.6567    0.7928        67
        耳鼻喉科     0.7750    0.6078    0.6813        51
        消化内科     0.8068    0.8452    0.8256        84
        小儿内科     0.7407    0.7018    0.7207       114
        呼吸内科     0.7692    0.8029    0.7857       137
        内分泌科     0.7639    0.8730    0.8148        63
        神经内科     0.7812    0.7576    0.7692        66

    accuracy                         0.8418      1580
   macro avg     0.8063    0.7768    0.7856      1580
weighted avg     0.8464    0.8418    0.8405      1580

2021-08-24 20:21:14 train.py INFO Confusion matrix: 
[[570  11   4   2   0   0   1   1   0   1   1]
 [  2 167   2   1   0   0   0   0   1   0   0]
 [  5  27  96   3   0   3   8   5   6   5   4]
 [  4   5   5  56   0   0   1   1   0   0   0]
 [  1   1   4   0  44   1   1   0   3   7   5]
 [  0   1   9   0   0  31   0   4   5   0   1]
 [  0   0  10   0   0   0  71   0   3   0   0]
 [  0   2  10   1   0   0   3  80  15   2   1]
 [  0   2   1   0   0   4   2  16 110   0   2]
 [  0   1   5   1   0   0   0   1   0  55   0]
 [  0   2  10   0   0   1   1   0   0   2  50]]
2021-08-24 20:21:14 train.py INFO saving model..........
2021-08-24 20:21:16 train.py INFO Iter:8400, Train Loss:0.0037, Train Acc:93.75%, Val Loss:0.1055, Val Acc:84.18%, Time:2:07:33 *
2021-08-24 20:22:39 train.py INFO evaluate....................
2021-08-24 20:22:47 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9586    0.9797    0.9690       591
         皮肤科     0.9301    0.7688    0.8418       173
          其它     0.7053    0.4136    0.5214       162
          妇科     0.8243    0.8472    0.8356        72
       心血管内科     0.7761    0.7761    0.7761        67
        耳鼻喉科     0.6364    0.6863    0.6604        51
        消化内科     0.8214    0.8214    0.8214        84
        小儿内科     0.9216    0.4123    0.5697       114
        呼吸内科     0.6308    0.8978    0.7410       137
        内分泌科     0.5714    0.8889    0.6957        63
        神经内科     0.4912    0.8485    0.6222        66

    accuracy                         0.8089      1580
   macro avg     0.7516    0.7582    0.7322      1580
weighted avg     0.8319    0.8089    0.8032      1580

2021-08-24 20:22:47 train.py INFO Confusion matrix: 
[[579   4   0   2   1   0   0   0   0   2   3]
 [  9 133   3   6   2   1   1   0   1   9   8]
 [  8   6  67   4   4   5  10   2   8  19  29]
 [  5   0   4  61   0   0   0   0   1   1   0]
 [  1   0   1   0  52   0   0   0   1   8   4]
 [  0   0   1   0   0  35   0   0  13   0   2]
 [  1   0   8   0   0   0  69   0   5   0   1]
 [  0   0   3   1   1   9   3  47  43   2   5]
 [  1   0   1   0   3   4   1   2 123   0   2]
 [  0   0   3   0   0   0   0   0   0  56   4]
 [  0   0   4   0   4   1   0   0   0   1  56]]
2021-08-24 20:22:47 train.py INFO Iter:8500, Train Loss:0.0157, Train Acc:92.19%, Val Loss:0.1360, Val Acc:80.89%, Time:2:09:03 
2021-08-24 20:24:09 train.py INFO evaluate....................
2021-08-24 20:24:17 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9843    0.9526    0.9682       591
         皮肤科     0.8889    0.8786    0.8837       173
          其它     0.5690    0.6111    0.5893       162
          妇科     0.7821    0.8472    0.8133        72
       心血管内科     0.7969    0.7612    0.7786        67
        耳鼻喉科     0.8235    0.5490    0.6588        51
        消化内科     0.7912    0.8571    0.8229        84
        小儿内科     0.7727    0.5965    0.6733       114
        呼吸内科     0.6578    0.8978    0.7593       137
        内分泌科     0.7761    0.8254    0.8000        63
        神经内科     0.8333    0.6818    0.7500        66

    accuracy                         0.8316      1580
   macro avg     0.7887    0.7689    0.7725      1580
weighted avg     0.8404    0.8316    0.8321      1580

2021-08-24 20:24:17 train.py INFO Confusion matrix: 
[[563   6  11   5   1   0   3   0   0   1   1]
 [  4 152   7   5   2   0   0   0   1   1   1]
 [  5  10  99   5   6   2  12   5   8   7   3]
 [  0   0   9  61   0   0   0   2   0   0   0]
 [  0   1   4   0  51   0   0   0   3   6   2]
 [  0   0   8   0   0  28   0   1  13   0   1]
 [  0   0   8   0   0   0  72   0   4   0   0]
 [  0   1   5   1   1   1   2  68  34   0   1]
 [  0   0   1   0   1   2   1   9 123   0   0]
 [  0   0   9   1   0   0   0   1   0  52   0]
 [  0   1  13   0   2   1   1   2   1   0  45]]
2021-08-24 20:24:17 train.py INFO Iter:8600, Train Loss:0.0104, Train Acc:92.19%, Val Loss:0.1105, Val Acc:83.16%, Time:2:10:34 
2021-08-24 20:24:53 train.py INFO Epoch [5/5]
2021-08-24 20:24:53 train.py INFO tokens: [['[CLS]', '孩', '子', '九', '岁', '尿', '床', '小', '儿', '尿', '床', '[SEP]'], ['[CLS]', '子', '宫', '下', '垂', '度', '怎', '么', '回', '事', '产', '后', '42', '天', '仔', '细', '检', '查', '医', '生', '说', '子', '宫', '下', '垂', '度', '66', '天', '探', '进', '阴', '道', '厘', '米', '约', '莫', '摸', '宫', '颈', '弯', '曲', '康', '复', '做', '盆', '底', '肌', '救', '治', '[SEP]'], ['[CLS]', '小', '孩', '儿', '中', '耳', '炎', '听', '不', '清', '说', '话', '治', '疗', '我', '家', '女', '宝', '岁', '几', '天', '孩', '子', '说', '耳', '朵', '痒', '疼', '早', '上', '耳', '屎', '黄', '食', '欲', '不', '好', '嗓', '子', '舒', '服', '请', '问', '小', '孩', '儿', '中', '耳', '炎', '听', '不', '清', '说', '话', '治', '疗', '[SEP]'], ['[CLS]', '昨', '天', '找', '您', '开', '方', '我', '需', '要', '一', '个', '月', '的', '大', '扶', '康', '用', '量', '我', '们', '这', '边', '医', '院', '说', '一', '天', '三', '颗', '要', '一', '个', '月', '的', '用', '量', '昨', '天', '您', '给', '我', '开', '了', '一', '颗', '量', '不', '够', '[SEP]'], ['[CLS]', '女', '性', '不', '孕', '危', '害', '小', '腹', '隐', '隐', '舒', '服', '年', '怀', '上', '真', '的', '生', '育', '着', '急', '请', '问', '女', '性', '不', '孕', '危', '害', '[SEP]'], ['[CLS]', '胃', '溃', '疡', '有', '没', '有', '癌', '变', '症', '状', '您', '好', '病', '人', '拉', '肚', '子', '喝', '奶', '拉', '肚', '子', '胃', '疼', '胃', '酸', '喝', '牛', '奶', '喝', '羊', '奶', '拉', '肚', '子', '喝', '豆', '浆', '更', '好', '三', '年', '前', '[SEP]'], ['[CLS]', '高', '血', '压', '病', '史', '七', '年', '治', '疗', '高', '血', '压', '病', '史', '七', '年', '二', '型', '糖', '尿', '病', '五', '年', '双', '目', '白', '内', '障', '五', '年', '做', '过', '冠', '脉', '支', '架', '术', '患', '者', '营', '养', '治', '疗', '原', '则', '[SEP]'], ['[CLS]', '初', '期', '女', '性', '不', '孕', '咋', '治', '女', '结', '婚', '期', '间', '避', '孕', '怀', '孕', '怎', '么', '回', '事', '不', '孕', '请', '问', '初', '期', '女', '性', '不', '孕', '咋', '治', '[SEP]'], ['[CLS]', '便', '秘', '时', '会', '重', '便', '秘', '时', '会', '重', '[SEP]'], ['[CLS]', '复', '诊', '上', '次', '医', '生', '你', '开', '了', '处', '方', '后', '忘', '记', '付', '款', '了', '麻', '烦', '再', '重', '新', '开', '进', '口', '的', '咪', '喹', '莫', '特', '（', '艾', '达', '乐', '）', '急', '[SEP]'], ['[CLS]', '高', '血', '压', '发', '现', '自', '己', '高', '血', '压', '复', '发', '想', '您', '好', '高', '血', '压', '[SEP]'], ['[CLS]', '儿', '童', '中', '耳', '炎', '耳', '朵', '痒', '诊', '治', '女', '宝', '宝', '岁', '近', '几', '天', '孩', '子', '耳', '朵', '疼', '早', '上', '发', '现', '耳', '屎', '脓', '状', '黄', '好', '像', '没', '什', '么', '食', '欲', '乏', '力', '请', '问', '儿', '童', '中', '耳', '炎', '耳', '朵', '痒', '诊', '治', '[SEP]'], ['[CLS]', '医', '生', '你', '好', '我', 'nu', '##m', '岁', '的', '时', '候', '染', '上', '了', '手', '淫', '的', '坏', '毛', '病', '基', '本', '上', '每', '天', '一', '次', '一', '直', '持', '续', '到', '去', '年', 'nu', '##m', '岁', '直', '到', '去', '年', '才', '意', '识', '到', '问', '题', '的', '严', '重', '性', '每', '次', '做', '爱', '一', '分', '钟', '就', '射', '了', '那', '快', '感', '根', '本', '控', '制', '不', '住', '啊', '而', '且', '今', '年', '勃', '起', '的', '硬', '度', '也', '不', '是', '很', '好', '了', '再', '做', '第', '二', '次', '的', '话', '更', '是', '有', '心', '无', '力', '想', '帮', '我', '诊', '断', '一', '下', '该', '怎', '么', '治', '理', '[SEP]'], ['[CLS]', '外', '阴', '痒', '白', '带', '异', '常', '外', '阴', '痒', '白', '带', '异', '常', '外', '阴', '痒', '越', '来', '越', '肿', '小', '便', '时', '沙', '疼', '[SEP]'], ['[CLS]', '小', '孩', '扁', '桃', '体', '炎', '难', '受', '治', '疗', '女', '宝', '宝', '岁', '说', '话', '时', '嗓', '子', '疼', '发', '现', '说', '话', '声', '音', '沙', '哑', '高', '烧', '不', '退', '请', '问', '小', '孩', '扁', '桃', '体', '炎', '难', '受', '治', '疗', '[SEP]'], ['[CLS]', '幽', '门', '螺', '杆', '菌', '需', '服', '药', '多', '长', '时', '间', '抗', 'hp', '尿', '素', '酶', '抗', '体', '检', '验', '项', '目', '幽', '门', '螺', '杆', '菌', '快', '速', '检', '验', '阳', '性', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', '医', '生', '诊', '断', '高', '血', '压', '妈', '妈', '前', '几', '天', '治', '病', '确', '诊', '高', '血', '压', '想', '理', '解', '医', '生', '确', '诊', '高', '血', '压', '[SEP]'], ['[CLS]', '妊', '娠', '糖', '尿', '病', '产', '后', '复', '查', '媳', '妇', '怀', '上', '妊', '娠', '糖', '尿', '病', '生', '完', '娃', '复', '查', '您', '好', '妊', '娠', '糖', '尿', '病', '产', '后', '复', '查', '[SEP]'], ['[CLS]', '王', '主', '任', '您', '好', '！', '我', '是', '您', '的', '患', '者', ':', '左', '侧', '有', '卵', '巢', '囊', '肿', 'nu', '##m', '月', 'nu', '##m', '日', '（', '月', '经', '干', '净', '第', 'nu', '##m', '天', '）', '的', '时', '候', '做', '了', '宫', '腔', '镜', 'nu', '##m', '月', 'nu', '##m', '日', '拿', '病', '检', '结', '果', '【', '您', '当', '时', '说', '做', '了', '宫', '腔', '镜', '月', '经', '就', '来', '了', 'nu', '##m', '月', 'nu', '##m', '日', '拿', '结', '果', '就', '可', '以', '做', '腹', '腔', '镜', '卵', '巢', '囊', '肿', '的', '手', '术', '了', '可', '我', '今', '天', '上', '午', '（', 'nu', '##m', '月', 'nu', '##m', '日', '）', '月', '经', '刚', '来', '明', '天', '就', '可', '以', '拿', '结', '果', '了', '手', '术', '什', '么', '时', '[SEP]'], ['[CLS]', '老', '年', '型', '糖', '尿', '病', '药', '物', '治', '疗', '患', '者', '女', '69', '患', '糖', '尿', '病', '年', '最', '初', '年', '饮', '食', '运', '动', '空', '腹', '血', '糖', '控', '制', '6', '.', '8', '一', '年', '血', '糖', '控', '制', '不', '好', '空', '腹', '6', '.', '59', '.', '2', '之', '间', '餐', '后', '9', '.', '011', '之', '间', '糖', '化', '血', '红', '蛋', '白', '7', '.', '6', '想', '咨', '询', '专', '家', '应', '选', '何', '种', '降', '糖', '药', '物', '治', '疗', '[SEP]'], ['[CLS]', '颈', '椎', '可', '不', '可', '以', '高', '血', '压', '平', '常', '直', '面', '电', '脑', '培', '训', '头', '低', '颈', '椎', '测', '定', '血', '压', '高', '想', '颈', '椎', '引', '来', '高', '血', '压', '[SEP]'], ['[CLS]', '糖', '尿', '病', '治', '疗', '糖', '尿', '病', '治', '疗', '[SEP]'], ['[CLS]', '治', '疗', '糖', '尿', '病', '脑', '动', '脉', '硬', '化', '患', '轻', '微', '心', '肌', '缺', '血', '脑', '动', '脉', '硬', '化', '感', '到', '四', '肢', '无', '力', '不', '爱', '说', '话', '不', '爱', '交', '往', '用', '些', '药', '谢', '谢', '治', '疗', '情', '况', '效', '果', '住', '院', '两', '周', '恢', '复', '正', '常', '想', '得', '到', '想', '治', '疗', '药', '[SEP]'], ['[CLS]', '治', '疗', '桥', '本', '甲', '状', '腺', '炎', '医', '院', '那', '家', '正', '规', '甲', '状', '腺', '右', '叶', '混', '合', '回', '声', '包', '块', '囊', '性', '透', '声', '欠', '佳', '点', '条', '状', '强', '回', '声', '大', '小', '约', '2', '.', '9', '##x2', '.', '9', '##cm', '##cd', '##f', '结', '节', '周', '边', '血', '流', '信', '号', '颈', '两', '侧', '未', '探', '及', '肿', '大', '淋', '巴', '结', '10', '天', '前', '咳', '嗽', '咳', '痰', '发', '现', '颈', '前', '包', '块', '[SEP]'], ['[CLS]', '小', '宝', '宝', '吃', '合', '生', '元', '怎', '么', '回', '事', '孩', '子', '不', '听', '话', '哭', '闹', '不', '休', '医', '院', '检', '查', '没', '用', '请', '问', '小', '宝', '宝', '吃', '合', '生', '元', '[SEP]'], ['[CLS]', '月', '经', '经', '血', '少', '吃', '避', '孕', '药', '关', '系', '吃', '避', '孕', '药', '月', '经', '治', '疗', '经', '血', '少', '情', '况', '好', '转', '胆', '心', '病', '情', '家', '人', '忧', '心', '[SEP]'], ['[CLS]', '盆', '腔', '炎', '医', '院', '盆', '腔', '炎', '身', '体', '危', '害', '吃', '药', '[SEP]'], ['[CLS]', '小', '孩', '支', '气', '管', '炎', '10', '岁', '小', '孩', '前', '几', '天', '气', '喘', '气', '急', '症', '状', '过', '程', '持', '继', '有', '一', '周', '医', '院', '仔', '细', '检', '查', '说', '支', '气', '管', '炎', '听', '难', '过', '病', '发', '问', '小', '孩', '支', '气', '管', '炎', '[SEP]'], ['[CLS]', '胃', '疼', '胃', '胀', '吃', '不', '下', '饭', '胆', '囊', '炎', '男', '33', '胃', '疼', '胃', '胀', '吃', '不', '下', '饭', '去', '医', '院', '次', '刑', '事', '没', '病', '做', '胃', '镜', '毛', '病', '两', '三', '年', '您', '好', '专', '家', '胆', '囊', '炎', '[SEP]'], ['[CLS]', '确', '诊', '心', '包', '炎', '治', '疗', '效', '果', '胸', '腔', '积', '水', '父', '亲', '前', '段', '时', '间', '医', '院', '仔', '细', '检', '查', '诊', '断', '心', '包', '炎', '医', '生', '就', '让', '治', '疗', '复', '检', '想', '问', '下', '诊', '断', '心', '包', '炎', '治', '疗', '效', '果', '胸', '腔', '积', '水', '是', '因', '为', '心', '包', '炎', '错', '诊', '[SEP]'], ['[CLS]', '男', '乳', '腺', '增', '生', '需', '要', '枸', '橼', '酸', '托', '瑞', '米', '芬', '片', '在', '京', '东', '上', '买', '需', '要', '开', '处', '方', '咨', '询', '下', '能', '不', '能', '开', '处', '方', '[SEP]'], ['[CLS]', '癫', '痫', '病', '因', '同', '事', '上', '班', '躺', '地', '上', '抽', '搐', '口', '部', '白', '沫', '吓', '坏', '医', '院', '检', '查', '癫', '痫', '病', '想', '问', '问', '癫', '痫', '病', '因', '[SEP]'], ['[CLS]', '神', '经', '衰', '弱', '自', '我', '恢', '复', '姑', '姑', '说', '神', '经', '衰', '弱', '舒', '服', '神', '经', '衰', '弱', '自', '我', '恢', '复', '[SEP]'], ['[CLS]', '慢', '性', '前', '列', '腺', '炎', '早', '泄', '[SEP]'], ['[CLS]', '霉', '菌', '性', '阴', '道', '炎', '反', '复', '发', '作', '缓', '解', '我', '患', '霉', '菌', '性', '阴', '道', '炎', '吃', '一', '段', '时', '间', '药', '转', '好', '定', '时', '吃', '是', '因', '为', '性', '生', '活', '这', '病', '病', '发', '第', '一', '次', '病', '发', '霉', '菌', '性', '阴', '道', '炎', '反', '反', '复', '复', '复', '发', '根', '治', '[SEP]'], ['[CLS]', '甲', '亢', '病', '人', '应', '饮', '食', '腿', '脚', '麻', '木', '抖', '厉', '害', '[SEP]'], ['[CLS]', '嘴', '里', '长', '有', '血', '管', '瘤', '怎', '么', '回', '事', '前', '几', '天', '吃', '饭', '老', '公', '怎', '么', '回', '事', '说', '嘴', '巴', '里', '好', '像', '东', '西', '吃', '东', '西', '感', '觉', '特', '别', '疼', '看', '着', '老', '公', '嘴', '巴', '好', '像', '长', '血', '管', '瘤', '怎', '么', '回', '事', '[SEP]'], ['[CLS]', 'nu', '##m', '年', 'nu', '##m', '月', '有', '过', '一', '次', '脑', '梗', '无', '明', '显', '后', '遗', '症', '平', '时', '需', '要', '吃', '什', '么', '药', '进', '行', '预', '防', '[SEP]'], ['[CLS]', '水', '痘', '疫', '苗', '完', '后', '发', '烧', '[SEP]'], ['[CLS]', '小', '孩', '高', '烧', '退', '怎', '么', '回', '事', '岁', '小', '孩', '发', '烧', '五', '天', '低', '烧', '退', '吃', '药', '身', '上', '红', '斑', '治', '疗', '情', '况', '效', '果', '吃', '药', '喝', '药', '都', '在', '乎', '可', '有', '方', '法', '[SEP]'], ['[CLS]', '水', '肿', '性', '胰', '腺', '炎', '心', '率', '异', '常', '舒', '服', '情', '况', '两', '个', '月', '早', '晨', '头', '疼', '担', '心', '情', '况', '发', '生', '时', '间', '长', '治', '疗', '请', '问', '水', '肿', '性', '胰', '腺', '炎', '心', '率', '异', '常', '[SEP]'], ['[CLS]', '大', '疱', '类', '天', '疱', '疮', '全', '身', '皮', '肤', '红', '斑', '起', '泡', '患', '者', '常', '年', '睡', '眠', '不', '好', '服', '用', '助', '睡', '眠', '类', '药', '物', '发', '病', '[SEP]'], ['[CLS]', '小', '孩', '子', '肺', '气', '肿', '小', '孩', '身', '体', '素', '质', '不', '好', '平', '时', '出', '不', '来', '气', '孩', '子', '患', '有', '肺', '气', '肿', '病', '一', '到', '感', '冒', '咳', '嗽', '不', '停', '小', '孩', '子', '肺', '气', '肿', '毛', '病', '[SEP]'], ['[CLS]', '窦', '性', '心', '律', '房', '性', '早', '搏', '治', '疗', '半', '月', '化', '验', '仔', '细', '检', '查', '心', '电', '图', '性', '心', '律', '房', '性', '早', '搏', '偶', '发', '单', '源', '治', '疗', '情', '况', '效', '果', '治', '疗', '在', '乎', '治', '疗', '[SEP]'], ['[CLS]', '长', '期', '慢', '性', '脱', '发', '头', '顶', '部', '位', '头', '皮', '每', '天', '特', '别', '多', '油', '非', '常', '明', '显', '每', '天', '需', '要', '洗', '头', '两', '天', '不', '洗', '就', '特', '别', '痒', '时', '间', '长', '达', '十', '多', '年', '了', '湿', '发', '后', '比', '较', '明', '显', '[SEP]'], ['[CLS]', '孩', '子', '扁', '桃', '体', '发', '炎', '难', '受', '怎', '样', '治', '效', '果', '我', '家', '男', '宝', '岁', '嗓', '子', '眼', '有', '点', '痛', '察', '觉', '到', '说', '话', '声', '音', '沙', '哑', '发', '烧', '精', '神', '请', '问', '孩', '子', '扁', '桃', '体', '发', '炎', '难', '受', '怎', '样', '治', '效', '果', '[SEP]'], ['[CLS]', '儿', '童', '低', '血', '压', '治', '疗', '怎', '么', '回', '事', '感', '觉', '心', '脏', '舒', '服', '吃', '药', '控', '制', '效', '果', '医', '院', '检', '查', '吃', '药', '请', '问', '儿', '童', '低', '血', '压', '治', '疗', '[SEP]'], ['[CLS]', '大', '便', '憋', '难', '受', '病', '肠', '胃', '病', '几', '年', '弄', '不', '清', '病', '大', '便', '憋', '难', '受', '不', '知', '肠', '胃', '事', '希', '望', '韩', '谋', '钜', '谢', '谢', '[SEP]'], ['[CLS]', '请', '问', '男', '性', '更', '年', '期', '综', '合', '征', '47', '岁', '去', '年', '月', '呼', '吸', '困', '难', '冷', '汗', '痛', '濒', '死', '感', '医', '院', '仔', '细', '检', '查', '心', '电', '图', '病', '许', '多', '次', '病', '发', '症', '状', '稍', '轻', '在', '乎', '男', '性', '更', '年', '期', '综', '合', '征', '[SEP]'], ['[CLS]', '脚', '后', '跟', '干', '裂', '糖', '尿', '病', '脚', '后', '跟', '干', '裂', '糖', '尿', '病', '[SEP]'], ['[CLS]', '医', '院', '诊', '断', '过', '敏', '性', '皮', '炎', '家', '族', '史', '病', '史', '五', '月', '患', '湿', '疹', '用', '药', '好', '转', '腿', '肚', '感', '染', '愈', '合', '过', '敏', '性', '皮', '炎', '瘙', '痒', '肿', '胀', '十', '天', '症', '状', '加', '剧', '过', '敏', '性', '皮', '炎', '痒', '受', '不', '了', '病', '情', '加', '剧', '[SEP]'], ['[CLS]', '小', '儿', '腺', '样', '体', '肥', '大', '手', '术', '治', '疗', '小', '孩', '四', '岁', '一', '个', '月', '两', '年', '前', '宝', '宝', '感', '冒', '晚', '上', '睡', '觉', '感', '冒', '打', '呼', '噜', '现', '象', '近', '半', '年', '孩', '子', '流', '鼻', '涕', '厉', '害', '黄', '绿', '色', '冬', '季', '孩', '子', '晚', '上', '睡', '觉', '踏', '实', '翻', '来', '覆', '去', '害', '怕', '鼻', '炎', '[SEP]'], ['[CLS]', '小', '孩', '消', '化', '不', '良', '闹', '肚', '子', '治', '疗', '几', '天', '老', '板', '说', '精', '神', '不', '好', '影', '响', '上', '班', '状', '态', '不', '想', '晚', '上', '睡', '不', '着', '有', '时', '候', '感', '觉', '心', '慌', '慌', '不', '太', '舒', '服', '担', '心', '影', '响', '身', '体', '工', '作', '请', '问', '小', '孩', '消', '化', '不', '良', '闹', '肚', '子', '治', '疗', '[SEP]'], ['[CLS]', '患', '有', '性', '功', '能', '障', '碍', '平', '时', '应', '老', '公', '知', '晓', '总', '有', '尿', '急', '情', '况', '性', '欲', '高', '累', '做', '爱', '忍', '耐', '时', '间', '不', '长', '几', '下', '射', '精', '知', '晓', '性', '功', '能', '障', '碍', '[SEP]'], ['[CLS]', '儿', '童', '中', '耳', '炎', '流', '脓', '治', '疗', '我', '家', '孩', '子', '男', '宝', '宝', '岁', '一', '周', '孩', '子', '说', '耳', '朵', '疼', '察', '觉', '到', '还', '会', '黄', '色', '液', '体', '流', '出', '好', '像', '没', '什', '么', '食', '欲', '乏', '力', '请', '问', '儿', '童', '中', '耳', '炎', '流', '脓', '治', '疗', '[SEP]'], ['[CLS]', '前', '列', '腺', '炎', '专', '家', '想', '理', '解', '前', '列', '腺', '炎', '术', '后', '想', '理', '解', '请', '帮', '解', '惑', '谢', '谢', '在', '乎', '前', '列', '腺', '炎', '术', '后', '[SEP]'], ['[CLS]', '感', '觉', '发', '烧', '体', '温', '35', '度', '怎', '么', '回', '事', '身', '体', '舒', '服', '感', '觉', '发', '烧', '量', '体', '温', '35', '度', '温', '度', '计', '坏', '弟', '弟', '量', '37', '度', '这', '是', '怎', '么', '回', '事', '治', '疗', '情', '况', '效', '果', '想', '得', '到', '第', '一', '次', '网', '站', '[SEP]'], ['[CLS]', '脚', '后', '跟', '发', '黑', '85', '岁', '瘫', '痪', '年', '糖', '尿', '病', '年', '血', '糖', '控', '制', '空', '腹', '血', '糖', '6', '.', '5', '发', '现', '脚', '后', '跟', '发', '黑', '治', '疗', '[SEP]'], ['[CLS]', '内', '热', '外', '寒', '中', '成', '药', '高', '烧', '全', '身', '痛', '口', '干', '流', '清', '鼻', '涕', '[SEP]'], ['[CLS]', '阴', '道', '痒', '痒', '白', '带', '异', '常', '一', '段', '时', '间', '买', '卖', '特', '别', '忙', '往', '外', '跑', '上', '班', '水', '喝', '特', '别', '少', '总', '感', '觉', '阴', '道', '痒', '痒', '白', '带', '特', '多', '谈', '买', '卖', '尴', '尬', '心', '情', '烦', '躁', '想', '咨', '询', '阴', '道', '痒', '痒', '白', '带', '异', '常', '[SEP]'], ['[CLS]', '医', '生', '您', '好', '！', '我', '患', '有', '普', '秃', '多', '年', '近', '两', '年', '我', '吃', '了', '四', '个', '月', '的', '曲', '安', '西', '龙', '没', '有', '不', '良', '反', '应', '眉', '毛', '也', '长', '起', '来', '了', '今', '年', '又', '脱', '了', '想', '让', '您', '给', '我', '开', '三', '盒', '曲', '安', '西', '龙', '谢', '谢', '！', '[SEP]'], ['[CLS]', '视', '神', '经', '炎', '原', '因', '怎', '么', '回', '事', '睡', '不', '着', '特', '别', '影', '响', '板', '式', '效', '率', '朋', '友', '推', '荐', '神', '经', '内', '科', '请', '问', '视', '神', '经', '炎', '原', '因', '[SEP]'], ['[CLS]', '胃', '窦', '炎', '治', '疗', '大', '夫', '您', '好', '想', '您', '好', '闺', '密', '胃', '里', '舒', '服', '做', '胃', '镜', '仔', '细', '检', '查', '医', '生', '说', '胃', '窦', '炎', '听', '不', '懂', '知', '晓', '想', '麻', '烦', '问', '大', '夫', '治', '疗', '胃', '窦', '炎', '[SEP]'], ['[CLS]', '整', '夜', '咳', '嗽', '早', '餐', '吃', '两', '天', '身', '体', '特', '别', '舒', '服', '情', '况', '很', '久', '咳', '嗽', '医', '院', '查', '找', '资', '料', '情', '况', '请', '问', '整', '夜', '咳', '嗽', '早', '餐', '吃', '[SEP]']]
 
2021-08-24 20:24:53 train.py INFO token_ids: tensor([[ 101, 2111, 2094,  ...,    0,    0,    0],
        [ 101, 2094, 2151,  ...,    0,    0,    0],
        [ 101, 2207, 2111,  ...,    0,    0,    0],
        ...,
        [ 101, 6228, 4868,  ...,    0,    0,    0],
        [ 101, 5517, 4977,  ...,    0,    0,    0],
        [ 101, 3146, 1915,  ...,    0,    0,    0]])
 
2021-08-24 20:24:53 train.py INFO token_ids shape: torch.Size([64, 128])
 
2021-08-24 20:24:53 train.py INFO attention_mask: tensor([[1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        ...,
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0],
        [1, 1, 1,  ..., 0, 0, 0]])

2021-08-24 20:24:53 train.py INFO token_type_ids: tensor([[0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        ...,
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0],
        [0, 0, 0,  ..., 0, 0, 0]])

2021-08-24 20:24:53 train.py INFO labels: tensor([ 7,  3,  5,  2,  3,  6,  4,  3,  6,  2,  4,  5,  0,  3,  5,  6,  4,  9,
         3,  9,  4,  9,  9,  9,  7,  3,  3,  8,  6,  4,  2, 10, 10,  0,  3,  9,
         7, 10,  7,  7,  4,  1,  4,  4,  1,  5,  4,  6,  9,  9,  1,  5,  7,  0,
         5,  0,  7,  9,  8,  3,  1, 10,  6,  8])

2021-08-24 20:24:53 train.py INFO labels shape: torch.Size([64])

2021-08-24 20:25:39 train.py INFO evaluate....................
2021-08-24 20:25:47 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9603    0.9831    0.9716       591
         皮肤科     0.8957    0.8439    0.8690       173
          其它     0.6144    0.5802    0.5968       162
          妇科     0.8406    0.8056    0.8227        72
       心血管内科     0.8947    0.7612    0.8226        67
        耳鼻喉科     0.9032    0.5490    0.6829        51
        消化内科     0.8333    0.8333    0.8333        84
        小儿内科     0.8592    0.5351    0.6595       114
        呼吸内科     0.6557    0.8759    0.7500       137
        内分泌科     0.7143    0.8730    0.7857        63
        神经内科     0.6322    0.8333    0.7190        66

    accuracy                         0.8348      1580
   macro avg     0.8003    0.7703    0.7739      1580
weighted avg     0.8437    0.8348    0.8325      1580

2021-08-24 20:25:47 train.py INFO Confusion matrix: 
[[581   4   0   3   0   0   0   0   0   1   2]
 [  7 146   8   3   0   0   1   0   0   1   7]
 [  9   9  94   3   3   1   8   2   9  11  13]
 [  4   1   7  58   0   0   0   0   0   2   0]
 [  2   1   0   1  51   0   0   0   3   6   3]
 [  0   0   9   0   0  28   0   1  12   0   1]
 [  1   0   9   0   0   0  70   0   4   0   0]
 [  0   1  10   1   1   0   3  61  35   1   1]
 [  1   0   4   0   0   2   1   7 120   0   2]
 [  0   0   5   0   0   0   0   0   0  55   3]
 [  0   1   7   0   2   0   1   0   0   0  55]]
2021-08-24 20:25:47 train.py INFO Iter:8700, Train Loss:0.0423, Train Acc:89.06%, Val Loss:0.1020, Val Acc:83.48%, Time:2:12:04 
2021-08-24 20:27:12 train.py INFO evaluate....................
2021-08-24 20:27:20 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9871    0.9052    0.9444       591
         皮肤科     0.8071    0.9191    0.8595       173
          其它     0.5862    0.5247    0.5537       162
          妇科     0.8636    0.7917    0.8261        72
       心血管内科     0.7027    0.7761    0.7376        67
        耳鼻喉科     0.5556    0.6863    0.6140        51
        消化内科     0.8256    0.8452    0.8353        84
        小儿内科     0.7732    0.6579    0.7109       114
        呼吸内科     0.7365    0.7956    0.7649       137
        内分泌科     0.6437    0.8889    0.7467        63
        神经内科     0.6800    0.7727    0.7234        66

    accuracy                         0.8133      1580
   macro avg     0.7419    0.7785    0.7560      1580
weighted avg     0.8224    0.8133    0.8149      1580

2021-08-24 20:27:20 train.py INFO Confusion matrix: 
[[535   9  18   2  12   4   0   1   0   3   7]
 [  4 159   2   3   1   0   0   0   0   2   2]
 [  3  18  85   3   5   4  11   6   8  12   7]
 [  0   2   8  57   0   0   0   1   0   4   0]
 [  0   1   1   0  52   1   0   0   2   7   3]
 [  0   1   8   0   0  35   0   1   4   0   2]
 [  0   1   7   0   0   0  71   0   5   0   0]
 [  0   3   4   1   1   6   2  75  20   1   1]
 [  0   1   1   0   0  12   1  11 109   1   1]
 [  0   0   5   0   0   0   0   1   0  56   1]
 [  0   2   6   0   3   1   1   1   0   1  51]]
2021-08-24 20:27:20 train.py INFO Iter:8800, Train Loss:0.0006, Train Acc:98.44%, Val Loss:0.1286, Val Acc:81.33%, Time:2:13:36 
2021-08-24 20:28:43 train.py INFO evaluate....................
2021-08-24 20:28:51 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9754    0.9408    0.9578       591
         皮肤科     0.7822    0.9133    0.8427       173
          其它     0.6289    0.3765    0.4710       162
          妇科     0.7632    0.8056    0.7838        72
       心血管内科     0.6222    0.8358    0.7134        67
        耳鼻喉科     0.7069    0.8039    0.7523        51
        消化内科     0.8659    0.8452    0.8554        84
        小儿内科     0.7882    0.5877    0.6734       114
        呼吸内科     0.7117    0.8467    0.7733       137
        内分泌科     0.6974    0.8413    0.7626        63
        神经内科     0.6420    0.7879    0.7075        66

    accuracy                         0.8158      1580
   macro avg     0.7440    0.7804    0.7539      1580
weighted avg     0.8182    0.8158    0.8102      1580

2021-08-24 20:28:51 train.py INFO Confusion matrix: 
[[556   6   8   7   4   0   0   0   0   4   6]
 [  8 158   1   3   2   0   0   0   1   0   0]
 [  5  24  61   6  17   4   7   5   8  12  13]
 [  1   6   6  58   0   0   0   1   0   0   0]
 [  0   1   1   0  56   1   0   0   0   5   3]
 [  0   1   2   0   0  41   0   1   5   0   1]
 [  0   1   5   0   1   0  71   0   5   0   1]
 [  0   3   4   2   2   4   2  67  28   1   1]
 [  0   0   2   0   1   7   1   9 116   0   1]
 [  0   0   3   0   3   0   0   1   0  53   3]
 [  0   2   4   0   4   1   1   1   0   1  52]]
2021-08-24 20:28:51 train.py INFO Iter:8900, Train Loss:0.0054, Train Acc:92.19%, Val Loss:0.1267, Val Acc:81.58%, Time:2:15:07 
2021-08-24 20:30:12 train.py INFO evaluate....................
2021-08-24 20:30:20 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9711    0.9662    0.9686       591
         皮肤科     0.8432    0.9017    0.8715       173
          其它     0.6042    0.5370    0.5686       162
          妇科     0.8525    0.7222    0.7820        72
       心血管内科     0.8088    0.8209    0.8148        67
        耳鼻喉科     0.8667    0.5098    0.6420        51
        消化内科     0.7407    0.9524    0.8333        84
        小儿内科     0.7660    0.6316    0.6923       114
        呼吸内科     0.6897    0.8759    0.7717       137
        内分泌科     0.7937    0.7937    0.7937        63
        神经内科     0.7692    0.7576    0.7634        66

    accuracy                         0.8348      1580
   macro avg     0.7914    0.7699    0.7729      1580
weighted avg     0.8369    0.8348    0.8316      1580

2021-08-24 20:30:20 train.py INFO Confusion matrix: 
[[571   6   8   3   0   0   0   1   0   1   1]
 [  8 156   4   2   0   0   2   0   1   0   0]
 [  6  14  87   3   5   1  20   8   8   6   4]
 [  2   2  12  52   0   0   1   1   0   2   0]
 [  1   1   1   0  55   0   0   1   2   4   2]
 [  0   1   9   0   0  26   0   1  13   0   1]
 [  0   0   1   0   0   0  80   0   3   0   0]
 [  0   3   5   1   1   0   3  72  27   0   2]
 [  0   0   2   0   1   2   1   9 120   0   2]
 [  0   0   6   0   3   0   0   1   0  50   3]
 [  0   2   9   0   3   1   1   0   0   0  50]]
2021-08-24 20:30:20 train.py INFO Iter:9000, Train Loss:0.0043, Train Acc:96.88%, Val Loss:0.1022, Val Acc:83.48%, Time:2:16:36 
2021-08-24 20:31:42 train.py INFO evaluate....................
2021-08-24 20:31:50 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9666    0.9780    0.9722       591
         皮肤科     0.8564    0.8960    0.8757       173
          其它     0.6463    0.5864    0.6149       162
          妇科     0.8169    0.8056    0.8112        72
       心血管内科     0.8525    0.7761    0.8125        67
        耳鼻喉科     0.8333    0.5882    0.6897        51
        消化内科     0.8780    0.8571    0.8675        84
        小儿内科     0.8272    0.5877    0.6872       114
        呼吸内科     0.6611    0.8686    0.7508       137
        内分泌科     0.6790    0.8730    0.7639        63
        神经内科     0.7903    0.7424    0.7656        66

    accuracy                         0.8418      1580
   macro avg     0.8007    0.7781    0.7828      1580
weighted avg     0.8456    0.8418    0.8395      1580

2021-08-24 20:31:50 train.py INFO Confusion matrix: 
[[578   6   0   3   0   0   0   0   1   2   1]
 [  8 155   4   4   0   0   0   0   1   1   0]
 [  7  14  95   4   4   2   6   4   9  11   6]
 [  2   2   7  58   0   0   0   0   1   2   0]
 [  1   1   1   0  52   0   0   0   2   8   2]
 [  0   0   7   0   0  30   0   2  11   0   1]
 [  0   0   7   0   0   0  72   0   5   0   0]
 [  0   2   6   1   0   1   2  67  31   2   2]
 [  0   0   3   0   2   3   1   8 119   0   1]
 [  1   0   7   0   0   0   0   0   0  55   0]
 [  1   1  10   1   3   0   1   0   0   0  49]]
2021-08-24 20:31:50 train.py INFO Iter:9100, Train Loss:0.0016, Train Acc:93.75%, Val Loss:0.0946, Val Acc:84.18%, Time:2:18:07 
2021-08-24 20:33:12 train.py INFO evaluate....................
2021-08-24 20:33:20 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9778    0.9679    0.9728       591
         皮肤科     0.8779    0.8728    0.8754       173
          其它     0.6000    0.5370    0.5668       162
          妇科     0.7711    0.8889    0.8258        72
       心血管内科     0.8947    0.7612    0.8226        67
        耳鼻喉科     0.8276    0.4706    0.6000        51
        消化内科     0.8718    0.8095    0.8395        84
        小儿内科     0.6159    0.8158    0.7019       114
        呼吸内科     0.7279    0.7226    0.7253       137
        内分泌科     0.7761    0.8254    0.8000        63
        神经内科     0.6753    0.7879    0.7273        66

    accuracy                         0.8310      1580
   macro avg     0.7833    0.7691    0.7688      1580
weighted avg     0.8362    0.8310    0.8302      1580

2021-08-24 20:33:20 train.py INFO Confusion matrix: 
[[572   5   5   5   0   0   0   1   0   2   1]
 [  6 151   9   4   1   0   0   0   1   1   0]
 [  7  11  87   8   3   1   6  14   7   7  11]
 [  0   2   4  64   0   0   0   2   0   0   0]
 [  0   1   2   0  51   0   0   1   3   5   4]
 [  0   0  10   0   0  24   0   3  12   0   2]
 [  0   0   8   0   0   0  68   3   5   0   0]
 [  0   1   5   1   1   1   2  93   9   0   1]
 [  0   0   2   0   0   3   1  29  99   0   3]
 [  0   0   5   1   0   0   0   2   0  52   3]
 [  0   1   8   0   1   0   1   3   0   0  52]]
2021-08-24 20:33:20 train.py INFO Iter:9200, Train Loss:0.0007, Train Acc:95.31%, Val Loss:0.1045, Val Acc:83.10%, Time:2:19:37 
2021-08-24 20:34:42 train.py INFO evaluate....................
2021-08-24 20:34:50 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9807    0.9442    0.9621       591
         皮肤科     0.7193    0.9480    0.8180       173
          其它     0.5874    0.5185    0.5508       162
          妇科     0.8451    0.8333    0.8392        72
       心血管内科     0.9455    0.7761    0.8525        67
        耳鼻喉科     0.7442    0.6275    0.6809        51
        消化内科     0.8800    0.7857    0.8302        84
        小儿内科     0.8657    0.5088    0.6409       114
        呼吸内科     0.6575    0.8686    0.7484       137
        内分泌科     0.8000    0.8254    0.8125        63
        神经内科     0.6024    0.7576    0.6711        66

    accuracy                         0.8196      1580
   macro avg     0.7843    0.7631    0.7642      1580
weighted avg     0.8317    0.8196    0.8180      1580

2021-08-24 20:34:50 train.py INFO Confusion matrix: 
[[558  18   5   2   0   0   0   0   0   1   7]
 [  3 164   2   3   0   0   0   0   1   0   0]
 [  5  28  84   4   0   3   5   1  11   6  15]
 [  2   3   5  60   0   0   1   1   0   0   0]
 [  1   2   2   0  52   0   0   0   3   5   2]
 [  0   2   3   0   0  32   0   1  11   0   2]
 [  0   0  11   0   0   0  66   1   5   0   1]
 [  0   5  11   1   1   3   2  58  30   1   2]
 [  0   2   4   0   0   5   1   5 119   0   1]
 [  0   0   8   0   0   0   0   0   0  52   3]
 [  0   4   8   1   2   0   0   0   1   0  50]]
2021-08-24 20:34:50 train.py INFO Iter:9300, Train Loss:0.0030, Train Acc:93.75%, Val Loss:0.1341, Val Acc:81.96%, Time:2:21:06 
2021-08-24 20:36:13 train.py INFO evaluate....................
2021-08-24 20:36:21 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9694    0.9645    0.9669       591
         皮肤科     0.8786    0.8786    0.8786       173
          其它     0.6196    0.6235    0.6215       162
          妇科     0.8308    0.7500    0.7883        72
       心血管内科     0.8833    0.7910    0.8346        67
        耳鼻喉科     0.7358    0.7647    0.7500        51
        消化内科     0.8276    0.8571    0.8421        84
        小儿内科     0.7857    0.6754    0.7264       114
        呼吸内科     0.7534    0.8029    0.7774       137
        内分泌科     0.7260    0.8413    0.7794        63
        神经内科     0.7162    0.8030    0.7571        66

    accuracy                         0.8443      1580
   macro avg     0.7933    0.7956    0.7930      1580
weighted avg     0.8463    0.8443    0.8444      1580

2021-08-24 20:36:21 train.py INFO Confusion matrix: 
[[570   7   6   3   0   0   0   0   0   3   2]
 [  8 152   7   2   0   0   0   0   1   1   2]
 [  6   9 101   5   2   3   8   6   6   7   9]
 [  3   1  10  54   1   0   0   1   0   2   0]
 [  0   1   2   0  53   1   0   0   1   7   2]
 [  0   0   5   0   0  39   0   1   5   0   1]
 [  1   0   7   0   0   0  72   0   4   0   0]
 [  0   2   6   1   1   2   5  77  19   0   1]
 [  0   0   4   0   0   8   1  13 110   0   1]
 [  0   0   6   0   1   0   0   0   0  53   3]
 [  0   1   9   0   2   0   1   0   0   0  53]]
2021-08-24 20:36:21 train.py INFO saving model..........
2021-08-24 20:36:23 train.py INFO Iter:9400, Train Loss:0.0097, Train Acc:92.19%, Val Loss:0.0852, Val Acc:84.43%, Time:2:22:39 *
2021-08-24 20:37:44 train.py INFO evaluate....................
2021-08-24 20:37:52 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9645    0.9645    0.9645       591
         皮肤科     0.9068    0.8439    0.8743       173
          其它     0.5067    0.6975    0.5870       162
          妇科     0.8871    0.7639    0.8209        72
       心血管内科     1.0000    0.6119    0.7593        67
        耳鼻喉科     0.8485    0.5490    0.6667        51
        消化内科     0.7117    0.9405    0.8103        84
        小儿内科     0.7778    0.4912    0.6022       114
        呼吸内科     0.6281    0.9124    0.7440       137
        内分泌科     0.8250    0.5238    0.6408        63
        神经内科     0.8723    0.6212    0.7257        66

    accuracy                         0.8146      1580
   macro avg     0.8117    0.7200    0.7450      1580
weighted avg     0.8400    0.8146    0.8147      1580

2021-08-24 20:37:52 train.py INFO Confusion matrix: 
[[570   4  15   1   0   0   0   0   0   0   1]
 [ 10 146  10   3   0   0   3   0   1   0   0]
 [  5   6 113   2   0   1  18   4  10   1   2]
 [  2   1  12  55   0   0   1   1   0   0   0]
 [  2   1  11   0  41   0   2   0   4   5   1]
 [  0   0   7   0   0  28   0   1  14   0   1]
 [  0   0   3   0   0   0  79   0   2   0   0]
 [  0   1   8   1   0   1   5  56  42   0   0]
 [  0   0   3   0   0   3   1   5 125   0   0]
 [  0   0  28   0   0   0   1   0   0  33   1]
 [  2   2  13   0   0   0   1   5   1   1  41]]
2021-08-24 20:37:52 train.py INFO Iter:9500, Train Loss:0.0059, Train Acc:89.06%, Val Loss:0.1307, Val Acc:81.46%, Time:2:24:08 
2021-08-24 20:39:14 train.py INFO evaluate....................
2021-08-24 20:39:22 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.8540    1.0000    0.9213       591
         皮肤科     0.9291    0.7572    0.8344       173
          其它     0.6535    0.4074    0.5019       162
          妇科     0.9216    0.6528    0.7642        72
       心血管内科     0.6707    0.8209    0.7383        67
        耳鼻喉科     0.7500    0.7059    0.7273        51
        消化内科     0.7549    0.9167    0.8280        84
        小儿内科     0.7327    0.6491    0.6884       114
        呼吸内科     0.7448    0.7883    0.7660       137
        内分泌科     0.8226    0.8095    0.8160        63
        神经内科     0.7818    0.6515    0.7107        66

    accuracy                         0.8095      1580
   macro avg     0.7832    0.7418    0.7542      1580
weighted avg     0.8059    0.8095    0.7994      1580

2021-08-24 20:39:22 train.py INFO Confusion matrix: 
[[591   0   0   0   0   0   0   0   0   0   0]
 [ 35 131   5   1   0   0   0   0   1   0   0]
 [ 35   7  66   2  14   2  18   3   6   6   3]
 [ 17   1   4  47   1   0   1   1   0   0   0]
 [  3   0   1   0  55   0   0   0   2   4   2]
 [  0   0   3   0   0  36   0   4   7   0   1]
 [  1   0   3   0   0   0  77   0   3   0   0]
 [  3   1   8   1   2   4   2  74  18   0   1]
 [  1   0   3   0   0   5   1  16 108   0   3]
 [  3   0   3   0   4   0   0   0   0  51   2]
 [  3   1   5   0   6   1   3   3   0   1  43]]
2021-08-24 20:39:22 train.py INFO Iter:9600, Train Loss:0.0089, Train Acc:93.75%, Val Loss:0.1449, Val Acc:80.95%, Time:2:25:39 
2021-08-24 20:40:46 train.py INFO evaluate....................
2021-08-24 20:40:54 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9633    0.9763    0.9697       591
         皮肤科     0.8982    0.8671    0.8824       173
          其它     0.6364    0.5617    0.5967       162
          妇科     0.8154    0.7361    0.7737        72
       心血管内科     0.8667    0.7761    0.8189        67
        耳鼻喉科     0.8889    0.1569    0.2667        51
        消化内科     0.7170    0.9048    0.8000        84
        小儿内科     0.7000    0.6754    0.6875       114
        呼吸内科     0.5979    0.8467    0.7009       137
        内分泌科     0.6628    0.9048    0.7651        63
        神经内科     0.8537    0.5303    0.6542        66

    accuracy                         0.8177      1580
   macro avg     0.7818    0.7215    0.7196      1580
weighted avg     0.8291    0.8177    0.8099      1580

2021-08-24 20:40:54 train.py INFO Confusion matrix: 
[[577   6   2   3   0   0   0   0   0   3   0]
 [  7 150  10   3   0   0   2   0   1   0   0]
 [  8   5  91   4   4   0  14   7  12  14   3]
 [  4   1   8  53   0   0   4   2   0   0   0]
 [  0   1   3   0  52   0   2   1   2   5   1]
 [  0   0   6   0   0   8   1   3  32   0   1]
 [  1   0   3   0   0   0  76   0   4   0   0]
 [  1   1   4   1   0   1   4  77  23   1   1]
 [  0   0   3   0   0   0   1  17 116   0   0]
 [  1   0   3   0   0   0   1   1   0  57   0]
 [  0   3  10   1   4   0   1   2   4   6  35]]
2021-08-24 20:40:54 train.py INFO Iter:9700, Train Loss:0.0099, Train Acc:93.75%, Val Loss:0.1320, Val Acc:81.77%, Time:2:27:11 
2021-08-24 20:42:18 train.py INFO evaluate....................
2021-08-24 20:42:26 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9695    0.9695    0.9695       591
         皮肤科     0.8051    0.9075    0.8533       173
          其它     0.6397    0.5370    0.5839       162
          妇科     0.7241    0.8750    0.7925        72
       心血管内科     0.9565    0.6567    0.7788        67
        耳鼻喉科     0.7255    0.7255    0.7255        51
        消化内科     0.8571    0.8571    0.8571        84
        小儿内科     0.5434    0.8246    0.6551       114
        呼吸内科     0.7736    0.5985    0.6749       137
        内分泌科     0.7761    0.8254    0.8000        63
        神经内科     0.8182    0.5455    0.6545        66

    accuracy                         0.8209      1580
   macro avg     0.7808    0.7566    0.7586      1580
weighted avg     0.8304    0.8209    0.8191      1580

2021-08-24 20:42:26 train.py INFO Confusion matrix: 
[[573   5   2   8   0   1   0   0   0   2   0]
 [  7 157   3   4   0   0   0   0   1   1   0]
 [  7  25  87   8   1   4   8  13   3   3   3]
 [  0   1   5  63   0   0   0   3   0   0   0]
 [  1   1   7   0  44   0   0   2   3   7   2]
 [  0   0   1   0   0  37   0   6   6   0   1]
 [  1   0   6   0   0   0  72   2   3   0   0]
 [  0   1   4   1   0   3   2  94   7   1   1]
 [  0   0   2   1   0   4   1  46  82   0   1]
 [  1   0   8   1   0   0   0   1   0  52   0]
 [  1   5  11   1   1   2   1   6   1   1  36]]
2021-08-24 20:42:26 train.py INFO Iter:9800, Train Loss:0.0027, Train Acc:93.75%, Val Loss:0.1128, Val Acc:82.09%, Time:2:28:42 
2021-08-24 20:43:49 train.py INFO evaluate....................
2021-08-24 20:43:57 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9675    0.9560    0.9617       591
         皮肤科     0.8362    0.8555    0.8457       173
          其它     0.6173    0.6173    0.6173       162
          妇科     0.8056    0.8056    0.8056        72
       心血管内科     0.9574    0.6716    0.7895        67
        耳鼻喉科     0.7500    0.7059    0.7273        51
        消化内科     0.8519    0.8214    0.8364        84
        小儿内科     0.7576    0.6579    0.7042       114
        呼吸内科     0.7125    0.8321    0.7677       137
        内分泌科     0.7500    0.8571    0.8000        63
        神经内科     0.6795    0.8030    0.7361        66

    accuracy                         0.8335      1580
   macro avg     0.7896    0.7803    0.7810      1580
weighted avg     0.8383    0.8335    0.8338      1580

2021-08-24 20:43:57 train.py INFO Confusion matrix: 
[[565  16   2   5   0   0   0   0   0   1   2]
 [  2 148  14   2   0   0   1   0   1   2   3]
 [  8   9 100   5   0   3   7   7   6  10   7]
 [  4   1   8  58   0   0   0   1   0   0   0]
 [  3   1   2   1  45   0   0   0   3   5   7]
 [  0   0   3   0   0  36   0   2   9   0   1]
 [  1   0  10   0   0   0  69   0   4   0   0]
 [  0   1   5   1   1   4   2  75  23   0   2]
 [  0   0   3   0   0   5   1  12 114   0   2]
 [  1   0   6   0   0   0   0   1   0  54   1]
 [  0   1   9   0   1   0   1   1   0   0  53]]
2021-08-24 20:43:57 train.py INFO Iter:9900, Train Loss:0.0050, Train Acc:92.19%, Val Loss:0.0964, Val Acc:83.35%, Time:2:30:14 
2021-08-24 20:45:19 train.py INFO evaluate....................
2021-08-24 20:45:27 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9711    0.9679    0.9695       591
         皮肤科     0.8441    0.9075    0.8747       173
          其它     0.5745    0.6667    0.6171       162
          妇科     0.7241    0.8750    0.7925        72
       心血管内科     0.8500    0.7612    0.8031        67
        耳鼻喉科     0.7556    0.6667    0.7083        51
        消化内科     0.8675    0.8571    0.8623        84
        小儿内科     0.7339    0.7018    0.7175       114
        呼吸内科     0.7903    0.7153    0.7510       137
        内分泌科     0.8475    0.7937    0.8197        63
        神经内科     0.7400    0.5606    0.6379        66

    accuracy                         0.8367      1580
   macro avg     0.7908    0.7703    0.7776      1580
weighted avg     0.8403    0.8367    0.8368      1580

2021-08-24 20:45:27 train.py INFO Confusion matrix: 
[[572   7   2   5   0   0   0   0   0   3   2]
 [  7 157   4   5   0   0   0   0   0   0   0]
 [  7  14 108   8   4   2   7   5   2   3   2]
 [  3   1   5  63   0   0   0   0   0   0   0]
 [  0   2   5   0  51   1   0   1   1   3   3]
 [  0   0   7   1   0  34   0   2   6   0   1]
 [  0   0   9   0   0   0  72   0   3   0   0]
 [  0   1  11   2   1   1   3  80  14   0   1]
 [  0   1   8   1   0   7   1  19  98   0   2]
 [  0   0   8   2   1   0   0   0   0  50   2]
 [  0   3  21   0   3   0   0   2   0   0  37]]
2021-08-24 20:45:27 train.py INFO Iter:10000, Train Loss:0.0027, Train Acc:96.88%, Val Loss:0.1185, Val Acc:83.67%, Time:2:31:44 
2021-08-24 20:46:50 train.py INFO evaluate....................
2021-08-24 20:46:58 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9436    0.9915    0.9670       591
         皮肤科     0.9355    0.8382    0.8841       173
          其它     0.6777    0.5062    0.5795       162
          妇科     0.7750    0.8611    0.8158        72
       心血管内科     0.9216    0.7015    0.7966        67
        耳鼻喉科     0.5513    0.8431    0.6667        51
        消化内科     0.7290    0.9286    0.8168        84
        小儿内科     0.7595    0.5263    0.6218       114
        呼吸内科     0.6763    0.8540    0.7548       137
        内分泌科     0.8000    0.7619    0.7805        63
        神经内科     0.7636    0.6364    0.6942        66

    accuracy                         0.8291      1580
   macro avg     0.7757    0.7681    0.7616      1580
weighted avg     0.8331    0.8291    0.8243      1580

2021-08-24 20:46:58 train.py INFO Confusion matrix: 
[[586   0   0   4   0   0   0   0   0   0   1]
 [ 11 145   7   6   0   0   1   0   2   0   1]
 [ 13   8  82   6   2   9  18   6   7   7   4]
 [  3   0   2  62   0   2   1   2   0   0   0]
 [  3   0   4   1  47   1   1   1   3   4   2]
 [  0   0   2   0   0  43   0   1   4   0   1]
 [  0   0   2   0   0   0  78   2   2   0   0]
 [  1   1   1   0   0   9   3  60  37   1   1]
 [  1   0   1   0   0  11   1   5 117   0   1]
 [  1   0   9   1   0   1   1   0   0  48   2]
 [  2   1  11   0   2   2   3   2   1   0  42]]
2021-08-24 20:46:58 train.py INFO Iter:10100, Train Loss:0.0243, Train Acc:87.50%, Val Loss:0.1153, Val Acc:82.91%, Time:2:33:14 
2021-08-24 20:48:19 train.py INFO evaluate....................
2021-08-24 20:48:27 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9632    0.9746    0.9689       591
         皮肤科     0.8281    0.9191    0.8712       173
          其它     0.5948    0.5617    0.5778       162
          妇科     0.8714    0.8472    0.8592        72
       心血管内科     0.7500    0.8060    0.7770        67
        耳鼻喉科     0.7500    0.7059    0.7273        51
        消化内科     0.9062    0.6905    0.7838        84
        小儿内科     0.8415    0.6053    0.7041       114
        呼吸内科     0.7073    0.8467    0.7708       137
        内分泌科     0.7639    0.8730    0.8148        63
        神经内科     0.7077    0.6970    0.7023        66

    accuracy                         0.8361      1580
   macro avg     0.7895    0.7752    0.7779      1580
weighted avg     0.8379    0.8361    0.8337      1580

2021-08-24 20:48:27 train.py INFO Confusion matrix: 
[[576   6   4   3   0   0   0   0   0   1   1]
 [  7 159   3   1   0   0   0   0   1   1   1]
 [  8  20  91   4   7   4   3   2   4   8  11]
 [  1   1   7  61   0   0   0   1   0   1   0]
 [  1   1   1   0  54   0   0   1   3   4   2]
 [  0   0   5   0   0  36   0   0   9   0   1]
 [  1   1  19   0   0   0  58   0   5   0   0]
 [  0   2   9   1   1   4   2  69  25   0   1]
 [  1   1   2   0   2   4   1   9 116   0   1]
 [  1   0   5   0   1   0   0   0   0  55   1]
 [  2   1   7   0   7   0   0   0   1   2  46]]
2021-08-24 20:48:27 train.py INFO Iter:10200, Train Loss:0.0047, Train Acc:93.75%, Val Loss:0.0881, Val Acc:83.61%, Time:2:34:43 
2021-08-24 20:49:47 train.py INFO evaluate....................
2021-08-24 20:49:55 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9728    0.9695    0.9712       591
         皮肤科     0.8889    0.8786    0.8837       173
          其它     0.6752    0.4877    0.5663       162
          妇科     0.8082    0.8194    0.8138        72
       心血管内科     0.8421    0.7164    0.7742        67
        耳鼻喉科     0.7391    0.6667    0.7010        51
        消化内科     0.8734    0.8214    0.8466        84
        小儿内科     0.7403    0.5000    0.5969       114
        呼吸内科     0.6378    0.9124    0.7508       137
        内分泌科     0.7067    0.8413    0.7681        63
        神经内科     0.5600    0.8485    0.6747        66

    accuracy                         0.8259      1580
   macro avg     0.7677    0.7693    0.7588      1580
weighted avg     0.8336    0.8259    0.8226      1580

2021-08-24 20:49:55 train.py INFO Confusion matrix: 
[[573   6   1   5   0   0   0   1   0   1   4]
 [  5 152   4   1   1   1   0   0   1   3   5]
 [  8   9  79   6   4   3   6   8  10   8  21]
 [  1   1   6  59   0   0   0   2   1   2   0]
 [  1   1   1   1  48   0   0   0   3   8   4]
 [  0   0   4   0   0  34   0   1  10   0   2]
 [  0   0   9   0   0   0  69   2   4   0   0]
 [  0   1   4   1   1   3   3  57  41   0   3]
 [  1   0   1   0   0   5   1   4 125   0   0]
 [  0   0   4   0   0   0   0   1   0  53   5]
 [  0   1   4   0   3   0   0   1   1   0  56]]
2021-08-24 20:49:55 train.py INFO Iter:10300, Train Loss:0.0075, Train Acc:95.31%, Val Loss:0.1244, Val Acc:82.59%, Time:2:36:12 
2021-08-24 20:51:17 train.py INFO evaluate....................
2021-08-24 20:51:25 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9555    0.9814    0.9683       591
         皮肤科     0.8516    0.8960    0.8732       173
          其它     0.7019    0.4506    0.5489       162
          妇科     0.7590    0.8750    0.8129        72
       心血管内科     0.9767    0.6269    0.7636        67
        耳鼻喉科     0.6786    0.7451    0.7103        51
        消化内科     0.8767    0.7619    0.8153        84
        小儿内科     0.7200    0.6316    0.6729       114
        呼吸内科     0.7188    0.8394    0.7744       137
        内分泌科     0.8060    0.8571    0.8308        63
        神经内科     0.5333    0.8485    0.6550        66

    accuracy                         0.8304      1580
   macro avg     0.7798    0.7739    0.7660      1580
weighted avg     0.8358    0.8304    0.8260      1580

2021-08-24 20:51:25 train.py INFO Confusion matrix: 
[[580   8   0   1   0   0   0   0   0   1   1]
 [  7 155   1   7   0   0   0   0   1   0   2]
 [  7  14  73  10   0   3   6   7   8   7  27]
 [  2   0   5  63   0   0   0   2   0   0   0]
 [  6   1   1   0  42   0   0   1   3   5   8]
 [  0   2   2   0   0  38   0   1   7   0   1]
 [  2   0   9   0   0   0  64   4   5   0   0]
 [  1   1   4   1   0   9   2  72  21   0   3]
 [  1   0   1   0   0   6   1  10 115   0   3]
 [  0   0   3   1   0   0   0   1   0  54   4]
 [  1   1   5   0   1   0   0   2   0   0  56]]
2021-08-24 20:51:25 train.py INFO Iter:10400, Train Loss:0.0012, Train Acc:96.88%, Val Loss:0.1019, Val Acc:83.04%, Time:2:37:42 
2021-08-24 20:52:47 train.py INFO evaluate....................
2021-08-24 20:52:55 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9610    0.9594    0.9602       591
         皮肤科     0.8010    0.8844    0.8407       173
          其它     0.7895    0.3704    0.5042       162
          妇科     0.6667    0.8889    0.7619        72
       心血管内科     0.7746    0.8209    0.7971        67
        耳鼻喉科     0.6545    0.7059    0.6792        51
        消化内科     0.7755    0.9048    0.8352        84
        小儿内科     0.6698    0.6228    0.6455       114
        呼吸内科     0.6784    0.8467    0.7532       137
        内分泌科     0.7179    0.8889    0.7943        63
        神经内科     0.8125    0.5909    0.6842        66

    accuracy                         0.8184      1580
   macro avg     0.7547    0.7713    0.7505      1580
weighted avg     0.8234    0.8184    0.8099      1580

2021-08-24 20:52:55 train.py INFO Confusion matrix: 
[[567   6   0  13   1   0   0   1   0   2   1]
 [  7 153   2   6   0   0   0   1   1   3   0]
 [  8  22  60  10   7   3  17  12   9  10   4]
 [  3   1   2  64   0   0   0   2   0   0   0]
 [  1   1   0   0  55   0   0   1   3   5   1]
 [  0   1   2   0   0  36   0   1  10   0   1]
 [  0   0   2   0   0   0  76   1   5   0   0]
 [  0   2   2   0   0   8   4  71  26   0   1]
 [  0   0   1   1   2   6   1  10 116   0   0]
 [  1   1   1   1   0   0   0   2   0  56   1]
 [  3   4   4   1   6   2   0   4   1   2  39]]
2021-08-24 20:52:55 train.py INFO Iter:10500, Train Loss:0.0074, Train Acc:93.75%, Val Loss:0.1277, Val Acc:81.84%, Time:2:39:11 
2021-08-24 20:54:16 train.py INFO evaluate....................
2021-08-24 20:54:24 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9525    0.9831    0.9675       591
         皮肤科     0.9420    0.7514    0.8360       173
          其它     0.4895    0.7222    0.5835       162
          妇科     0.8108    0.8333    0.8219        72
       心血管内科     0.9348    0.6418    0.7611        67
        耳鼻喉科     0.7273    0.6275    0.6737        51
        消化内科     0.8421    0.7619    0.8000        84
        小儿内科     0.8023    0.6053    0.6900       114
        呼吸内科     0.7368    0.8175    0.7751       137
        内分泌科     0.8333    0.7143    0.7692        63
        神经内科     0.7377    0.6818    0.7087        66

    accuracy                         0.8215      1580
   macro avg     0.8008    0.7400    0.7624      1580
weighted avg     0.8403    0.8215    0.8245      1580

2021-08-24 20:54:24 train.py INFO Confusion matrix: 
[[581   0   4   5   0   0   0   0   0   0   1]
 [  9 130  29   3   0   0   1   0   1   0   0]
 [  9   5 117   5   1   3   5   2   7   3   5]
 [  4   0   6  60   0   0   0   1   0   0   1]
 [  2   0  10   0  43   0   0   1   3   4   4]
 [  0   0   6   0   0  32   0   1  11   0   1]
 [  1   0  17   0   0   0  64   0   2   0   0]
 [  1   1  16   1   0   4   4  69  16   1   1]
 [  1   0   3   0   0   5   1  12 112   0   3]
 [  0   0  18   0   0   0   0   0   0  45   0]
 [  2   2  13   0   2   0   1   0   0   1  45]]
2021-08-24 20:54:24 train.py INFO Iter:10600, Train Loss:0.0048, Train Acc:95.31%, Val Loss:0.1188, Val Acc:82.15%, Time:2:40:40 
2021-08-24 20:55:48 train.py INFO evaluate....................
2021-08-24 20:55:56 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9819    0.9188    0.9493       591
         皮肤科     0.6601    0.9653    0.7840       173
          其它     0.6476    0.4198    0.5094       162
          妇科     0.8382    0.7917    0.8143        72
       心血管内科     0.6264    0.8507    0.7215        67
        耳鼻喉科     0.7941    0.5294    0.6353        51
        消化内科     0.8068    0.8452    0.8256        84
        小儿内科     0.8125    0.5702    0.6701       114
        呼吸内科     0.7000    0.8686    0.7752       137
        内分泌科     0.6933    0.8254    0.7536        63
        神经内科     0.7143    0.6818    0.6977        66

    accuracy                         0.8044      1580
   macro avg     0.7523    0.7515    0.7396      1580
weighted avg     0.8161    0.8044    0.8000      1580

2021-08-24 20:55:56 train.py INFO Confusion matrix: 
[[543  21   4   8   2   0   2   0   1   7   3]
 [  4 167   1   0   0   0   0   0   1   0   0]
 [  4  34  68   3  15   3  12   3   5   8   7]
 [  2   2   6  57   1   0   0   1   0   2   1]
 [  0   1   1   0  57   0   0   0   1   6   1]
 [  0   6   0   0   1  27   0   1  15   0   1]
 [  0   0   7   0   2   0  71   0   4   0   0]
 [  0  15   3   0   2   2   2  65  24   0   1]
 [  0   3   0   0   2   2   1   8 119   0   2]
 [  0   0   6   0   1   0   0   2   0  52   2]
 [  0   4   9   0   8   0   0   0   0   0  45]]
2021-08-24 20:55:56 train.py INFO Iter:10700, Train Loss:0.0224, Train Acc:90.62%, Val Loss:0.1540, Val Acc:80.44%, Time:2:42:12 
2021-08-24 20:57:20 train.py INFO evaluate....................
2021-08-24 20:57:28 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9585    0.9763    0.9673       591
         皮肤科     0.9365    0.6821    0.7893       173
          其它     0.5568    0.6358    0.5937       162
          妇科     0.7059    0.8333    0.7643        72
       心血管内科     0.8125    0.7761    0.7939        67
        耳鼻喉科     0.7143    0.6863    0.7000        51
        消化内科     0.7935    0.8690    0.8295        84
        小儿内科     0.7347    0.6316    0.6792       114
        呼吸内科     0.7108    0.8613    0.7789       137
        内分泌科     0.7959    0.6190    0.6964        63
        神经内科     0.7656    0.7424    0.7538        66

    accuracy                         0.8203      1580
   macro avg     0.7714    0.7558    0.7588      1580
weighted avg     0.8284    0.8203    0.8201      1580

2021-08-24 20:57:28 train.py INFO Confusion matrix: 
[[577   3   2   5   0   1   0   1   0   1   1]
 [ 11 118  22  10   1   0   4   0   1   3   3]
 [  7   4 103   8   6   4  10   8   5   2   5]
 [  4   0   5  60   0   0   1   1   0   0   1]
 [  1   0   6   0  52   1   0   1   1   4   1]
 [  0   0   2   0   0  35   0   2  12   0   0]
 [  0   0   7   0   0   0  73   0   4   0   0]
 [  1   1   6   1   0   4   3  72  25   0   1]
 [  1   0   1   0   0   4   1  12 118   0   0]
 [  0   0  19   1   0   0   0   1   0  39   3]
 [  0   0  12   0   5   0   0   0   0   0  49]]
2021-08-24 20:57:28 train.py INFO Iter:10800, Train Loss:0.0162, Train Acc:92.19%, Val Loss:0.1317, Val Acc:82.03%, Time:2:43:45 
2021-08-24 20:57:34 train.py INFO predict....................
2021-08-24 20:57:34 train.py INFO evaluate....................
2021-08-24 20:57:42 train.py INFO result: 
              precision    recall  f1-score   support

          男科     0.9155    0.9898    0.9512       591
         皮肤科     0.8516    0.9012    0.8757       172
          其它     0.7551    0.2270    0.3491       163
          妇科     0.7294    0.8493    0.7848        73
       心血管内科     0.6912    0.7121    0.7015        66
        耳鼻喉科     0.5616    0.8039    0.6613        51
        消化内科     0.7027    0.9398    0.8041        83
        小儿内科     0.6579    0.6579    0.6579       114
        呼吸内科     0.6864    0.8529    0.7607       136
        内分泌科     0.8696    0.6250    0.7273        64
        神经内科     0.7273    0.4776    0.5766        67

    accuracy                         0.8025      1580
   macro avg     0.7408    0.7306    0.7136      1580
weighted avg     0.8033    0.8025    0.7831      1580

2021-08-24 20:57:42 train.py INFO Confusion matrix: 
[[585   3   0   1   1   1   0   0   0   0   0]
 [  6 155   2   2   0   2   2   0   2   0   1]
 [ 28  16  37   9   4  14  15  20  13   2   5]
 [  6   3   0  62   0   0   2   0   0   0   0]
 [  1   0   1   0  47   1   3   1   5   4   3]
 [  0   0   0   0   0  41   0   2   8   0   0]
 [  1   0   0   2   1   1  78   0   0   0   0]
 [  1   0   5   3   1   7   5  75  17   0   0]
 [  1   0   0   0   0   5   1  13 116   0   0]
 [  3   3   1   5   5   0   2   1   1  40   3]
 [  7   2   3   1   9   1   3   2   7   0  32]]
2021-08-24 20:57:42 train.py INFO Test Loss:  0.19,  Test Acc: 80.25%
2021-08-24 20:57:42 train.py INFO Time usage:0:00:08
